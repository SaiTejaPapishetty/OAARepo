{
  "swagger" : "2.0",
  "info" : {
    "description" : "APIs to cater for Sales Activity functionality in OPERA Cloud. <br /><br /> Activities provide you with an account management tool for managing daily tasks such as appointments, sales calls, contact follow-up, and so on.<br /><br /><p>Copyright c 2021 Oracle and/or its affiliates</p><p>The Universal Permissive License UPL, Version 1.0</p><p>Subject to the condition set forth below, permission is hereby granted to any person obtaining a copy of this software, associated documentation and/or data collectively the &#34;Software&#34;, free of charge and under any and all copyright rights in the Software, and any and all patent rights owned or freely licensable by each licensor hereunder covering either i the unmodified Software as contributed to or provided by such licensor, or ii the Larger Works as defined below, to deal in both</p><p>a the Software, and</p><p>b any piece of software and/or hardware listed in the lrgrwrks.txt file if one is included with the Software each a &#34;Larger Work&#34; to which the Software is contributed by such licensors,</p><p>without restriction, including without limitation the rights to copy, create derivative works of, display, perform, and distribute the Software and make, use, sell, offer for sale, import, export, have made, and have sold the Software and the Larger Works, and to sublicense the foregoing rights on either these or other terms.</p><p>This license is subject to the following condition:</p><p>The above copyright notice and either this complete permission notice or at a minimum a reference to the UPL must be included in all copies or substantial portions of the Software.</p><p>THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>",
    "version" : "21.1.1",
    "title" : "Early Release OPERA Cloud Activity API",
    "termsOfService" : "https://www.oracle.com/legal/terms.html",
    "contact" : {
      "email" : "hospitality_apis_ww_grp@oracle.com"
    },
    "license" : {
      "name" : "UPL",
      "url" : "https://opensource.org/licenses/upl"
    }
  },
  "basePath" : "/act/v0",
  "tags" : [ {
    "name" : "Activity",
    "description" : "The Activity REST APIs allow you to view, create, update, and complete an Activity in OPERA Cloud. You are also able to perform more actions such as add attachments."
  } ],
  "schemes" : [ "https" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/activities" : {
      "get" : {
        "tags" : [ "Activity" ],
        "summary" : "Get activities",
        "description" : "Use this API to retrieve activities for multiple hotels.  Results can be narrowed down by your search criteria in the request message. <p><strong>OperationId:</strong>getActivitiesByMultipleHotelIds</p>",
        "operationId" : "getActivitiesByMultipleHotelIds",
        "parameters" : [ {
          "name" : "completed",
          "in" : "query",
          "description" : "Indicates whether the Activity is completed or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "highPriority",
          "in" : "query",
          "description" : "Indicates whether the Activity has high priority.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Indicates maximum number of records a Web Service should return.",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "required" : false,
          "type" : "integer",
          "default" : 0
        }, {
          "name" : "text",
          "in" : "query",
          "description" : "Search string to be used for super search.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "hotelIds",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "startDate",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "date"
        }, {
          "name" : "endDate",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "date"
        }, {
          "name" : "ownerCode",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "activityClass",
          "in" : "query",
          "description" : "A collection of supported list of activity classes.",
          "required" : false,
          "type" : "string",
          "uniqueItems" : true,
          "enum" : [ "Appointment", "Todo" ]
        }, {
          "name" : "activityType",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "activityPurpose",
          "in" : "query",
          "description" : "Purpose of the Activity.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "accountId",
          "in" : "query",
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contactId",
          "in" : "query",
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "blockId",
          "in" : "query",
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "Bearer token that needs to be passed which is generated post user authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-app-key",
          "in" : "header",
          "description" : "Client or Partnerâ€™s Application Key",
          "required" : true,
          "type" : "string",
          "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
        }, {
          "name" : "x-hotelid",
          "in" : "header",
          "description" : "Mandatory parameter to identify the hotel code where the end user is logged in",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-externalsystem",
          "in" : "header",
          "description" : "External system code.",
          "required" : false,
          "type" : "string",
          "maxLength" : 80,
          "x-example" : "EXTERNALSYSTEMCODE"
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language code",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Response object after fetching Activities.",
            "examples" : {
              "application/json" : {
                "activitiesInformation" : [ {
                  "activityId" : {
                    "id" : "128612"
                  },
                  "activityDetail" : {
                    "hotelId" : "HOTEL1",
                    "activityClass" : "Appointment",
                    "activityType" : "TODO",
                    "activityPurpose" : "Call client and follow up on notes",
                    "activityOwner" : "NC",
                    "startDateTime" : "2020-02-06",
                    "endDateTime" : "2020-02-07",
                    "status" : {
                      "completed" : false
                    },
                    "highPriority" : false
                  }
                }, {
                  "activityId" : {
                    "id" : "128613"
                  },
                  "activityDetail" : {
                    "hotelId" : "HOTEL1",
                    "activityClass" : "Appointment",
                    "activityType" : "TODO",
                    "activityPurpose" : "Call client and follow up on meeting",
                    "activityOwner" : "NC",
                    "startDateTime" : "2020-02-06",
                    "endDateTime" : "2020-02-07",
                    "status" : {
                      "completed" : false
                    },
                    "highPriority" : false
                  }
                }, {
                  "activityId" : {
                    "id" : "128614"
                  },
                  "activityDetail" : {
                    "hotelId" : "HOTEL1",
                    "activityClass" : "Appointment",
                    "activityType" : "ACTIVITYTYPE3",
                    "activityPurpose" : "For discussion on project 2",
                    "activityOwner" : "NC",
                    "startDateTime" : "2020-02-06 09:45:00.0",
                    "endDateTime" : "2020-02-06 10:05:00.0",
                    "status" : {
                      "completed" : false
                    },
                    "highPriority" : false
                  }
                }, {
                  "activityId" : {
                    "id" : "129843"
                  },
                  "activityDetail" : {
                    "hotelId" : "HOTEL3",
                    "activityClass" : "Appointment",
                    "activityType" : "1234",
                    "activityPurpose" : "Update meeting Notes",
                    "activityOwner" : "TJ",
                    "startDateTime" : "2020-02-11 09:00:00.0",
                    "endDateTime" : "2020-02-11 09:20:00.0",
                    "status" : {
                      "completed" : false
                    },
                    "highPriority" : false
                  }
                } ],
                "pageNumber" : "1",
                "maxFetchCount" : "200",
                "totalRows" : "1000",
                "links" : [ {
                  "href" : "https://hotelCompany.example.com/act/v1/hotels/HOTEL1/activities/",
                  "rel" : "self",
                  "templated" : false,
                  "method" : "POST",
                  "operationId" : "postActivity"
                } ]
              }
            },
            "headers" : {
              "Content-Language" : {
                "type" : "string",
                "description" : "Audience language",
                "pattern" : "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example" : "en-GB"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/activitiesInfo"
            }
          },
          "204" : {
            "description" : "ActivitiesByMultipleHotelIds not found."
          }
        }
      },
      "delete" : {
        "tags" : [ "Activity" ],
        "summary" : "Delete activities",
        "description" : "If you want to delete an activity, use this API.  You must know the activity ID for the request. <p><strong>OperationId:</strong>deleteMultipleActivities</p>",
        "operationId" : "deleteMultipleActivities",
        "parameters" : [ {
          "name" : "activityIds",
          "in" : "query",
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "Bearer token that needs to be passed which is generated post user authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-app-key",
          "in" : "header",
          "description" : "Client or Partnerâ€™s Application Key",
          "required" : true,
          "type" : "string",
          "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
        }, {
          "name" : "x-hotelid",
          "in" : "header",
          "description" : "Mandatory parameter to identify the hotel code where the end user is logged in",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-externalsystem",
          "in" : "header",
          "description" : "External system code.",
          "required" : false,
          "type" : "string",
          "maxLength" : 80,
          "x-example" : "EXTERNALSYSTEMCODE"
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language code",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "HATEOAS links which help the consumer to navigate to resources",
            "headers" : {
              "Content-Language" : {
                "type" : "string",
                "description" : "Audience language",
                "pattern" : "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example" : "en-GB"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of newly created resource"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/status"
            }
          }
        }
      }
    },
    "/activities/activitiesCompletion" : {
      "post" : {
        "tags" : [ "Activity" ],
        "summary" : "Complete activities",
        "description" : "Use this API to mark multiple Activities as completed in 1 request.  You must know the OPERA Activity ID's for this API. <p><strong>OperationId:</strong>postMultipleActivitiesCompletion</p>",
        "operationId" : "postMultipleActivitiesCompletion",
        "parameters" : [ {
          "in" : "body",
          "name" : "activitiesToChange",
          "description" : "Request object for changing Activities.",
          "required" : true,
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/definitions/activitiesToChange"
            }, {
              "example" : {
                "activitiesInformation" : [ {
                  "activityId" : {
                    "id" : "88029"
                  },
                  "activityDetail" : {
                    "hotelId" : "HOTEL1",
                    "status" : {
                      "completed" : true,
                      "completedOn" : "2020-02-11 12:01:00.0",
                      "completedBy" : "BEN@HOTEL1"
                    },
                    "notes" : "completing from external system",
                    "activityResult" : "24"
                  }
                }, {
                  "activityId" : {
                    "id" : "88030"
                  },
                  "activityDetail" : {
                    "hotelId" : "PROP1",
                    "status" : {
                      "completed" : true,
                      "completedOn" : "2020-02-11 12:01:00.0",
                      "completedBy" : "BEN@HOTEL1"
                    },
                    "notes" : "completing from external system",
                    "activityResult" : "25"
                  }
                } ]
              }
            } ]
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "Bearer token that needs to be passed which is generated post user authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-app-key",
          "in" : "header",
          "description" : "Client or Partnerâ€™s Application Key",
          "required" : true,
          "type" : "string",
          "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
        }, {
          "name" : "x-hotelid",
          "in" : "header",
          "description" : "Mandatory parameter to identify the hotel code where the end user is logged in",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-externalsystem",
          "in" : "header",
          "description" : "External system code.",
          "required" : false,
          "type" : "string",
          "maxLength" : 80,
          "x-example" : "EXTERNALSYSTEMCODE"
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language code",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "HATEOAS links which help the consumer to navigate to resources",
            "headers" : {
              "Content-Language" : {
                "type" : "string",
                "description" : "Audience language",
                "pattern" : "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example" : "en-GB"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of newly created resource"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/status"
            }
          }
        }
      }
    },
    "/hotels/{hotelId}/activities" : {
      "get" : {
        "tags" : [ "Activity" ],
        "summary" : "Get activities by hotel",
        "description" : "You can use this API to retrieve multiple Activities for a hotel, you can narrow the results using different search criteria  <p><strong>OperationId:</strong>getActivities</p>",
        "operationId" : "getActivities",
        "parameters" : [ {
          "name" : "hotelId",
          "in" : "path",
          "description" : "This is the Hotel Code of the Activity",
          "required" : true,
          "type" : "string",
          "maxLength" : 2000,
          "minLength" : 1
        }, {
          "name" : "completed",
          "in" : "query",
          "description" : "Indicates whether the Activity is completed or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "highPriority",
          "in" : "query",
          "description" : "Indicates whether the Activity has high priority.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Indicates maximum number of records a Web Service should return.",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "required" : false,
          "type" : "integer",
          "default" : 0
        }, {
          "name" : "text",
          "in" : "query",
          "description" : "Search string to be used for super search.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "hotelIds",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "startDate",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "date"
        }, {
          "name" : "endDate",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "date"
        }, {
          "name" : "ownerCode",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "activityClass",
          "in" : "query",
          "description" : "A collection of supported list of activity classes.",
          "required" : false,
          "type" : "string",
          "uniqueItems" : true,
          "enum" : [ "Appointment", "Todo" ]
        }, {
          "name" : "activityType",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "activityPurpose",
          "in" : "query",
          "description" : "Purpose of the Activity.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "accountId",
          "in" : "query",
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contactId",
          "in" : "query",
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "blockId",
          "in" : "query",
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "Bearer token that needs to be passed which is generated post user authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-app-key",
          "in" : "header",
          "description" : "Client or Partnerâ€™s Application Key",
          "required" : true,
          "type" : "string",
          "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
        }, {
          "name" : "x-hotelid",
          "in" : "header",
          "description" : "Mandatory parameter to identify the hotel code where the end user is logged in",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-externalsystem",
          "in" : "header",
          "description" : "External system code.",
          "required" : false,
          "type" : "string",
          "maxLength" : 80,
          "x-example" : "EXTERNALSYSTEMCODE"
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language code",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Response object after fetching Activities.",
            "examples" : {
              "application/json" : {
                "activitiesInformation" : [ {
                  "activityId" : {
                    "id" : "128612"
                  },
                  "activityDetail" : {
                    "hotelId" : "HOTEL1",
                    "activityClass" : "Appointment",
                    "activityType" : "TODO",
                    "activityPurpose" : "Call client and follow up on notes",
                    "activityOwner" : "NC",
                    "startDateTime" : "2020-02-06",
                    "endDateTime" : "2020-02-07",
                    "status" : {
                      "completed" : false
                    },
                    "highPriority" : false
                  }
                }, {
                  "activityId" : {
                    "id" : "128613"
                  },
                  "activityDetail" : {
                    "hotelId" : "HOTEL1",
                    "activityClass" : "Appointment",
                    "activityType" : "TODO",
                    "activityPurpose" : "Call client and follow up on meeting",
                    "activityOwner" : "NC",
                    "startDateTime" : "2020-02-06",
                    "endDateTime" : "2020-02-07",
                    "status" : {
                      "completed" : false
                    },
                    "highPriority" : false
                  }
                }, {
                  "activityId" : {
                    "id" : "128614"
                  },
                  "activityDetail" : {
                    "hotelId" : "HOTEL1",
                    "activityClass" : "Appointment",
                    "activityType" : "ACTIVITYTYPE3",
                    "activityPurpose" : "For discussion on project 2",
                    "activityOwner" : "NC",
                    "startDateTime" : "2020-02-06 09:45:00.0",
                    "endDateTime" : "2020-02-06 10:05:00.0",
                    "status" : {
                      "completed" : false
                    },
                    "highPriority" : false
                  }
                }, {
                  "activityId" : {
                    "id" : "129843"
                  },
                  "activityDetail" : {
                    "hotelId" : "HOTEL3",
                    "activityClass" : "Appointment",
                    "activityType" : "1234",
                    "activityPurpose" : "Update meeting Notes",
                    "activityOwner" : "TJ",
                    "startDateTime" : "2020-02-11 09:00:00.0",
                    "endDateTime" : "2020-02-11 09:20:00.0",
                    "status" : {
                      "completed" : false
                    },
                    "highPriority" : false
                  }
                } ],
                "pageNumber" : "1",
                "maxFetchCount" : "200",
                "totalRows" : "1000",
                "links" : [ {
                  "href" : "https://hotelCompany.example.com/act/v1/hotels/HOTEL1/activities/",
                  "rel" : "self",
                  "templated" : false,
                  "method" : "POST",
                  "operationId" : "postActivity"
                } ]
              }
            },
            "headers" : {
              "Content-Language" : {
                "type" : "string",
                "description" : "Audience language",
                "pattern" : "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example" : "en-GB"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/activitiesInfo"
            }
          },
          "204" : {
            "description" : "Activities not found."
          }
        }
      },
      "post" : {
        "tags" : [ "Activity" ],
        "summary" : "Create activities in a hotel",
        "description" : "Use postActivities to create a new activity for a hotel.  You would need to know the types of Activities a hotel accepts, such as Appointments, TODO.  Use ListOfValues API's to find the available types at a hotel. <p><strong>OperationId:</strong>postActivities</p>",
        "operationId" : "postActivities",
        "parameters" : [ {
          "name" : "hotelId",
          "in" : "path",
          "description" : "Unique ID of the hotel where activity is searched based on Activity ID.",
          "required" : true,
          "type" : "string",
          "maxLength" : 2000,
          "minLength" : 1
        }, {
          "in" : "body",
          "name" : "activitiesInformation",
          "description" : "Request object for creating Activities.",
          "required" : true,
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/definitions/activitiesInformation"
            }, {
              "example" : {
                "activitiesInformation" : {
                  "activityDetail" : {
                    "hotelId" : "HOTEL1",
                    "activityClass" : "Appointment",
                    "activityType" : "FOLLOWUP",
                    "activityPurpose" : "tomorrow",
                    "activityOwner" : "3089500",
                    "startDateTime" : "2020-10-28 09:45:32.0",
                    "endDateTime" : "2020-10-28 10:45:32.0",
                    "status" : {
                      "completed" : false
                    },
                    "notes" : "Notes about the activity can go here",
                    "highPriority" : false
                  }
                }
              }
            } ]
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "Bearer token that needs to be passed which is generated post user authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-app-key",
          "in" : "header",
          "description" : "Client or Partnerâ€™s Application Key",
          "required" : true,
          "type" : "string",
          "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
        }, {
          "name" : "x-hotelid",
          "in" : "header",
          "description" : "Mandatory parameter to identify the hotel code where the end user is logged in",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-externalsystem",
          "in" : "header",
          "description" : "External system code.",
          "required" : false,
          "type" : "string",
          "maxLength" : 80,
          "x-example" : "EXTERNALSYSTEMCODE"
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language code",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "HATEOAS links which help the consumer to navigate to resources",
            "headers" : {
              "Content-Language" : {
                "type" : "string",
                "description" : "Audience language",
                "pattern" : "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example" : "en-GB"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of newly created resource"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/status"
            }
          }
        }
      }
    },
    "/hotels/{hotelId}/activities/{activityId}" : {
      "get" : {
        "tags" : [ "Activity" ],
        "summary" : "Get activity in a hotel by ID",
        "description" : "You can use this API to retrieve an Activity for a hotel, using the OPERA Activity ID in the request. <p><strong>OperationId:</strong>getActivity</p>",
        "operationId" : "getActivity",
        "parameters" : [ {
          "name" : "activityId",
          "in" : "path",
          "description" : "Unique OPERA Activity ID which is used to find an Activity from OPERA. This ID is a primary identification of an Activity in OPERA.",
          "required" : true,
          "type" : "string",
          "maxLength" : 2000,
          "minLength" : 1
        }, {
          "name" : "hotelId",
          "in" : "path",
          "description" : "Unique ID of the hotel where activity is searched based on Activity ID.",
          "required" : true,
          "type" : "string",
          "maxLength" : 2000,
          "minLength" : 1
        }, {
          "name" : "fetchInstructions",
          "in" : "query",
          "description" : "Instruction to fetch Activity's information, linked Block and Profile, Attachments and linked Activities.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "ActivityInfo", "Profiles", "Blocks", "Attachments", "LinkedActivities" ]
          },
          "collectionFormat" : "multi",
          "uniqueItems" : true
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "Bearer token that needs to be passed which is generated post user authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-app-key",
          "in" : "header",
          "description" : "Client or Partnerâ€™s Application Key",
          "required" : true,
          "type" : "string",
          "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
        }, {
          "name" : "x-hotelid",
          "in" : "header",
          "description" : "Mandatory parameter to identify the hotel code where the end user is logged in",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-externalsystem",
          "in" : "header",
          "description" : "External system code.",
          "required" : false,
          "type" : "string",
          "maxLength" : 80,
          "x-example" : "EXTERNALSYSTEMCODE"
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language code",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Response object for fetching activity.",
            "examples" : {
              "application/json" : {
                "activityDetails" : {
                  "activityId" : {
                    "type" : "Activity",
                    "id" : "114026"
                  },
                  "activityDetail" : {
                    "hotelId" : "HOTEL1",
                    "activityClass" : "Appointment",
                    "activityType" : "ASDF",
                    "activityTypeDescription" : "asd",
                    "activityPurpose" : "Create new Appt with Main Stakeholder",
                    "activityOwner" : "TOM",
                    "startDateTime" : "2019-12-04 09:20:00.0",
                    "endDateTime" : "2019-12-04 09:20:00.0",
                    "status" : {
                      "completedOn" : "2019-12-04 16:01:00.0",
                      "completed" : true
                    },
                    "createDateTime" : "2019-12-04 02:33:10.0",
                    "creatorId" : "BEN@HOTEL1",
                    "lastModifyDateTime" : "2019-12-20 01:49:58.0",
                    "lastModifierId" : "BEN@HOTEL1"
                  },
                  "linkedAccounts" : {
                    "activityAccount" : [ {
                      "profileIdList" : [ {
                        "id" : "3108537"
                      } ],
                      "profile" : {
                        "customer" : {
                          "personName" : [ {
                            "givenName" : "Tom"
                          } ]
                        },
                        "addresses" : {
                          "addressInfo" : [ {
                            "address" : {
                              "addressLine" : [ "500 Oracle Parkway", null, null, null ],
                              "cityName" : "Redwood Shores",
                              "postalCode" : "94065",
                              "county" : "USA"
                            }
                          } ]
                        },
                        "telephones" : {
                          "telephoneInfo" : [ {
                            "telephone" : {
                              "phoneNumber" : "+1 415 555 0100"
                            }
                          } ]
                        },
                        "profileType" : "Company"
                      },
                      "primary" : true
                    }, {
                      "profileIdList" : [ {
                        "id" : "3103255"
                      } ],
                      "profile" : {
                        "customer" : {
                          "personName" : [ {
                            "givenName" : "Ben"
                          } ]
                        },
                        "addresses" : {
                          "addressInfo" : [ {
                            "address" : {
                              "county" : "USA"
                            }
                          } ]
                        },
                        "profileType" : "Source"
                      },
                      "primary" : false
                    } ],
                    "fullOverlay" : false
                  },
                  "linkedContacts" : {
                    "activityContact" : [ {
                      "profileIdList" : [ {
                        "id" : "3108539"
                      } ],
                      "profile" : {
                        "customer" : {
                          "personName" : [ {
                            "givenName" : "Chris"
                          } ]
                        },
                        "addresses" : {
                          "addressInfo" : [ {
                            "address" : {
                              "addressLine" : [ "10 Main Street", null, null, null ],
                              "county" : "USA"
                            }
                          } ]
                        },
                        "telephones" : {
                          "telephoneInfo" : [ {
                            "telephone" : {
                              "phoneNumber" : "+1 415 555 0100"
                            }
                          } ]
                        },
                        "relationships" : {
                          "relationship" : [ {
                            "relationshipProfile" : {
                              "profileIdList" : [ {
                                "id" : "3108537",
                                "type" : "ContactId"
                              } ],
                              "profileType" : "Company"
                            }
                          } ]
                        },
                        "profileType" : "Contact"
                      },
                      "primary" : true,
                      "activityLinkedProfileType" : "CompanyContact"
                    }, {
                      "profileIdList" : [ {
                        "id" : "3106529"
                      } ],
                      "profile" : {
                        "customer" : {
                          "personName" : [ {
                            "givenName" : "Sarah"
                          } ]
                        },
                        "relationships" : {
                          "relationship" : [ {
                            "relationshipProfile" : {
                              "profileIdList" : [ {
                                "id" : "3089751",
                                "type" : "ContactId"
                              } ],
                              "profileType" : "Company"
                            }
                          } ]
                        },
                        "profileType" : "Contact"
                      },
                      "primary" : false,
                      "activityLinkedProfileType" : "CompanyContact"
                    } ],
                    "fullOverlay" : false
                  },
                  "linkedBlocks" : [ {
                    "blockIdList" : [ {
                      "id" : "30725"
                    } ],
                    "blockCode" : "0511ENDOF_001",
                    "blockName" : "End of Season Event",
                    "timeSpan" : {
                      "startDate" : "2020-11-05",
                      "endDate" : "2020-11-06"
                    }
                  } ],
                  "indicators" : [ {
                    "indicatorName" : "Blocks",
                    "count" : "1"
                  }, {
                    "indicatorName" : "Profiles",
                    "count" : "4"
                  } ]
                },
                "links" : [ {
                  "href" : "https://hotelCompany.example.com/act/v1/hotels/HOTEL1/activities/114026?fetchInstructions=ActivityInfo",
                  "rel" : "self",
                  "templated" : false,
                  "method" : "GET",
                  "operationId" : "getActivity"
                }, {
                  "href" : "https://hotelCompany.example.com/act/v1/hotels/HOTEL1/activities/114026?fetchInstructions=Profiles",
                  "rel" : "self",
                  "templated" : false,
                  "method" : "GET",
                  "operationId" : "getActivity"
                }, {
                  "href" : "https://hotelCompany.example.com/act/v1/hotels/HOTEL1/activities/114026?fetchInstructions=Blocks",
                  "rel" : "self",
                  "templated" : false,
                  "method" : "GET",
                  "operationId" : "getActivity"
                }, {
                  "href" : "https://hotelCompany.example.com/act/v1/hotels/HOTEL1/activities/114026?fetchInstructions=Attachments",
                  "rel" : "self",
                  "templated" : false,
                  "method" : "GET",
                  "operationId" : "getActivity"
                }, {
                  "href" : "https://hotelCompany.example.com/act/v1/hotels/HOTEL1/activities/114026?fetchInstructions=LinkedActivities",
                  "rel" : "self",
                  "templated" : false,
                  "method" : "GET",
                  "operationId" : "getActivity"
                } ]
              }
            },
            "headers" : {
              "Content-Language" : {
                "type" : "string",
                "description" : "Audience language",
                "pattern" : "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example" : "en-GB"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/activity"
            }
          },
          "204" : {
            "description" : "Activity not found."
          }
        }
      },
      "put" : {
        "tags" : [ "Activity" ],
        "summary" : "Update activity in a hotel by ID",
        "description" : "Use this to update an existing Activity for a hotel.  You must know the OPERA Activity ID for this API. <p><strong>OperationId:</strong>putActivities</p>",
        "operationId" : "putActivities",
        "parameters" : [ {
          "name" : "activityId",
          "in" : "path",
          "description" : "Unique OPERA Activity ID which is used to find an Activity from OPERA. This ID is a primary identification of an Activity in OPERA.",
          "required" : true,
          "type" : "string",
          "maxLength" : 2000,
          "minLength" : 1
        }, {
          "name" : "hotelId",
          "in" : "path",
          "description" : "Unique ID of the hotel where activity is searched based on Activity ID.",
          "required" : true,
          "type" : "string",
          "maxLength" : 2000,
          "minLength" : 1
        }, {
          "in" : "body",
          "name" : "activitiesToChange",
          "description" : "Request object for changing Activities.",
          "required" : true,
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/definitions/activitiesToChange"
            }, {
              "example" : {
                "activitiesInformation" : {
                  "activityId" : {
                    "id" : "219113"
                  },
                  "activityDetail" : {
                    "hotelId" : "HOTEL1",
                    "activityClass" : "Todo",
                    "activityType" : "EXTMTG",
                    "activityTypeDescription" : "External Meeting",
                    "activityPurpose" : "Change activity to TODO",
                    "activityOwner" : "287117",
                    "startDateTime" : "2020-11-02",
                    "endDateTime" : "2020-11-03",
                    "status" : {
                      "completed" : false
                    },
                    "notes" : "Notes about the Activity can go here",
                    "createDateTime" : "2020-02-14 02:13:33.0",
                    "creatorId" : "BEN@HOTEL1",
                    "lastModifyDateTime" : "2020-02-14 02:13:33.0",
                    "lastModifierId" : "BEN@HOTEL1"
                  }
                }
              }
            } ]
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "Bearer token that needs to be passed which is generated post user authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-app-key",
          "in" : "header",
          "description" : "Client or Partnerâ€™s Application Key",
          "required" : true,
          "type" : "string",
          "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
        }, {
          "name" : "x-hotelid",
          "in" : "header",
          "description" : "Mandatory parameter to identify the hotel code where the end user is logged in",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-externalsystem",
          "in" : "header",
          "description" : "External system code.",
          "required" : false,
          "type" : "string",
          "maxLength" : 80,
          "x-example" : "EXTERNALSYSTEMCODE"
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language code",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Existing Operations Responses will eventually be modified to be extended from this type.",
            "headers" : {
              "Content-Language" : {
                "type" : "string",
                "description" : "Audience language",
                "pattern" : "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example" : "en-GB"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of newly created resource"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/status"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Activity" ],
        "summary" : "Delete activity in a hotel by ID",
        "description" : "Use this API to mark an Activity as deleted.  You must know the OPERA Activity ID for this API. <p><strong>OperationId:</strong>deleteActivities</p>",
        "operationId" : "deleteActivities",
        "parameters" : [ {
          "name" : "activityId",
          "in" : "path",
          "description" : "Unique OPERA Activity ID which is used to find an Activity from OPERA. This ID is a primary identification of an Activity in OPERA.",
          "required" : true,
          "type" : "string",
          "maxLength" : 2000,
          "minLength" : 1
        }, {
          "name" : "hotelId",
          "in" : "path",
          "description" : "Unique ID of the hotel where activity is searched based on Activity ID.",
          "required" : true,
          "type" : "string",
          "maxLength" : 2000,
          "minLength" : 1
        }, {
          "name" : "activityIds",
          "in" : "query",
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "Bearer token that needs to be passed which is generated post user authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-app-key",
          "in" : "header",
          "description" : "Client or Partnerâ€™s Application Key",
          "required" : true,
          "type" : "string",
          "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
        }, {
          "name" : "x-hotelid",
          "in" : "header",
          "description" : "Mandatory parameter to identify the hotel code where the end user is logged in",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-externalsystem",
          "in" : "header",
          "description" : "External system code.",
          "required" : false,
          "type" : "string",
          "maxLength" : 80,
          "x-example" : "EXTERNALSYSTEMCODE"
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language code",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "HATEOAS links which help the consumer to navigate to resources",
            "headers" : {
              "Content-Language" : {
                "type" : "string",
                "description" : "Audience language",
                "pattern" : "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example" : "en-GB"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of newly created resource"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/status"
            }
          }
        }
      }
    },
    "/hotels/{hotelId}/activities/{activityId}/activityCompletion" : {
      "post" : {
        "tags" : [ "Activity" ],
        "summary" : "Complete activity in a hotel by ID",
        "description" : "Use this API to mark one Activity as completed in 1 request.  You must know the OPERA Activity ID for this API. <p><strong>OperationId:</strong>postSingleActivityCompletion</p>",
        "operationId" : "postSingleActivityCompletion",
        "parameters" : [ {
          "name" : "activityId",
          "in" : "path",
          "description" : "Unique OPERA Activity ID which is used to find an Activity from OPERA. This ID is a primary identification of an Activity in OPERA.",
          "required" : true,
          "type" : "string",
          "maxLength" : 2000,
          "minLength" : 1
        }, {
          "name" : "hotelId",
          "in" : "path",
          "description" : "Unique ID of the hotel where activity is searched based on Activity ID.",
          "required" : true,
          "type" : "string",
          "maxLength" : 2000,
          "minLength" : 1
        }, {
          "in" : "body",
          "name" : "activitiesToChange",
          "description" : "Request object for changing Activities.",
          "required" : true,
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/definitions/activitiesToChange"
            }, {
              "example" : {
                "activitiesInformation" : [ {
                  "activityDetail" : {
                    "status" : {
                      "completed" : true,
                      "completedOn" : "2020-01-01 12:01:00.0",
                      "completedBy" : "BEN@HOTEL1"
                    },
                    "notes" : "completing the Activity from external system",
                    "activityResult" : "24"
                  }
                } ]
              }
            } ]
          }
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "Bearer token that needs to be passed which is generated post user authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-app-key",
          "in" : "header",
          "description" : "Client or Partnerâ€™s Application Key",
          "required" : true,
          "type" : "string",
          "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
        }, {
          "name" : "x-hotelid",
          "in" : "header",
          "description" : "Mandatory parameter to identify the hotel code where the end user is logged in",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-externalsystem",
          "in" : "header",
          "description" : "External system code.",
          "required" : false,
          "type" : "string",
          "maxLength" : 80,
          "x-example" : "EXTERNALSYSTEMCODE"
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language code",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "HATEOAS links which help the consumer to navigate to resources",
            "headers" : {
              "Content-Language" : {
                "type" : "string",
                "description" : "Audience language",
                "pattern" : "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example" : "en-GB"
              },
              "Location" : {
                "type" : "string",
                "description" : "Location of newly created resource"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/status"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "activitiesInfo" : {
      "type" : "object",
      "properties" : {
        "activitiesInformation" : {
          "description" : "Collection of fetched Activities.",
          "$ref" : "#/definitions/activityListType"
        },
        "totalPages" : {
          "type" : "integer",
          "description" : "Evaluated total page count based on the requested max fetch count."
        },
        "offset" : {
          "type" : "integer",
          "description" : "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned."
        },
        "limit" : {
          "type" : "integer",
          "description" : "Indicates maximum number of records a Web Service should return."
        },
        "hasMore" : {
          "type" : "boolean",
          "description" : "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response."
        },
        "totalResults" : {
          "type" : "integer",
          "description" : "Total number of rows queried"
        },
        "count" : {
          "type" : "integer",
          "description" : "Total number of rows returned"
        },
        "links" : {
          "$ref" : "#/definitions/links"
        },
        "warnings" : {
          "$ref" : "#/definitions/warningsType"
        }
      }
    },
    "activityListType" : {
      "type" : "array",
      "description" : "Activity information in detail.",
      "items" : {
        "$ref" : "#/definitions/activityDetailsType"
      },
      "maxItems" : 4000
    },
    "activityDetailsType" : {
      "type" : "object",
      "properties" : {
        "activityId" : {
          "description" : "Unique identifier for the activity.",
          "$ref" : "#/definitions/activityId"
        },
        "activityDetail" : {
          "description" : "Activity information in detail.",
          "$ref" : "#/definitions/activityInfoType"
        },
        "linkedAccounts" : {
          "type" : "object",
          "description" : "Provides information about the accounts linked to an activity. Please note that during a change operation this performs a full overlay if the attribute FullOverlay is set to true. In a full overlay, all the accounts that should be associated to the activity should be provided during a change operation. Any accounts not provided will be detached from this activity. By default the full overlay is considered false if this property is left blank. If values are provided for accounts, only the full overlay functionality is provided at this time.",
          "properties" : {
            "activityAccount" : {
              "type" : "array",
              "description" : "The list of accounts associated with an activity.",
              "items" : {
                "$ref" : "#/definitions/activityLinkedProfilesType"
              },
              "maxItems" : 4000
            },
            "fullOverlay" : {
              "type" : "boolean",
              "description" : "Indicates whether to perform a full overlay for the accounts."
            }
          }
        },
        "linkedContacts" : {
          "type" : "object",
          "description" : "Provides information about the contacts linked to an activity. Please note that during a change operation this performs a full overlay if the attribute FullOverlay is set to true. In a full overlay, all the contacts that should be associated to the activity should be provided during a change operation. Any contacts not provided will be detached from this activity. By default the full overlay is considered false if this property is left blank. If values are provided for contacts, only the full overlay functionality is provided at this time.",
          "properties" : {
            "activityContact" : {
              "type" : "array",
              "description" : "The list of contacts associated with an activity.",
              "items" : {
                "$ref" : "#/definitions/activityLinkedProfilesType"
              },
              "maxItems" : 4000
            },
            "fullOverlay" : {
              "type" : "boolean",
              "description" : "Indicates whether to perform a full overlay for the contacts."
            }
          }
        },
        "linkedBlocks" : {
          "description" : "Provides information about the blocks linked to the activity.",
          "$ref" : "#/definitions/blockListType"
        },
        "linkedAttachments" : {
          "description" : "Provides information about the attachments linked to the activity.",
          "$ref" : "#/definitions/attachmentsType"
        },
        "linkedActivities" : {
          "type" : "array",
          "description" : "The list of activities associated with an activity.",
          "items" : {
            "$ref" : "#/definitions/linkedActivityDetailsType"
          },
          "maxItems" : 4000
        },
        "indicators" : {
          "description" : "Indicators of additional information attached to the activity",
          "$ref" : "#/definitions/indicatorsType"
        }
      },
      "description" : "Complete Activity Related Information."
    },
    "activityId" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "A reference to the type of object defined by the UniqueID element.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "id" : {
          "type" : "string",
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "minLength" : 0,
          "maxLength" : 80
        }
      },
      "description" : "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote)."
    },
    "activityInfoType" : {
      "type" : "object",
      "properties" : {
        "hotelId" : {
          "type" : "string",
          "description" : "This is the Hotel Code of the Activity.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "activityClass" : {
          "description" : "Indicates the Activity Class.",
          "$ref" : "#/definitions/activityConfigClassType"
        },
        "activityType" : {
          "type" : "string",
          "description" : "Indicates the Activity Type used for the Activity.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "activityTypeDescription" : {
          "type" : "string",
          "description" : "Indicates the description used for the Activity Type.",
          "minLength" : 0,
          "maxLength" : 100
        },
        "activityPurpose" : {
          "type" : "string",
          "description" : "Indicates Purpose of the Activity.",
          "minLength" : 0,
          "maxLength" : 100
        },
        "activityTraceCode" : {
          "type" : "string",
          "description" : "Activity Trace code used for the Activity.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "activityOwner" : {
          "type" : "string",
          "description" : "Owner of Activity.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "startDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Start Date time of Activity."
        },
        "endDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "End Date time of Activity."
        },
        "status" : {
          "type" : "object",
          "description" : "Completion status of Activity.",
          "properties" : {
            "completedBy" : {
              "type" : "string",
              "description" : "Name of person who completed the Activity.",
              "maxLength" : 2000
            },
            "completedOn" : {
              "type" : "string",
              "format" : "date-time",
              "description" : "Date on which the Activity was completed."
            },
            "completed" : {
              "type" : "boolean",
              "description" : "Indicates whether Activity is Completed or not."
            }
          }
        },
        "activityResult" : {
          "type" : "string",
          "description" : "Indicates the outcome of a completed Activity.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "notes" : {
          "type" : "string",
          "description" : "Notes associated with an Activity.",
          "minLength" : 0,
          "maxLength" : 4000
        },
        "followup" : {
          "type" : "boolean",
          "description" : "Indicates whether Followup Activity is needed or not."
        },
        "followupStartDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Start Date time of the Followup Activity."
        },
        "highPriority" : {
          "type" : "boolean",
          "description" : "Indicates whether Activity has a high priority."
        },
        "overlapActivity" : {
          "type" : "boolean",
          "description" : "Determines whether the Activity overlaps with another activity with same date and time for the same owner."
        },
        "createDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Time stamp of the creation."
        },
        "creatorId" : {
          "type" : "string",
          "description" : "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "minLength" : 0,
          "maxLength" : 200
        },
        "lastModifyDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Time stamp of last modification."
        },
        "lastModifierId" : {
          "type" : "string",
          "description" : "Identifies the last software system or person to modify a record.",
          "minLength" : 0,
          "maxLength" : 200
        }
      },
      "description" : "Activity related information."
    },
    "activityConfigClassType" : {
      "type" : "string",
      "description" : "A collection of supported list of activity classes.",
      "enum" : [ "Appointment", "Todo" ]
    },
    "activityLinkedProfilesType" : {
      "type" : "object",
      "properties" : {
        "profileIdList" : {
          "description" : "Unique identifiers for the Profile.",
          "$ref" : "#/definitions/uniqueIDListType"
        },
        "profile" : {
          "description" : "Provides detailed information regarding the profile.",
          "$ref" : "#/definitions/profileType"
        },
        "primary" : {
          "type" : "boolean",
          "description" : "Is this attached profile primary?"
        },
        "activityLinkedProfileType" : {
          "description" : "Determines the type of the activity profile.",
          "$ref" : "#/definitions/linkedProfileTypeType"
        }
      },
      "description" : "A collection of Unique IDs of Profiles."
    },
    "uniqueIDListType" : {
      "type" : "array",
      "description" : "Unique Id that references an object uniquely in the system.",
      "items" : {
        "$ref" : "#/definitions/uniqueID_Type"
      },
      "maxItems" : 4000
    },
    "uniqueID_Type" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "type" : {
          "type" : "string",
          "description" : "A reference to the type of object defined by the UniqueID element.",
          "minLength" : 0,
          "maxLength" : 40
        }
      },
      "description" : "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote)."
    },
    "profileType" : {
      "type" : "object",
      "properties" : {
        "customer" : {
          "description" : "Detailed customer information for this profile.",
          "$ref" : "#/definitions/customerType"
        },
        "company" : {
          "description" : "Detailed company information for this profile.",
          "$ref" : "#/definitions/companyType"
        },
        "addresses" : {
          "type" : "object",
          "description" : "List of customer addresses.",
          "properties" : {
            "addressInfo" : {
              "type" : "array",
              "description" : "Collection of Detailed information on an address for the customer.",
              "items" : {
                "$ref" : "#/definitions/addressInfoType"
              },
              "maxItems" : 4000
            }
          }
        },
        "telephones" : {
          "type" : "object",
          "description" : "List of Telephone Number Information",
          "properties" : {
            "telephoneInfo" : {
              "type" : "array",
              "description" : "Collection of Detailed information on telephone/fax for the customer.",
              "items" : {
                "$ref" : "#/definitions/telephoneInfoType"
              },
              "maxItems" : 4000
            }
          }
        },
        "emails" : {
          "type" : "object",
          "description" : "List of email address for the customer.",
          "properties" : {
            "emailInfo" : {
              "type" : "array",
              "description" : "Collection of Detailed information on an eMail address for the customer.",
              "items" : {
                "$ref" : "#/definitions/emailInfoType"
              },
              "maxItems" : 4000
            }
          }
        },
        "uRLs" : {
          "type" : "object",
          "description" : "List of Information on a URL for the customer.",
          "properties" : {
            "uRLInfo" : {
              "type" : "array",
              "description" : "Collection of Detailed information on web url/address for the customer.",
              "items" : {
                "$ref" : "#/definitions/uRLInfoType"
              },
              "maxItems" : 4000
            }
          }
        },
        "profileDeliveryMethods" : {
          "type" : "object",
          "description" : "List of Delivery methods configured against a Property for this Profile.",
          "properties" : {
            "profileDeliveryMethod" : {
              "type" : "array",
              "description" : "Collection of delivery methods for this Profile.",
              "items" : {
                "$ref" : "#/definitions/profileDeliveryMethod"
              },
              "maxItems" : 4000
            },
            "hasMore" : {
              "type" : "boolean",
              "description" : "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response."
            },
            "totalResults" : {
              "type" : "integer",
              "description" : "Total number of rows queried"
            },
            "count" : {
              "type" : "integer",
              "description" : "Total number of rows returned"
            }
          }
        },
        "relationships" : {
          "type" : "object",
          "description" : "Contains a collection of profiles that have a relationship with this profile.",
          "properties" : {
            "relationship" : {
              "type" : "array",
              "description" : "A collection of the profiles that have a relationship with this profile.",
              "items" : {
                "$ref" : "#/definitions/relationshipInfoType"
              },
              "maxItems" : 4000
            }
          }
        },
        "relationshipsSummary" : {
          "type" : "object",
          "description" : "Contains a collection of profiles that have a relationship with this profile.",
          "properties" : {
            "relationship" : {
              "type" : "array",
              "description" : "A collection of the profiles summary that have a relationship with this profile.",
              "items" : {
                "$ref" : "#/definitions/relationshipInfoSummaryType"
              },
              "maxItems" : 4000
            },
            "hasMore" : {
              "type" : "boolean",
              "description" : "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response."
            },
            "totalResults" : {
              "type" : "integer",
              "description" : "Total number of rows queried"
            },
            "count" : {
              "type" : "integer",
              "description" : "Total number of rows returned"
            }
          }
        },
        "stayReservationInfoList" : {
          "description" : "Collection of Detailed information on history and future reservations associated with the profile.",
          "$ref" : "#/definitions/reservationStayHistoryFutureInfoType"
        },
        "eligibleForFiscalFolio" : {
          "type" : "string",
          "description" : "Eligible for Fiscal Folio/Payload generation.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "profileType" : {
          "description" : "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref" : "#/definitions/profileTypeType"
        }
      },
      "description" : "Type provides the detailed information about the profile and its children."
    },
    "customerType" : {
      "type" : "object",
      "properties" : {
        "personName" : {
          "type" : "array",
          "description" : "Detailed name information for the customer.",
          "items" : {
            "$ref" : "#/definitions/personNameType"
          },
          "maxItems" : 5
        }
      },
      "description" : "Contains basic data on the customer's identity, location, relationships, finances, memberships, etc."
    },
    "personNameType" : {
      "type" : "object",
      "properties" : {
        "givenName" : {
          "type" : "string",
          "description" : "Given name, first name or names.",
          "minLength" : 0,
          "maxLength" : 40
        }
      },
      "description" : "This provides name information for a person."
    },
    "companyType" : {
      "type" : "object",
      "properties" : {
        "companyName" : {
          "type" : "string",
          "description" : "Name of the company.",
          "minLength" : 0,
          "maxLength" : 40
        }
      }
    },
    "addressInfoType" : {
      "type" : "object",
      "properties" : {
        "address" : {
          "description" : "Address details for the profile.",
          "$ref" : "#/definitions/addressType"
        },
        "id" : {
          "type" : "string",
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "type" : {
          "type" : "string",
          "description" : "A reference to the type of object defined by the UniqueID element.",
          "minLength" : 0,
          "maxLength" : 40
        }
      },
      "description" : "Provides address information."
    },
    "addressType" : {
      "type" : "object",
      "properties" : {
        "isValidated" : {
          "type" : "boolean",
          "description" : "Indicator to define if the Address is validated by the Address Validation System."
        },
        "addressLine" : {
          "type" : "array",
          "description" : "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "items" : {
            "type" : "string",
            "minLength" : 0,
            "maxLength" : 80
          },
          "maxItems" : 4
        },
        "cityName" : {
          "type" : "string",
          "description" : "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "minLength" : 0,
          "maxLength" : 40
        },
        "postalCode" : {
          "type" : "string",
          "description" : "Post Office Code number.",
          "minLength" : 0,
          "maxLength" : 15
        },
        "cityExtension" : {
          "type" : "string",
          "description" : "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "county" : {
          "type" : "string",
          "description" : "County or District Name (e.g., Fairfax). This is read only.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "state" : {
          "type" : "string",
          "description" : "State or Province name (e.g., Texas).",
          "minLength" : 0,
          "maxLength" : 20
        },
        "country" : {
          "description" : "Country name (e.g., Ireland).",
          "$ref" : "#/definitions/countryNameType"
        },
        "type" : {
          "type" : "string",
          "description" : "Defines the type of address (e.g. home, business, other).",
          "minLength" : 0,
          "maxLength" : 20
        },
        "typeDescription" : {
          "type" : "string",
          "description" : "Describes the type code",
          "maxLength" : 2000
        }
      },
      "description" : "Provides address information."
    },
    "countryNameType" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string",
          "description" : "Used for Character Strings, length 0 to 200.",
          "minLength" : 0,
          "maxLength" : 200
        },
        "code" : {
          "type" : "string",
          "description" : "Code for a country or a nationality.",
          "minLength" : 0,
          "maxLength" : 20
        }
      },
      "description" : "Code for a country or a nationality."
    },
    "telephoneInfoType" : {
      "type" : "object",
      "properties" : {
        "telephone" : {
          "description" : "Phone details for the profile.",
          "$ref" : "#/definitions/telephoneType"
        }
      },
      "description" : "Information on a telephone number for the customer."
    },
    "telephoneType" : {
      "type" : "object",
      "properties" : {
        "phoneNumber" : {
          "type" : "string",
          "description" : "Telephone number assigned to a single location.",
          "minLength" : 0,
          "maxLength" : 40
        }
      },
      "description" : "Information on a telephone number for the customer."
    },
    "emailInfoType" : {
      "type" : "object",
      "properties" : {
        "email" : {
          "description" : "eMail deatils for the profile.",
          "$ref" : "#/definitions/emailType"
        }
      },
      "description" : "Information on an email for the customer."
    },
    "emailType" : {
      "type" : "object",
      "properties" : {
        "emailAddress" : {
          "type" : "string",
          "description" : "Defines the e-mail address.",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "type" : {
          "type" : "string",
          "description" : "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
          "minLength" : 0,
          "maxLength" : 20
        }
      },
      "description" : "Information on an email for the customer."
    },
    "uRLInfoType" : {
      "type" : "object",
      "properties" : {
        "url" : {
          "description" : "Provides URL information.",
          "$ref" : "#/definitions/uRLType"
        }
      },
      "description" : "Web site address."
    },
    "uRLType" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string",
          "description" : "Property Value"
        },
        "type" : {
          "type" : "string",
          "description" : "Defines the purpose of the URL address, such as personal, business, public, etc.",
          "minLength" : 0,
          "maxLength" : 20
        }
      },
      "description" : "Web site address, in IETF(The Internet Engineering Task Force) specified format."
    },
    "profileDeliveryMethod" : {
      "type" : "object",
      "properties" : {
        "deliveryId" : {
          "description" : "Delivery ID. It will be empty in case of new delivery method.",
          "$ref" : "#/definitions/uniqueID_Type"
        },
        "deliveryType" : {
          "type" : "string",
          "description" : "Delivery type can have a value EMAIL, ELECTRONIC etc and it depends on the parameter set in OPERA Control.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "deliveryValue" : {
          "type" : "string",
          "description" : "Delivery value holds the corresponding value of the delivery type..",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "hotelId" : {
          "type" : "string",
          "description" : "Property that has delivery methods configured.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "deliveryModule" : {
          "description" : "Module where this delivery type will be used. Example : EFolio Export, EInvoice , Fiscal, etc..",
          "$ref" : "#/definitions/profileDeliveryModuleType"
        },
        "primary" : {
          "type" : "boolean",
          "description" : "When true, indicates a primary information."
        },
        "orderSequence" : {
          "type" : "number",
          "description" : "Display Order sequence."
        }
      },
      "description" : "Delivery Information type to the profile."
    },
    "profileDeliveryModuleType" : {
      "type" : "string",
      "description" : "Module where this delivery type will be used. Example : EFolio Export, EInvoice , Fiscal, etc..",
      "enum" : [ "EfolioExport" ]
    },
    "relationshipInfoType" : {
      "type" : "object",
      "properties" : {
        "relationshipProfile" : {
          "description" : "Refer to Relationship Profile type document.",
          "$ref" : "#/definitions/relationshipProfileType"
        }
      },
      "description" : "Relationship Type contains information about the associations between and among individuals, companies, travel agents, groups, sources, and contact profiles."
    },
    "relationshipProfileType" : {
      "type" : "object",
      "properties" : {
        "profileIdList" : {
          "description" : "Original profile details for which the relationships was created",
          "$ref" : "#/definitions/uniqueIDListType"
        },
        "profileType" : {
          "description" : "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref" : "#/definitions/profileTypeType"
        }
      }
    },
    "profileTypeType" : {
      "type" : "string",
      "description" : "The types of Profile handled by the web service.",
      "enum" : [ "Guest", "Agent", "Company", "Group", "Source", "Employee", "Hotel", "Vendor", "Contact", "Purge", "BusinessHeader", "BillingAccount", "Activity", "Potential", "Account" ]
    },
    "relationshipInfoSummaryType" : {
      "type" : "object",
      "properties" : {
        "relationshipProfile" : {
          "description" : "Refer to Relationship Profile Summary type document.",
          "$ref" : "#/definitions/relationshipProfileSummaryType"
        },
        "masterAccountDetails" : {
          "description" : "Refer to Master Profile type document.",
          "$ref" : "#/definitions/masterAccountInfoType"
        },
        "relationshipID" : {
          "type" : "string",
          "description" : "Relationship identifier.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "sourceRelation" : {
          "type" : "string",
          "description" : "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "minLength" : 0,
          "maxLength" : 20
        },
        "sourceRelationDescription" : {
          "type" : "string",
          "description" : "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "minLength" : 0,
          "maxLength" : 200
        },
        "targetRelation" : {
          "type" : "string",
          "description" : "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "minLength" : 0,
          "maxLength" : 20
        },
        "targetRelationDescription" : {
          "type" : "string",
          "description" : "Displays the description of the target relation(Target Profile).",
          "minLength" : 0,
          "maxLength" : 200
        }
      },
      "description" : "RelationshipInfoSummaryType contains information about the associations between and among individuals, companies, travel agents, groups, sources, and contact profiles."
    },
    "relationshipProfileSummaryType" : {
      "type" : "object",
      "properties" : {
        "customerName" : {
          "type" : "string",
          "description" : "Name of the customer",
          "minLength" : 0,
          "maxLength" : 40
        },
        "companyName" : {
          "type" : "string",
          "description" : "Name of the company.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "telephoneNumber" : {
          "type" : "string",
          "description" : "Telephone number assigned to a single location",
          "minLength" : 0,
          "maxLength" : 40
        },
        "address" : {
          "description" : "Information on address details for the customer/company",
          "$ref" : "#/definitions/relationshipAddressType"
        },
        "emailAddress" : {
          "type" : "string",
          "description" : "Defines the e-mail address.",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "ownerCode" : {
          "type" : "string",
          "description" : "Unique Code to identify the owner.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "profileIdList" : {
          "description" : "Original profile details for which the relationships was created",
          "$ref" : "#/definitions/uniqueIDListType"
        },
        "primary" : {
          "type" : "boolean",
          "description" : "Indicates if this relationship is the primary relationship."
        },
        "profileStatus" : {
          "description" : "Status of the profile. Active/Inactive",
          "$ref" : "#/definitions/profileStatusType"
        },
        "primaryOwnerCode" : {
          "type" : "boolean",
          "description" : "When true, this is a primary owner."
        },
        "profileType" : {
          "description" : "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref" : "#/definitions/profileTypeType"
        }
      }
    },
    "relationshipAddressType" : {
      "type" : "object",
      "properties" : {
        "addressLine" : {
          "type" : "array",
          "description" : "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "items" : {
            "type" : "string",
            "minLength" : 0,
            "maxLength" : 80
          },
          "maxItems" : 4
        },
        "city" : {
          "type" : "string",
          "description" : "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "minLength" : 0,
          "maxLength" : 40
        },
        "postalCode" : {
          "type" : "string",
          "description" : "Post Office Code number.",
          "minLength" : 0,
          "maxLength" : 15
        },
        "state" : {
          "type" : "string",
          "description" : "State or Province name (e.g., Texas).",
          "minLength" : 0,
          "maxLength" : 20
        },
        "country" : {
          "type" : "string",
          "description" : "Country name (e.g., Ireland).",
          "minLength" : 0,
          "maxLength" : 200
        }
      },
      "description" : "Provides address information for a Relationship."
    },
    "profileStatusType" : {
      "type" : "string",
      "enum" : [ "Active", "Inactive" ]
    },
    "masterAccountInfoType" : {
      "type" : "object",
      "properties" : {
        "masterAccountId" : {
          "description" : "Unique ID of the Master account.",
          "$ref" : "#/definitions/uniqueID_Type"
        },
        "masterAccountName" : {
          "type" : "string",
          "description" : "Name of the Master account.",
          "minLength" : 0,
          "maxLength" : 40
        }
      }
    },
    "reservationStayHistoryFutureInfoType" : {
      "type" : "object",
      "properties" : {
        "historyList" : {
          "description" : "Refer to History list type document.",
          "$ref" : "#/definitions/stayHistoryListType"
        },
        "futureList" : {
          "description" : "Refer to Future list type document.",
          "$ref" : "#/definitions/stayFutureListType"
        }
      },
      "description" : "Information of History and Future Reservation details attached to Profiles."
    },
    "stayHistoryListType" : {
      "type" : "object",
      "properties" : {
        "reservationInfo" : {
          "type" : "array",
          "description" : "Additional reservation information attached to the profile . Eg : History reservation details",
          "items" : {
            "$ref" : "#/definitions/stayReservationInfoType"
          },
          "maxItems" : 4000
        },
        "hasMore" : {
          "type" : "boolean",
          "description" : "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response."
        },
        "totalResults" : {
          "type" : "integer",
          "description" : "Total number of rows queried"
        },
        "count" : {
          "type" : "integer",
          "description" : "Total number of rows returned"
        }
      },
      "description" : "A collection of reservation history details attached to Profiles."
    },
    "stayReservationInfoType" : {
      "type" : "object",
      "properties" : {
        "reservationIdList" : {
          "description" : "Unique identifiers for the reservation for both internal and external systems",
          "$ref" : "#/definitions/reservationIdList"
        },
        "roomStay" : {
          "description" : "Collection of room stays.",
          "$ref" : "#/definitions/stayInfoType"
        },
        "attachedProfiles" : {
          "description" : "List of attached profiles",
          "$ref" : "#/definitions/resAttachedProfileListType"
        },
        "hotelId" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "reservationStatus" : {
          "description" : "Indicates the status of the reservation.",
          "$ref" : "#/definitions/pMS_ResStatusType"
        },
        "computedReservationStatus" : {
          "description" : "Indicates the status of the reservation.",
          "$ref" : "#/definitions/pMS_ResStatusType"
        }
      },
      "description" : "The Reservation class contains the current reservation being created or altered."
    },
    "reservationIdList" : {
      "type" : "array",
      "description" : "Unique Id that references an object uniquely in the system.",
      "items" : {
        "$ref" : "#/definitions/uniqueID_Type"
      },
      "maxItems" : 4000
    },
    "stayInfoType" : {
      "type" : "object",
      "properties" : {
        "arrivalDate" : {
          "type" : "string",
          "format" : "date"
        },
        "departureDate" : {
          "type" : "string",
          "format" : "date"
        },
        "originalTimeSpan" : {
          "description" : "The Original Time Span covers the Room Stay dates of the original reservation.",
          "$ref" : "#/definitions/timeSpanType"
        },
        "expectedTimes" : {
          "description" : "The expected arrival, return and departure times of the guest.",
          "$ref" : "#/definitions/resExpectedTimesType"
        },
        "adultCount" : {
          "type" : "integer",
          "description" : "A collection of Guest Counts associated with Room Stay."
        },
        "childCount" : {
          "type" : "integer",
          "description" : "A collection of Child Counts associated with Room Stay."
        },
        "roomClass" : {
          "type" : "string",
          "description" : "Room class code",
          "minLength" : 0,
          "maxLength" : 20
        },
        "roomType" : {
          "type" : "string",
          "description" : "Room type code",
          "minLength" : 0,
          "maxLength" : 20
        },
        "componentRoomType" : {
          "type" : "boolean",
          "description" : "True indicates room type is a component type."
        },
        "numberOfRooms" : {
          "type" : "integer",
          "description" : "Room Id"
        },
        "roomId" : {
          "type" : "string",
          "description" : "Room Id",
          "minLength" : 0,
          "maxLength" : 20
        },
        "ratePlanCode" : {
          "type" : "string",
          "description" : "Rate plan code",
          "minLength" : 0,
          "maxLength" : 20
        },
        "rateAmount" : {
          "description" : "Rate amount",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "points" : {
          "description" : "The Points contains the number of points used to book a particular room type.",
          "$ref" : "#/definitions/pointsType"
        },
        "rateSuppressed" : {
          "type" : "boolean",
          "description" : "Whether this rate should be suppressed from view"
        },
        "reservationBlock" : {
          "description" : "Key information about the block for this reservation.",
          "$ref" : "#/definitions/reservationBlockType"
        },
        "bookingChannelCode" : {
          "type" : "string",
          "description" : "Booking channel code",
          "minLength" : 0,
          "maxLength" : 20
        },
        "linkCode" : {
          "type" : "string",
          "description" : "Party code",
          "maxLength" : 2000
        },
        "fixedRate" : {
          "type" : "boolean",
          "description" : "True if the rate is a fixed rate, otherwise false"
        },
        "totalAmount" : {
          "description" : "The total amount charged for the Room Stay including additional occupant amounts and fees. If TaxInclusive is set to True, then taxes are included in the total amount.",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "guarantee" : {
          "description" : "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref" : "#/definitions/resGuaranteeType"
        },
        "promotion" : {
          "description" : "Promotion Codes",
          "$ref" : "#/definitions/promotionType"
        },
        "marketCode" : {
          "type" : "string",
          "description" : "Market code",
          "minLength" : 0,
          "maxLength" : 20
        },
        "marketDescription" : {
          "type" : "string",
          "description" : "Description of Market code",
          "minLength" : 0,
          "maxLength" : 4000
        },
        "sourceCode" : {
          "type" : "string",
          "description" : "Source of business",
          "minLength" : 0,
          "maxLength" : 20
        },
        "sourceCodeDescription" : {
          "type" : "string",
          "description" : "Description of the source of business.",
          "minLength" : 0,
          "maxLength" : 4000
        },
        "balance" : {
          "description" : "Balance amount",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "compBalance" : {
          "description" : "Comp Balance amount",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "roomTypeCharged" : {
          "type" : "string",
          "description" : "Room type code that was charged",
          "minLength" : 0,
          "maxLength" : 20
        },
        "depositPayments" : {
          "description" : "A collection of deposit and/or payments for the Room Stay.",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "guestServiceStatus" : {
          "description" : "Service Status of In House guest like DND or MUP",
          "$ref" : "#/definitions/guestHousekeepingServiceRequestType"
        },
        "scheduledCheckoutTime" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates that this reservation is scheduled for automated check out."
        },
        "roomNumberLocked" : {
          "type" : "boolean",
          "description" : "When true, indicates a room number cannot be changed. When false, indicates a room number may be changed."
        },
        "pseudoRoom" : {
          "type" : "boolean",
          "description" : "True indicates as pseudo room type. This is usually used for a posting master reservation."
        },
        "assignedByAI" : {
          "type" : "boolean",
          "description" : "Represents the room was assigned by AI Room Assignment."
        },
        "upgradedByAI" : {
          "type" : "boolean",
          "description" : "Represents the room was assigned by AI Room Assignment."
        }
      },
      "description" : "Details on the Room Stay including Guest Counts, Time Span of this Room Stay, pointers to Res Guests, guest Memberships, Comments and Special Requests pertaining to this particular Room Stay and finally financial information related to the Room Stay, including Guarantee, Deposit and Payment and Cancellation Penalties."
    },
    "timeSpanType" : {
      "type" : "object",
      "properties" : {
        "startDate" : {
          "type" : "string",
          "format" : "date"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date"
        }
      },
      "description" : "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date."
    },
    "resExpectedTimesType" : {
      "type" : "object",
      "properties" : {
        "reservationExpectedArrivalTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Arrival Time"
        },
        "reservationExpectedDepartureTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Departure Time"
        }
      },
      "description" : "Holds the Arrival and Departure Time Information"
    },
    "currencyAmountType" : {
      "type" : "object",
      "properties" : {
        "amount" : {
          "type" : "number",
          "description" : "A monetary amount."
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "minLength" : 3,
          "maxLength" : 3
        }
      },
      "description" : "A monetary value expressed with a currency code."
    },
    "pointsType" : {
      "type" : "object",
      "properties" : {
        "awardsType" : {
          "type" : "string",
          "description" : "Awards type for the award type rate code.",
          "maxLength" : 2000
        },
        "points" : {
          "type" : "integer",
          "description" : "No of points required to book this Room Stay."
        }
      },
      "description" : "The Redeem Points contains the number of points required to book a room type."
    },
    "reservationBlockType" : {
      "type" : "object",
      "properties" : {
        "blockIdList" : {
          "description" : "Collection of unique block identifiers for the reservation.",
          "$ref" : "#/definitions/blockIdList"
        },
        "blockName" : {
          "type" : "string",
          "description" : "The Name of the block that is attached to the reservation.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "hotelId" : {
          "type" : "string",
          "description" : "This is the HotelCode of the Block.",
          "minLength" : 0,
          "maxLength" : 20
        }
      },
      "description" : "Key information about the block for a reservation."
    },
    "blockIdList" : {
      "type" : "array",
      "description" : "Unique Id that references an object uniquely in the system.",
      "items" : {
        "$ref" : "#/definitions/uniqueID_Type"
      },
      "maxItems" : 4000
    },
    "resGuaranteeType" : {
      "type" : "object",
      "properties" : {
        "guaranteeCode" : {
          "type" : "string",
          "description" : "Guarantee Code.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "shortDescription" : {
          "type" : "string",
          "description" : "Guarantee Code.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "onHold" : {
          "type" : "boolean",
          "description" : "Guarantee Code."
        }
      },
      "description" : "Validations type record returned after Validations are done."
    },
    "promotionType" : {
      "type" : "object",
      "properties" : {
        "promotionCode" : {
          "type" : "string",
          "description" : "Promotion code associated with the rate plan.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "promotionName" : {
          "type" : "string",
          "description" : "Promotion code Name associated with the rate plan.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "couponCode" : {
          "type" : "string",
          "description" : "Promotion Coupon Code when promotion is setup to have a valid coupon code.",
          "minLength" : 0,
          "maxLength" : 40
        }
      },
      "description" : "Type to specify a rate promotion. Usually attached to a reservation to indicate a specific promotion is applied to the reservation."
    },
    "guestHousekeepingServiceRequestType" : {
      "type" : "string",
      "description" : "Possible values for the Guest Service Status.",
      "enum" : [ "DoNotDisturb", "MakeUpRoom", "NoStatusSelected" ]
    },
    "resAttachedProfileListType" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/resAttachedProfileType"
      },
      "maxItems" : 4000
    },
    "resAttachedProfileType" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Attached profile name",
          "maxLength" : 2000
        },
        "profileIdList" : {
          "description" : "Collection of unique profile identifiers",
          "$ref" : "#/definitions/profileIdList"
        },
        "reservationProfileType" : {
          "$ref" : "#/definitions/resProfileTypeType"
        }
      }
    },
    "profileIdList" : {
      "type" : "array",
      "description" : "Unique Id that references an object uniquely in the system.",
      "items" : {
        "$ref" : "#/definitions/uniqueID_Type"
      },
      "maxItems" : 4000
    },
    "resProfileTypeType" : {
      "type" : "string",
      "enum" : [ "Guest", "Company", "Group", "TravelAgent", "Source", "ReservationContact", "BillingContact", "Addressee" ]
    },
    "pMS_ResStatusType" : {
      "type" : "string",
      "description" : "This reservation is in checked in status and the business date is past departure date. This could occur when ORS and PMS are in same environment.",
      "enum" : [ "Reserved", "Requested", "NoShow", "Cancelled", "InHouse", "CheckedOut", "Waitlisted", "DueIn", "DueOut", "Walkin", "PendingCheckout" ]
    },
    "stayFutureListType" : {
      "type" : "object",
      "properties" : {
        "reservationInfo" : {
          "type" : "array",
          "description" : "Additional reservation information attached to the profile . Eg : Future reservation details",
          "items" : {
            "$ref" : "#/definitions/stayReservationInfoType"
          },
          "maxItems" : 4000
        },
        "hasMore" : {
          "type" : "boolean",
          "description" : "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response."
        },
        "totalResults" : {
          "type" : "integer",
          "description" : "Total number of rows queried"
        },
        "count" : {
          "type" : "integer",
          "description" : "Total number of rows returned"
        }
      },
      "description" : "A collection of reservation history details attached to Profiles."
    },
    "linkedProfileTypeType" : {
      "type" : "string",
      "description" : "Simple type for profile types linked to activity.",
      "enum" : [ "Company", "Agent", "Source", "CompanyContact", "AgentContact", "SourceContact" ]
    },
    "blockListType" : {
      "type" : "array",
      "description" : "List of Blocks that are linked to the Activity.",
      "items" : {
        "$ref" : "#/definitions/activityBlockInfoType"
      },
      "maxItems" : 4000
    },
    "activityBlockInfoType" : {
      "type" : "object",
      "properties" : {
        "blockIdList" : {
          "description" : "List of Blocks that are linked to the Activity.",
          "$ref" : "#/definitions/uniqueNameIDListType"
        },
        "blockCode" : {
          "type" : "string",
          "description" : "Block code for the block.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "blockName" : {
          "type" : "string",
          "description" : "Name of the block.",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "timeSpan" : {
          "description" : "The Time Span(Start Date, End Date) which covers the Block Span.",
          "$ref" : "#/definitions/timeSpanType"
        },
        "primary" : {
          "type" : "boolean",
          "description" : "When true, indicates a primary information."
        }
      },
      "description" : ""
    },
    "uniqueNameIDListType" : {
      "type" : "array",
      "description" : "Defines descriptive name and unique identification combination.",
      "items" : {
        "$ref" : "#/definitions/uniqueNameIDType"
      },
      "maxItems" : 4000
    },
    "uniqueNameIDType" : {
      "type" : "object",
      "properties" : {
        "primary" : {
          "type" : "boolean",
          "description" : "When true, indicates a primary information."
        },
        "id" : {
          "type" : "string",
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "type" : {
          "type" : "string",
          "description" : "A reference to the type of object defined by the UniqueID element.",
          "minLength" : 0,
          "maxLength" : 40
        }
      },
      "description" : "Defines descriptive name, unique identification, and basic information combination."
    },
    "attachmentsType" : {
      "type" : "array",
      "description" : "Attachment List.",
      "items" : {
        "$ref" : "#/definitions/attachmentType"
      },
      "maxItems" : 4000
    },
    "attachmentType" : {
      "type" : "object",
      "properties" : {
        "fileName" : {
          "type" : "string",
          "description" : "Name of the file.",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "fileSize" : {
          "type" : "integer",
          "description" : "Size of the file."
        },
        "description" : {
          "type" : "string",
          "description" : "Description for the file.",
          "minLength" : 0,
          "maxLength" : 4000
        },
        "global" : {
          "type" : "boolean",
          "description" : "Flag to say if attachment is available across properties."
        },
        "hotelId" : {
          "type" : "string",
          "description" : "Hotel Code.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "history" : {
          "description" : "History data associated with Attachment.",
          "$ref" : "#/definitions/dateTimeStampGroupType"
        },
        "url" : {
          "type" : "string",
          "description" : "URL that identifies the location associated with the record identified by the UniqueID.",
          "maxLength" : 2000
        },
        "type" : {
          "type" : "string",
          "description" : "A reference to the type of object defined by the UniqueID element.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "instance" : {
          "type" : "string",
          "description" : "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "idContext" : {
          "type" : "string",
          "description" : "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "minLength" : 0,
          "maxLength" : 80
        },
        "id" : {
          "type" : "string",
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "minLength" : 0,
          "maxLength" : 80
        }
      },
      "description" : "Attached files."
    },
    "dateTimeStampGroupType" : {
      "type" : "object",
      "properties" : {
        "createDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Time stamp of the creation."
        },
        "creatorId" : {
          "type" : "string",
          "description" : "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "minLength" : 0,
          "maxLength" : 200
        },
        "lastModifyDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Time stamp of last modification."
        },
        "lastModifierId" : {
          "type" : "string",
          "description" : "Identifies the last software system or person to modify a record.",
          "minLength" : 0,
          "maxLength" : 200
        }
      }
    },
    "linkedActivityDetailsType" : {
      "type" : "object",
      "properties" : {
        "activityId" : {
          "description" : "Unique identifier of the linked activity.",
          "$ref" : "#/definitions/activityId"
        },
        "linkedActivityDetail" : {
          "description" : "Linked Activity Related Information.",
          "$ref" : "#/definitions/activityInfoType"
        }
      },
      "description" : "Linked Activity Related Information."
    },
    "indicatorsType" : {
      "type" : "array",
      "description" : "Collection of lamp indicators.",
      "items" : {
        "$ref" : "#/definitions/indicatorType"
      },
      "maxItems" : 4000
    },
    "indicatorType" : {
      "type" : "object",
      "properties" : {
        "indicatorName" : {
          "type" : "string",
          "description" : "Name of the indicator.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "count" : {
          "type" : "integer",
          "description" : "Indicates number of occurrences of the indicator."
        }
      },
      "description" : "Lamp indicator Type."
    },
    "links" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/instanceLink"
      }
    },
    "instanceLink" : {
      "type" : "object",
      "required" : [ "href", "method", "operationId", "rel" ],
      "properties" : {
        "href" : {
          "type" : "string",
          "description" : "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true."
        },
        "rel" : {
          "type" : "string",
          "description" : "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile."
        },
        "templated" : {
          "type" : "boolean",
          "description" : "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "default" : false
        },
        "method" : {
          "type" : "string",
          "description" : "HTTP method for requesting the target of the link.",
          "enum" : [ "GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS", "HEAD" ]
        },
        "targetSchema" : {
          "type" : "string",
          "description" : "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource.."
        },
        "operationId" : {
          "type" : "string",
          "description" : "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply."
        },
        "title" : {
          "type" : "string",
          "description" : "Exact copy of the \"summary\" field on the linked operation."
        }
      },
      "description" : "Metadata describing link description objects that MAY appear in the JSON instance representation."
    },
    "warningsType" : {
      "type" : "array",
      "description" : "Used in conjunction with the Success element to define a business error.",
      "items" : {
        "$ref" : "#/definitions/warningType"
      },
      "maxItems" : 4000
    },
    "warningType" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string",
          "description" : "Property Value"
        },
        "shortText" : {
          "type" : "string",
          "description" : "An abbreviated version of the error in textual format.",
          "maxLength" : 2000
        },
        "code" : {
          "type" : "string",
          "description" : "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "docURL" : {
          "type" : "string",
          "description" : "If present, this URL refers to an online description of the error that occurred.",
          "maxLength" : 2000
        },
        "status" : {
          "type" : "string",
          "description" : "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "maxLength" : 2000
        },
        "tag" : {
          "type" : "string",
          "description" : "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "maxLength" : 2000
        },
        "recordId" : {
          "type" : "string",
          "description" : "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "maxLength" : 2000
        },
        "type" : {
          "type" : "string",
          "description" : "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "minLength" : 0,
          "maxLength" : 20
        },
        "language" : {
          "type" : "string",
          "description" : "Language identification.",
          "pattern" : "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "rph" : {
          "type" : "string",
          "description" : "Reference Place Holder used as an index for this warning.",
          "minLength" : 1,
          "maxLength" : 8
        }
      },
      "description" : "Used when a message has been successfully processed to report any warnings or business errors that occurred."
    },
    "exceptionDetailType" : {
      "type" : "object",
      "required" : [ "title", "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title" : {
          "type" : "string",
          "description" : "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status" : {
          "type" : "integer",
          "description" : "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail" : {
          "type" : "string",
          "description" : "Human-readable description specific to this occurrence of the problem."
        },
        "o:errorCode" : {
          "type" : "string",
          "description" : "Application error code, which is different from HTTP error code."
        },
        "o:errorPath" : {
          "type" : "string",
          "description" : "Path to the problem at the resource or property level."
        },
        "o:errorDetails" : {
          "type" : "array",
          "description" : "Details of the error message, consisting of a hierarchical tree structure.",
          "items" : {
            "$ref" : "#/definitions/errorInstance"
          }
        },
        "links" : {
          "$ref" : "#/definitions/links"
        }
      },
      "title" : "Error Detail",
      "description" : "Complex type that contains error details for a REST call."
    },
    "errorInstance" : {
      "type" : "object",
      "required" : [ "title", "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title" : {
          "type" : "string",
          "description" : "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status" : {
          "type" : "integer",
          "description" : "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail" : {
          "type" : "string",
          "description" : "Human-readable description specific to this occurrence of the problem."
        },
        "instance" : {
          "type" : "string",
          "description" : "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode" : {
          "type" : "string",
          "description" : "Application error code, which is different from HTTP error code."
        },
        "o:errorPath" : {
          "type" : "string",
          "description" : "Path to the problem at the resource or property level."
        }
      },
      "title" : "Error Instance Details",
      "description" : "Complex type that contains error instance details for a REST call."
    },
    "status" : {
      "type" : "object",
      "properties" : {
        "warnings" : {
          "$ref" : "#/definitions/warningsType"
        },
        "links" : {
          "$ref" : "#/definitions/links"
        }
      },
      "description" : "Existing Operations Responses will eventually be modified to be extended from this type."
    },
    "activitiesToChange" : {
      "type" : "object",
      "properties" : {
        "activitiesInformation" : {
          "description" : "Activities details to be updated.",
          "$ref" : "#/definitions/activityListType"
        },
        "activityDetailsEditFlag" : {
          "type" : "boolean",
          "description" : "Signifies whether only activity details are being modified."
        },
        "updateLinkedActivities" : {
          "type" : "boolean",
          "description" : "Signifies whether the linked activity details should be modified or not."
        },
        "completeMode" : {
          "type" : "boolean",
          "description" : "Signifies whether complete details of activity should alone be modified."
        },
        "links" : {
          "$ref" : "#/definitions/links"
        },
        "warnings" : {
          "$ref" : "#/definitions/warningsType"
        }
      }
    },
    "activitiesInformation" : {
      "type" : "object",
      "properties" : {
        "activitiesInformation" : {
          "description" : "Activities details to be created.",
          "$ref" : "#/definitions/activityListType"
        },
        "links" : {
          "$ref" : "#/definitions/links"
        },
        "warnings" : {
          "$ref" : "#/definitions/warningsType"
        }
      }
    },
    "activity" : {
      "type" : "object",
      "properties" : {
        "activityDetails" : {
          "description" : "Type used to hold Activity in detail.",
          "$ref" : "#/definitions/activityDetailsType"
        },
        "links" : {
          "$ref" : "#/definitions/links"
        },
        "warnings" : {
          "$ref" : "#/definitions/warningsType"
        }
      }
    }
  },
  "parameters" : {
    "authKey" : {
      "name" : "authorization",
      "in" : "header",
      "description" : "Bearer token that needs to be passed which is generated post user authentication",
      "required" : true,
      "type" : "string"
    },
    "x-app-key" : {
      "name" : "x-app-key",
      "in" : "header",
      "description" : "Client or Partnerâ€™s Application Key",
      "required" : true,
      "type" : "string",
      "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
    },
    "x-hotelid" : {
      "name" : "x-hotelid",
      "in" : "header",
      "description" : "Mandatory parameter to identify the hotel code where the end user is logged in",
      "required" : true,
      "type" : "string"
    },
    "x-externalsystem" : {
      "name" : "x-externalsystem",
      "in" : "header",
      "description" : "External system code.",
      "required" : false,
      "type" : "string",
      "maxLength" : 80,
      "x-example" : "EXTERNALSYSTEMCODE"
    },
    "Accept-Language" : {
      "name" : "Accept-Language",
      "in" : "header",
      "description" : "Language code",
      "required" : false,
      "type" : "string"
    }
  },
  "responses" : {
    "400" : {
      "description" : "Bad Request",
      "schema" : {
        "$ref" : "#/definitions/exceptionDetailType"
      }
    },
    "401" : {
      "description" : "Unauthorized"
    },
    "403" : {
      "description" : "Forbidden"
    },
    "404" : {
      "description" : "Resource not found",
      "schema" : {
        "$ref" : "#/definitions/exceptionDetailType"
      }
    },
    "405" : {
      "description" : "Method not allowed"
    },
    "406" : {
      "description" : "Not acceptable."
    },
    "413" : {
      "description" : "Request Entity Too Large"
    },
    "414" : {
      "description" : "Request URI Too Large"
    },
    "415" : {
      "description" : "Unsupported Media Type"
    },
    "500" : {
      "description" : "System Error",
      "schema" : {
        "$ref" : "#/definitions/exceptionDetailType"
      }
    },
    "502" : {
      "description" : "Bad Gateway"
    },
    "503" : {
      "description" : "Service Unavailable"
    }
  },
  "externalDocs" : {
    "description" : "Find out more about Oracle Hospitality",
    "url" : "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}