{
  "swagger" : "2.0",
  "info" : {
    "description" : "APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).",
    "version" : "21.1.1",
    "title" : "Early Release OPERA Cloud Block API",
    "termsOfService" : "https://www.oracle.com/legal/terms.html",
    "contact" : {
      "email" : "hospitality_apis_ww_grp@oracle.com"
    },
    "license" : {
      "name" : "UPL",
      "url" : "https://opensource.org/licenses/upl"
    }
  },
  "basePath" : "/blk/v0",
  "tags" : [ {
    "name" : "Block",
    "description" : "These APIs will allow you to completely create and manage your block in OPERA Cloud - including all related functionalities of a block such as manage Room allocation, Status update, block reservations.  You can search for a block, get a Block, update and create new Blocks."
  } ],
  "schemes" : [ "https" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/hotels/{hotelId}/blocks/{blockId}" : {
      "get" : {
        "tags" : [ "Block" ],
        "summary" : "Get a Block By ID",
        "description" : "Use this API to retrieve a specific block.  You will need to know the blockID in the request; if you don't know it, please go ahead and use getBlocks API first.  The response will include detailed information about the block. <p><strong>OperationId:</strong>getBlock</p>",
        "operationId" : "getBlock",
        "parameters" : [ {
          "name" : "blockId",
          "in" : "path",
          "description" : "Unique OPERA Block ID which is used to find a Block from OPERA. This ID is a primary identification of a Block in OPERA.",
          "required" : true,
          "type" : "string",
          "maxLength" : 2000,
          "minLength" : 1,
          "x-example" : ""
        }, {
          "name" : "hotelId",
          "in" : "path",
          "description" : "Hotel Id",
          "required" : true,
          "type" : "string",
          "maxLength" : 2000,
          "minLength" : 1,
          "x-example" : ""
        }, {
          "name" : "markAsRecentlyAccessed",
          "in" : "query",
          "description" : "Mark this block as recently accessed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "fetchInstructions",
          "in" : "query",
          "description" : "Type for block instructions that can be used in requests for partial operations.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "AccessExclusions", "Aliases", "AlternateDates", "Attachments", "Block", "BlockNextStatuses", "BlockStatusHistory", "CatNextStatuses", "CatStatusHistory", "Comments", "DateProtect", "ExternalReferences", "GenericRateGrid", "Header", "Indicators", "InventoryItems", "Owners", "Packages", "Policies", "PrimaryOwners", "PrimaryProfiles", "PrimaryRates", "Profiles", "RateGrid", "RateProgram", "Rates", "Restrictions", "SellMessages", "Statistics", "SummaryStatistics", "Traces", "WashSchedules" ]
          },
          "collectionFormat" : "multi",
          "uniqueItems" : true
        }, {
          "name" : "fetchAllocatedRoomTypes",
          "in" : "query",
          "description" : "Indicates whether to fetch only those room types that have rooms allocated. If this flag is true then only those room types with rooms allocated for the block are fetched. Only applicable to fetch instruction RateGrid.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "Start Date for the rate grid data. Only applicable to fetch instruction RateGrid.",
          "required" : false,
          "type" : "string",
          "format" : "date"
        }, {
          "name" : "numberOfDays",
          "in" : "query",
          "description" : "Number of days to fetch for the rate grid data. Only applicable to fetch instruction RateGrid.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "roomAllocationCriteria",
          "in" : "query",
          "description" : "Simple type for block allocation used in room rate grid.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "Initial", "Actual", "Rates", "Pickup", "Contract", "Available", "Pickupperc", "Changes", "Released", "Houseavailability", "SellLimit", "AvailableSellLimit", "MasterAllocInitial", "Allocated", "SubAllocResv", "CutoffDate" ]
          },
          "collectionFormat" : "multi",
          "uniqueItems" : true
        }, {
          "name" : "authorization",
          "in" : "header",
          "description" : "Bearer token that needs to be passed which is generated post user authentication",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-app-key",
          "in" : "header",
          "description" : "Client or Partner’s Application Key",
          "required" : true,
          "type" : "string",
          "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
        }, {
          "name" : "x-hotelid",
          "in" : "header",
          "description" : "Mandatory parameter to identify the hotel code where the end user is logged in",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-externalsystem",
          "in" : "header",
          "description" : "External system code.",
          "required" : false,
          "type" : "string",
          "maxLength" : 80,
          "x-example" : "EXTERNALSYSTEMCODE"
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Language code",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "It also contains Success,Warnings and Errors related to this operation.",
            "examples" : {
              "application/json" : {
                "blocks" : {
                  "blockInfo" : [ {
                    "block" : {
                      "blockIdList" : [ {
                        "id" : "116467",
                        "type" : "Block",
                        "idContext" : "OPERA"
                      }, {
                        "id" : "258381",
                        "type" : "GroupId",
                        "idContext" : "OPERA"
                      }, {
                        "type" : "ExternalReference",
                        "idContext" : "EXTREF"
                      }, {
                        "id" : "535298",
                        "type" : "ExternalReference",
                        "idContext" : "ORS"
                      } ],
                      "blockDetails" : {
                        "blockCode" : "ABCEVENT0516",
                        "blockName" : "ABC Business Event",
                        "timeSpan" : {
                          "startDate" : "2020-05-08",
                          "endDate" : "2020-05-24"
                        },
                        "shoulderRatePlanCode" : {
                          "shoulderStart" : [ {
                            "description" : "Rack Rate",
                            "currencyCode" : "USD",
                            "ratePlanCode" : "RACK",
                            "primary" : true,
                            "marketCode" : "HOTEL1",
                            "sourceCode" : "PRICE",
                            "negotiated" : false
                          } ],
                          "shoulderEnd" : [ {
                            "description" : "Rate Description",
                            "currencyCode" : "USD",
                            "ratePlanCode" : "FIXED",
                            "primary" : true,
                            "marketCode" : "CORP",
                            "sourceCode" : "CREF",
                            "negotiated" : false
                          } ]
                        },
                        "blockStatus" : {
                          "bookingStatus" : {
                            "status" : {
                              "code" : "DEF",
                              "description" : "Definite"
                            }
                          },
                          "deductInventory" : true,
                          "allowPickup" : true,
                          "returnToInventory" : false
                        },
                        "blockNextStatusList" : [ {
                          "bookingStatus" : {
                            "status" : {
                              "code" : "ACT",
                              "description" : "Actual"
                            }
                          },
                          "parentBookingStatus" : "DEF",
                          "deductInventory" : true,
                          "allowPickup" : true,
                          "returnToInventory" : false
                        }, {
                          "bookingStatus" : {
                            "status" : {
                              "code" : "CAN",
                              "description" : "Cancel"
                            }
                          },
                          "parentBookingStatus" : "DEF",
                          "deductInventory" : false,
                          "allowPickup" : false,
                          "returnToInventory" : true
                        }, {
                          "bookingStatus" : {
                            "status" : {
                              "code" : "LOS",
                              "description" : "Lost"
                            }
                          },
                          "parentBookingStatus" : "DEF",
                          "deductInventory" : false,
                          "allowPickup" : false,
                          "returnToInventory" : true
                        } ],
                        "blockStatusChangeHistory" : [ {
                          "sequence" : "1",
                          "bookingStatus" : {
                            "code" : "DED",
                            "description" : "Inquiry"
                          },
                          "modifyDateTime" : "2020-01-18 16:16:39.0",
                          "modifierId" : "BEN.SMITH"
                        }, {
                          "sequence" : "2",
                          "bookingStatus" : {
                            "code" : "DEF",
                            "description" : "Definite"
                          },
                          "modifyDateTime" : "2020-01-18 16:20:58.0",
                          "modifierId" : "BEN.SMITH"
                        } ],
                        "reservationType" : {
                          "reservationType" : "GDED",
                          "description" : "Group Deduct"
                        },
                        "marketCode" : {
                          "marketCode" : "HOTEL1",
                          "marketGroup" : "CAT",
                          "description" : "Hotel1 Market Group 1"
                        },
                        "sourceOfSale" : {
                          "sourceCode" : {
                            "sourceCode" : "PRICE",
                            "sourceGroup" : "PRICE",
                            "description" : "Priceline"
                          }
                        },
                        "reservationMethod" : {
                          "code" : "RML",
                          "description" : "Rooming List"
                        },
                        "status" : "O",
                        "blockType" : "TENTATIVE",
                        "paymentMethod" : {
                          "code" : "CA",
                          "description" : "Cash"
                        },
                        "rateProtectionDetails" : {
                          "criteria" : "None"
                        },
                        "nonCompeteDetails" : {
                          "criteria" : "None"
                        },
                        "currencyCode" : "USD",
                        "blockClassification" : "RegularBooking",
                        "synchronized" : false,
                        "cateringOnlyBlock" : false,
                        "flexibleDates" : false,
                        "externalLocked" : false,
                        "autoloadContractGrid" : true,
                        "allowRateOverride" : false,
                        "manualCutOff" : false,
                        "wholesaleBlock" : false,
                        "controlBlockLocally" : false,
                        "businessDateArrivalsExist" : false
                      },
                      "blockOwners" : {
                        "owner" : [ {
                          "userName" : "JEN@HOTEL1",
                          "ownerCode" : "JEN",
                          "profileId" : {
                            "type" : "Profile",
                            "idContext" : "OPERA",
                            "id" : "24211"
                          },
                          "name" : {
                            "givenName" : "Jennifer",
                            "surname" : "Clarke"
                          },
                          "email" : {
                            "email" : {
                              "emailAddress" : "Jennifer.Clarke@example.com"
                            }
                          },
                          "primary" : true,
                          "ownership" : "Block"
                        }, {
                          "userName" : "BEN.SMITH@SFIRST",
                          "ownerCode" : "BS",
                          "profileId" : {
                            "type" : "Profile",
                            "idContext" : "OPERA",
                            "id" : "151308"
                          },
                          "name" : {
                            "givenName" : "Sarah",
                            "surname" : "Johnson"
                          },
                          "email" : {
                            "email" : {
                              "emailAddress" : "Sarah.Johnson@example.com"
                            }
                          },
                          "primary" : false,
                          "ownership" : "Block"
                        }, {
                          "userName" : "TOM@HOTEL1",
                          "ownerCode" : "AMF",
                          "profileId" : {
                            "type" : "Profile",
                            "idContext" : "OPERA",
                            "id" : "197815"
                          },
                          "name" : {
                            "givenName" : "Tom",
                            "surname" : "Brown"
                          },
                          "email" : {
                            "email" : {
                              "emailAddress" : "tom.brown@example.com"
                            }
                          },
                          "primary" : false,
                          "ownership" : "Block"
                        }, {
                          "userName" : "BEN.SMITH@HOTEL1",
                          "ownerCode" : "BS",
                          "profileId" : {
                            "type" : "Profile",
                            "idContext" : "OPERA",
                            "id" : "151308"
                          },
                          "name" : {
                            "givenName" : "Sarah",
                            "surname" : "Johnson"
                          },
                          "email" : {
                            "email" : {
                              "emailAddress" : "sarah.johnson@example.com"
                            }
                          },
                          "primary" : true,
                          "ownership" : "Rooms"
                        } ],
                        "lockBlockOwners" : false,
                        "lockRoomsOwners" : false,
                        "lockCateringOwners" : false
                      },
                      "reservationPolicies" : [ {
                        "reservationIdList" : [ {
                          "id" : "208314",
                          "type" : "Reservation",
                          "idContext" : "OPERA"
                        }, {
                          "id" : "338347",
                          "type" : "Confirmation",
                          "idContext" : "OPERA"
                        } ],
                        "name" : "Friday demo"
                      } ],
                      "reservationDetails" : {
                        "ratePlanCode" : [ {
                          "description" : "Promotional Rate 2",
                          "currencyCode" : "USD",
                          "ratePlanCode" : "PROMO1",
                          "primary" : false,
                          "negotiated" : false
                        }, {
                          "description" : "Promotional Rate Description",
                          "currencyCode" : "USD",
                          "ratePlanCode" : "FIXED",
                          "primary" : false,
                          "marketCode" : "CORPC1",
                          "sourceCode" : "CREF",
                          "negotiated" : false
                        }, {
                          "description" : "Rack Rate",
                          "currencyCode" : "USD",
                          "ratePlanCode" : "RACK",
                          "primary" : true,
                          "marketCode" : "HOTEL1",
                          "sourceCode" : "PRICE",
                          "negotiated" : false
                        } ],
                        "arrivalTime" : "2020-05-08",
                        "departureTime" : "2020-05-24 09:00:00.0",
                        "breakfast" : {
                          "breakfastIncluded" : false,
                          "price" : {
                            "currencyCode" : "USD"
                          }
                        },
                        "porterage" : {
                          "porterageIncluded" : true,
                          "price" : {
                            "currencyCode" : "USD"
                          }
                        },
                        "cutOffDays" : "2",
                        "decisionDate" : "2020-05-08",
                        "suppressRate" : false,
                        "printRate" : true,
                        "rateGuarantee" : false,
                        "inventoryControl" : "Elastic",
                        "activePostingMasterReservations" : false,
                        "housing" : false,
                        "guaranteeRequired" : false
                      },
                      "catering" : {
                        "cateringStatus" : {
                          "bookingStatus" : {
                            "status" : {
                              "code" : "PRO",
                              "description" : "Prospect"
                            }
                          },
                          "deductInventory" : false,
                          "allowPickup" : false,
                          "returnToInventory" : false
                        },
                        "cateringInternalStatus" : "F",
                        "cateringNextStatusList" : [ {
                          "bookingStatus" : {
                            "status" : {
                              "code" : "CAN",
                              "description" : "Cancel"
                            }
                          },
                          "parentBookingStatus" : "PRO",
                          "catDeductInventory" : false,
                          "allowPickup" : false,
                          "returnToInventory" : true
                        }, {
                          "bookingStatus" : {
                            "status" : {
                              "code" : "STP",
                              "description" : "SP Test Status"
                            }
                          },
                          "parentBookingStatus" : "PRO",
                          "catDeductInventory" : true,
                          "allowPickup" : false,
                          "returnToInventory" : false
                        }, {
                          "bookingStatus" : {
                            "status" : {
                              "code" : "LOST",
                              "description" : "Lost"
                            }
                          },
                          "parentBookingStatus" : "PRO",
                          "catDeductInventory" : false,
                          "allowPickup" : false,
                          "returnToInventory" : true
                        }, {
                          "bookingStatus" : {
                            "status" : {
                              "code" : "ALLO",
                              "description" : "Allotment (non ded)"
                            }
                          },
                          "parentBookingStatus" : "PRO",
                          "catDeductInventory" : false,
                          "allowPickup" : false,
                          "returnToInventory" : false
                        }, {
                          "bookingStatus" : {
                            "status" : {
                              "code" : "TE1",
                              "description" : "TEN"
                            }
                          },
                          "parentBookingStatus" : "PRO",
                          "catDeductInventory" : false,
                          "allowPickup" : false,
                          "returnToInventory" : false
                        }, {
                          "bookingStatus" : {
                            "status" : {
                              "code" : "OPEN",
                              "description" : "Open for pickup"
                            }
                          },
                          "parentBookingStatus" : "PRO",
                          "catDeductInventory" : true,
                          "allowPickup" : false,
                          "returnToInventory" : false
                        }, {
                          "bookingStatus" : {
                            "status" : {
                              "code" : "REF",
                              "description" : "Refused"
                            }
                          },
                          "parentBookingStatus" : "PRO",
                          "catDeductInventory" : false,
                          "allowPickup" : false,
                          "returnToInventory" : true
                        }, {
                          "bookingStatus" : {
                            "status" : {
                              "code" : "TDN",
                              "description" : "Turndown"
                            }
                          },
                          "parentBookingStatus" : "PRO",
                          "catDeductInventory" : false,
                          "allowPickup" : false,
                          "returnToInventory" : true
                        }, {
                          "bookingStatus" : {
                            "status" : {
                              "code" : "LOS",
                              "description" : "Lost"
                            }
                          },
                          "parentBookingStatus" : "PRO",
                          "catDeductInventory" : false,
                          "allowPickup" : false,
                          "returnToInventory" : true
                        } ],
                        "cateringStatusChangeHistory" : [ {
                          "sequence" : "1",
                          "bookingStatus" : {
                            "code" : "PRO",
                            "description" : "Prospect"
                          },
                          "modifyDateTime" : "2020-01-18 16:16:39.0",
                          "modifierId" : "BEN.SMITH"
                        } ],
                        "eventAttendees" : {
                          "noOfAttendees" : "10",
                          "attendeesGuaranteed" : false
                        },
                        "boardInfo" : "post as",
                        "onSiteName" : "onsite name",
                        "functionInfo" : "Function type",
                        "trackChanges" : true,
                        "cateringRevenue" : {
                          "serviceCharge" : {
                            "currencyCode" : "USD"
                          },
                          "taxAmount" : {
                            "currencyCode" : "USD"
                          }
                        },
                        "decisionDate" : "2020-05-08",
                        "hasPackageEvents" : false
                      },
                      "blockProfiles" : {
                        "blockProfile" : [ {
                          "profileIdList" : [ {
                            "id" : "209860",
                            "type" : "AgentId",
                            "idContext" : "OPERA"
                          }, {
                            "id" : "209860",
                            "type" : "Profile",
                            "idContext" : "OPERA"
                          } ],
                          "profile" : {
                            "company" : {
                              "companyName" : "Oracle America Inc"
                            },
                            "addresses" : {
                              "addressInfo" : [ {
                                "address" : {
                                  "addressLine" : [ "500 Oracle Parkway" ],
                                  "cityName" : "Redwood Shores",
                                  "postalCode" : "94065",
                                  "county" : "US",
                                  "state" : "CA",
                                  "country" : {
                                    "code" : "US"
                                  },
                                  "type" : "Business Address"
                                }
                              } ]
                            },
                            "profileType" : "Agent"
                          },
                          "primary" : true,
                          "blockProfileType" : "Agent",
                          "defaultPrint" : false
                        }, {
                          "profileIdList" : [ {
                            "id" : "209862",
                            "type" : "AgentContactId",
                            "idContext" : "OPERA"
                          }, {
                            "id" : "209862",
                            "type" : "Profile",
                            "idContext" : "OPERA"
                          } ],
                          "profile" : {
                            "customer" : {
                              "personName" : [ {
                                "givenName" : "Sue",
                                "surname" : "Smith"
                              } ]
                            },
                            "addresses" : {
                              "addressInfo" : [ {
                                "address" : {
                                  "addressLine" : [ "10 Main Street" ],
                                  "cityName" : "Bright City",
                                  "county" : "CA",
                                  "country" : {
                                    "code" : "CA"
                                  },
                                  "type" : "Home Address"
                                }
                              } ]
                            },
                            "telephones" : {
                              "telephoneInfo" : [ {
                                "telephone" : {
                                  "phoneNumber" : "+1 415 555 0100"
                                }
                              } ]
                            },
                            "emails" : {
                              "emailInfo" : [ {
                                "email" : {
                                  "emailAddress" : "eg@example.com"
                                }
                              } ]
                            },
                            "relationships" : {
                              "relationship" : [ {
                                "relationshipProfile" : {
                                  "company" : {
                                    "companyName" : "Oracle America Inc."
                                  },
                                  "profileIdList" : [ {
                                    "id" : "209860",
                                    "type" : "AgentId",
                                    "idContext" : "OPERA"
                                  } ],
                                  "profileType" : "Agent"
                                },
                                "relation" : "Employee",
                                "targetRelation" : "Employer"
                              } ]
                            },
                            "profileType" : "Contact"
                          },
                          "primary" : true,
                          "blockProfileType" : "AgentContact",
                          "defaultPrint" : false
                        }, {
                          "profileIdList" : [ {
                            "id" : "219591",
                            "type" : "SourceId",
                            "idContext" : "OPERA"
                          }, {
                            "id" : "219591",
                            "type" : "Profile",
                            "idContext" : "OPERA"
                          } ],
                          "profile" : {
                            "company" : {
                              "companyName" : "Sample Company"
                            },
                            "addresses" : {
                              "addressInfo" : [ {
                                "address" : {
                                  "addressLine" : [ "25 First Street" ],
                                  "cityName" : "New York",
                                  "postalCode" : "10011",
                                  "county" : "US",
                                  "state" : "NY",
                                  "country" : {
                                    "code" : "US"
                                  },
                                  "type" : "Business Address"
                                }
                              } ]
                            },
                            "telephones" : {
                              "telephoneInfo" : [ {
                                "telephone" : {
                                  "phoneNumber" : "+1 415 555 0100"
                                }
                              } ]
                            },
                            "emails" : {
                              "emailInfo" : [ {
                                "email" : {
                                  "emailAddress" : "example@example.com"
                                }
                              } ]
                            },
                            "profileType" : "Source"
                          },
                          "primary" : true,
                          "blockProfileType" : "Source",
                          "defaultPrint" : false
                        }, {
                          "profileIdList" : [ {
                            "id" : "42715",
                            "type" : "SourceId",
                            "idContext" : "OPERA"
                          }, {
                            "id" : "42715",
                            "type" : "Profile",
                            "idContext" : "OPERA"
                          } ],
                          "profile" : {
                            "company" : {
                              "companyName" : "Expedia"
                            },
                            "telephones" : {
                              "telephoneInfo" : [ {
                                "telephone" : {
                                  "phoneNumber" : "+1 415 555 0000"
                                }
                              } ]
                            },
                            "profileType" : "Source"
                          },
                          "primary" : false,
                          "blockProfileType" : "Source",
                          "defaultPrint" : false
                        }, {
                          "profileIdList" : [ {
                            "id" : "258381",
                            "type" : "GroupId",
                            "idContext" : "OPERA"
                          }, {
                            "id" : "258381",
                            "type" : "Profile",
                            "idContext" : "OPERA"
                          } ],
                          "profile" : {
                            "company" : {
                              "companyName" : "Friday Co"
                            },
                            "profileType" : "Group"
                          },
                          "primary" : true,
                          "blockProfileType" : "Group",
                          "defaultPrint" : false
                        } ],
                        "fullOverlay" : false
                      },
                      "blockPackages" : [ {
                        "packageHeaderType" : {
                          "primaryDetails" : {
                            "description" : "Continental Breakfast - Include in Rate"
                          },
                          "transactionDetails" : {
                            "allowance" : false,
                            "currency" : "USD",
                            "postingType" : "D",
                            "calculationRule" : "P"
                          },
                          "postingAttributes" : {
                            "addToRate" : false,
                            "printSeparateLine" : false,
                            "postNextDay" : false,
                            "forecastNextDay" : true
                          }
                        },
                        "consumptionDetails" : { },
                        "packageCode" : "BKFT1",
                        "ratePlanCode" : "GINGIE"
                      } ],
                      "blockStatistics" : {
                        "allocatedRoomStatistics" : {
                          "roomCount" : "91",
                          "roomRevenue" : "-9000",
                          "averageRate" : "-98.9"
                        },
                        "actualRoomStatistics" : {
                          "roomCount" : "20",
                          "roomRevenue" : "3543",
                          "averageRate" : "177.15"
                        },
                        "cateringRevenueOnBooks" : "340",
                        "actualCateringRevenue" : "0"
                      },
                      "comments" : { },
                      "userDefinedFields" : {
                        "characterUDFs" : [ {
                          "name" : "UDFC01",
                          "value" : "535298"
                        } ]
                      },
                      "blockIndicators" : [ {
                        "indicatorName" : "ALLOTMENT_DETAIL",
                        "count" : "26"
                      }, {
                        "indicatorName" : "EVENTS",
                        "count" : "1"
                      }, {
                        "indicatorName" : "RATES_PACKAGES_ITEMS",
                        "count" : "5"
                      }, {
                        "indicatorName" : "RATES",
                        "count" : "5"
                      }, {
                        "indicatorName" : "OWNERS",
                        "count" : "6"
                      }, {
                        "indicatorName" : "ASSOCIATED_PROFILES",
                        "count" : "5"
                      } ],
                      "markAsRecentlyAccessed" : false
                    }
                  } ]
                }
              }
            },
            "headers" : {
              "Content-Language" : {
                "type" : "string",
                "description" : "Audience language",
                "pattern" : "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example" : "en-GB"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/block"
            }
          },
          "204" : {
            "description" : "Block not found."
          }
        }
      }
    }
  },
  "definitions" : {
    "block" : {
      "type" : "object",
      "properties" : {
        "blocks" : {
          "description" : "Contains the detailed information regarding the block.",
          "$ref" : "#/definitions/blocksType"
        },
        "links" : {
          "$ref" : "#/definitions/links"
        },
        "warnings" : {
          "$ref" : "#/definitions/warningsType"
        }
      },
      "description" : "Request object for creation of blocks. This object contains block details with unique identifiers for each block. The standard optional Opera Context element is also included."
    },
    "blocksType" : {
      "type" : "object",
      "properties" : {
        "blockInfo" : {
          "type" : "array",
          "description" : "A collection of Blocks or Unique IDs of Blocks.",
          "items" : {
            "type" : "object",
            "properties" : {
              "block" : {
                "description" : "Provides detailed information regarding a block.",
                "$ref" : "#/definitions/blockType"
              }
            }
          },
          "maxItems" : 4000
        },
        "count" : {
          "type" : "integer",
          "description" : "Total number of rows returned"
        }
      },
      "description" : "A collection of Block objects or Unique IDs of Blocks."
    },
    "blockType" : {
      "type" : "object",
      "properties" : {
        "blockIdList" : {
          "description" : "Collection of unique block identifiers.",
          "$ref" : "#/definitions/blockIdList"
        },
        "externalReferences" : {
          "description" : "External Reference information for Reservation.",
          "$ref" : "#/definitions/externalReferencesType"
        },
        "blockDetails" : {
          "description" : "Detailed Block information for this block.",
          "$ref" : "#/definitions/blockDetailsType"
        },
        "blockOwners" : {
          "description" : "Criteria to assign the owners of a business block.",
          "$ref" : "#/definitions/blockOwnersType"
        },
        "masterBlockInfo" : {
          "description" : "Basic information of master and sub blocks structure in tree manner, this element only used while retrieving Block Type.",
          "$ref" : "#/definitions/masterBlockInfoType"
        },
        "reservationPolicies" : {
          "type" : "array",
          "description" : "A list of reservation policies.",
          "items" : {
            "$ref" : "#/definitions/reservationPoliciesType"
          },
          "maxItems" : 4000
        },
        "reservationDetails" : {
          "description" : "Details of room Information for the Block.",
          "$ref" : "#/definitions/blockReservationDetailsType"
        },
        "catering" : {
          "description" : "Details of catering Information for the Block.",
          "$ref" : "#/definitions/cateringType"
        },
        "blockProfiles" : {
          "type" : "object",
          "description" : "A collection of all the profiles associated to this block. Please note that during a change operation this performs a full overlay if the attribute FullOverlay is set to true. In a full overlay, all the profiles that should be associated to the block should be provided during a change operation. Any profiles not provided will be detached from this block. By default the full overlay is considered false if this tag is left blank. If values are provided for profiles, only the full overlay functionality is provided at this time.",
          "properties" : {
            "blockProfile" : {
              "type" : "array",
              "description" : "The list of profiles associated with the block.",
              "items" : {
                "$ref" : "#/definitions/blockProfilesType"
              },
              "maxItems" : 4000
            },
            "fullOverlay" : {
              "type" : "boolean",
              "description" : "Indicates whether to perform a full overlay for the profiles. Currently only the Fulloverlay functionality is provided."
            }
          }
        },
        "blockPackages" : {
          "type" : "array",
          "description" : "A Block Package represents a non-room product provided to guests. Block Pacakges may have associated inventory and charges.",
          "items" : {
            "$ref" : "#/definitions/blockPackageType"
          },
          "maxItems" : 4000
        },
        "inventoryItems" : {
          "description" : "A collection of inventory items attached to a block.",
          "$ref" : "#/definitions/blockInventoryItemsType"
        },
        "blockStatistics" : {
          "description" : "Indicates the room and revenue statistics of the block.",
          "$ref" : "#/definitions/blockStatisticsType"
        },
        "comments" : {
          "type" : "object",
          "description" : "List of notes for the Block.",
          "properties" : {
            "commentInfo" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/commentInfoType"
              },
              "maxItems" : 4000
            },
            "count" : {
              "type" : "integer",
              "description" : "Total number of rows returned"
            }
          }
        },
        "roomAllocations" : {
          "type" : "object",
          "description" : "Room Allocations for the Block.",
          "properties" : {
            "roomAllocationType" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/roomAllocationTypeType"
              },
              "maxItems" : 4000
            },
            "masterInfo" : {
              "description" : "Room Allocations Master Information contains all the room types in the property.",
              "$ref" : "#/definitions/roomAllocationMasterInfoType"
            },
            "count" : {
              "type" : "integer",
              "description" : "Total number of rows returned"
            },
            "startDate" : {
              "type" : "string",
              "format" : "date"
            },
            "numberOfDays" : {
              "type" : "number"
            }
          }
        },
        "userDefinedFields" : {
          "description" : "Collections of user defined fields.",
          "$ref" : "#/definitions/userDefinedFieldsType"
        },
        "blockIndicators" : {
          "description" : "Indicators of additional information attached to the block",
          "$ref" : "#/definitions/indicatorsType"
        },
        "traces" : {
          "description" : "List of block traces.",
          "$ref" : "#/definitions/blockTracesType"
        },
        "statistics" : {
          "type" : "array",
          "description" : "Statistics summary information including Rooms Sold, Room Revenue, Food and Beverage Revenue, Average Room Rate,etc.",
          "items" : {
            "$ref" : "#/definitions/blockStatisticsSummaryType"
          },
          "maxItems" : 3
        },
        "blockSecurity" : {
          "type" : "object",
          "description" : "Block security information used for an external system. Only available if configured in OPERA Cloud.",
          "properties" : {
            "securedFromDIdisplayYn" : {
              "type" : "boolean",
              "description" : "Secured from DI Display."
            },
            "allDescriptionDDSecured" : {
              "type" : "boolean",
              "description" : "All Description DD Secured."
            },
            "ratesSecuredfromGNR" : {
              "type" : "boolean",
              "description" : "Rates Secured from GNR."
            },
            "ratesSecuredfromAllDisplays" : {
              "type" : "boolean",
              "description" : "Rates Secured from All Displays."
            },
            "housingInformationSecured" : {
              "type" : "boolean",
              "description" : "Housing Information Secured."
            }
          }
        },
        "ratePrograms" : {
          "type" : "array",
          "description" : "Rate Program contains rate information required for block creation, like room pool, rate amount, market code, etc. Only available if configured in OPERA Cloud.",
          "items" : {
            "$ref" : "#/definitions/rateProgramType"
          },
          "maxItems" : 4000
        },
        "externalAttributes" : {
          "type" : "object",
          "description" : "Block attributes used for external systems. Only available if configured in OPERA Cloud.",
          "properties" : {
            "housingProtected" : {
              "type" : "boolean",
              "description" : "Only available if configured in OPERA Cloud."
            },
            "eventType" : {
              "description" : "Contract type of a block, which is used for external system. Only available if configured in OPERA Cloud.",
              "$ref" : "#/definitions/eventTypeType"
            },
            "gIId" : {
              "type" : "string",
              "description" : "Group IATA number validated by an external system and block can't be saved unless confirmed that GIID is valid. Only available if configured in OPERA Cloud.",
              "maxLength" : 2000
            },
            "rollEndDate" : {
              "type" : "boolean",
              "description" : "When this flag is set it will be used to roll Block End Date and Block Rate Program End Date in the night audit process. Only available if configured in OPERA Cloud."
            }
          }
        },
        "genericRoomAllocations" : {
          "type" : "object",
          "description" : "Generic Room Type Allocations for the Block.",
          "properties" : {
            "roomAllocationType" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/roomAllocationTypeType"
              },
              "maxItems" : 4000
            },
            "masterInfo" : {
              "description" : "Generic Room Allocations Master Information contains all the room types in the property.",
              "$ref" : "#/definitions/roomAllocationMasterInfoType"
            },
            "count" : {
              "type" : "integer",
              "description" : "Total number of rows returned"
            },
            "startDate" : {
              "type" : "string",
              "format" : "date"
            },
            "numberOfDays" : {
              "type" : "number"
            }
          }
        },
        "alternateDates" : {
          "type" : "array",
          "description" : "Alternate Date information for the Block.",
          "items" : {
            "$ref" : "#/definitions/blockAlternateDateType"
          },
          "maxItems" : 4000
        },
        "sellMessages" : {
          "description" : "List of sell messages for the Block.",
          "$ref" : "#/definitions/sellMessageConfigsType"
        },
        "attachments" : {
          "description" : "List of attachments for the Block.",
          "$ref" : "#/definitions/attachmentsType"
        },
        "washSchedules" : {
          "description" : "List of wash schedules for the Block.",
          "$ref" : "#/definitions/blockWashSchedulesType"
        },
        "restrictions" : {
          "description" : "List of restrictions for the Block.",
          "$ref" : "#/definitions/blockRestrictionsType"
        },
        "accessExclusions" : {
          "description" : "List of access exclusions for the block.",
          "$ref" : "#/definitions/blockAccessExclusionsType"
        },
        "hotelId" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "markAsRecentlyAccessed" : {
          "type" : "boolean",
          "description" : "Mark this block as recently accessed."
        }
      }
    },
    "blockIdList" : {
      "type" : "array",
      "description" : "Unique Id that references an object uniquely in the system.",
      "items" : {
        "$ref" : "#/definitions/uniqueID_Type"
      },
      "maxItems" : 4000
    },
    "uniqueID_Type" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "type" : {
          "type" : "string",
          "description" : "A reference to the type of object defined by the UniqueID element.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "idContext" : {
          "type" : "string",
          "description" : "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "minLength" : 0,
          "maxLength" : 80
        },
        "warnings" : {
          "$ref" : "#/definitions/warningsType"
        }
      },
      "description" : "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote)."
    },
    "warningsType" : {
      "type" : "array",
      "description" : "Used in conjunction with the Success element to define a business error.",
      "items" : {
        "$ref" : "#/definitions/warningType"
      },
      "maxItems" : 4000
    },
    "warningType" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string",
          "description" : "Property Value"
        },
        "shortText" : {
          "type" : "string",
          "description" : "An abbreviated version of the error in textual format.",
          "maxLength" : 2000
        },
        "code" : {
          "type" : "string",
          "description" : "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "docURL" : {
          "type" : "string",
          "description" : "If present, this URL refers to an online description of the error that occurred.",
          "maxLength" : 2000
        },
        "status" : {
          "type" : "string",
          "description" : "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "maxLength" : 2000
        },
        "tag" : {
          "type" : "string",
          "description" : "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "maxLength" : 2000
        },
        "recordId" : {
          "type" : "string",
          "description" : "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "maxLength" : 2000
        },
        "type" : {
          "type" : "string",
          "description" : "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "minLength" : 0,
          "maxLength" : 20
        },
        "language" : {
          "type" : "string",
          "description" : "Language identification.",
          "pattern" : "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "rph" : {
          "type" : "string",
          "description" : "Reference Place Holder used as an index for this warning.",
          "minLength" : 1,
          "maxLength" : 8
        }
      },
      "description" : "Used when a message has been successfully processed to report any warnings or business errors that occurred."
    },
    "externalReferencesType" : {
      "type" : "array",
      "description" : "This type contains unique information of external reference.",
      "items" : {
        "$ref" : "#/definitions/externalReferenceType"
      },
      "maxItems" : 4000
    },
    "externalReferenceType" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique ID of external reference.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "idExtension" : {
          "type" : "integer",
          "description" : "ID extension for external reference."
        },
        "idContext" : {
          "type" : "string",
          "description" : "ID context for external reference.",
          "minLength" : 0,
          "maxLength" : 80
        }
      },
      "description" : "This type contains unique information of external reference."
    },
    "blockDetailsType" : {
      "type" : "object",
      "properties" : {
        "blockCode" : {
          "type" : "string",
          "description" : "Block code for the block.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "blockName" : {
          "type" : "string",
          "description" : "Name of the block.",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "blockAliases" : {
          "description" : "Alias name(s) that can be used to search for the block.",
          "$ref" : "#/definitions/blockAliasesType"
        },
        "timeSpan" : {
          "description" : "The Time Span(Arrival, Departure) which covers the Block Span.",
          "$ref" : "#/definitions/timeSpanType"
        },
        "originalTimeSpan" : {
          "description" : "The Original Time Span(Arrival, Departure) which covers the Block Span.",
          "$ref" : "#/definitions/timeSpanType"
        },
        "shoulderDates" : {
          "description" : "The Shoulder Dates (Arrival, Departure) which covers the Block Shoulder Span.",
          "$ref" : "#/definitions/timeSpanType"
        },
        "shoulderRatePlanCode" : {
          "type" : "object",
          "description" : "The shoulder rate plans which cover the block shoulder start and end dates.",
          "properties" : {
            "shoulderStart" : {
              "type" : "array",
              "description" : "The Rate Plan(s) for the days between the shoulder start date and the actual block start date.",
              "items" : {
                "$ref" : "#/definitions/blockRatePlanInfoType"
              },
              "maxItems" : 4000
            },
            "shoulderEnd" : {
              "type" : "array",
              "description" : "The Rate Plan(s) for the days between the actual block end date and the shoulder end date.",
              "items" : {
                "$ref" : "#/definitions/blockRatePlanInfoType"
              },
              "maxItems" : 4000
            }
          }
        },
        "blockStatus" : {
          "description" : "Current status of the block.",
          "$ref" : "#/definitions/bookingStatusDetailType"
        },
        "blockNextStatusList" : {
          "description" : "List of possible next booking statuses of the business block.",
          "$ref" : "#/definitions/blockNextStatusListType"
        },
        "blockStatusChangeHistory" : {
          "description" : "List of booking status changes.",
          "$ref" : "#/definitions/blockStatusChangeHistoryType"
        },
        "reservationType" : {
          "description" : "Reservation Type info of the block.",
          "$ref" : "#/definitions/reservationTypeInfoType"
        },
        "marketCode" : {
          "description" : "Market code info of the block.",
          "$ref" : "#/definitions/marketCodeInfoType"
        },
        "sourceOfSale" : {
          "description" : "Point of Sale of block. Identifies the entity/channel who made the block reservation.",
          "$ref" : "#/definitions/blockSourceOfSaleType"
        },
        "reservationMethod" : {
          "description" : "Reservation Method of the block. Indicates how the individual reservations will be handled (Individual Call In, Rooming List, etc).",
          "$ref" : "#/definitions/codeDescriptionType"
        },
        "bookingType" : {
          "description" : "Business Block Type field on the Business Block",
          "$ref" : "#/definitions/codeDescriptionType"
        },
        "status" : {
          "type" : "string",
          "description" : "Internal status for the block.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "blockType" : {
          "type" : "string",
          "description" : "Internal type of the block.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "paymentMethod" : {
          "description" : "Indicate which method of payment will be used for the block’s charges.",
          "$ref" : "#/definitions/codeDescriptionType"
        },
        "commissionPercent" : {
          "type" : "number",
          "description" : "Indicate what percentage of this block is eligible for commission.",
          "minimum" : 0,
          "maximum" : 100
        },
        "conversionCode" : {
          "type" : "string",
          "description" : "Indicates the likelihood description of the block moving to the next active block status.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "conversionCodeDescription" : {
          "type" : "string",
          "description" : "Indicates the likelihood of the block moving to the next active block status.",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "rateProtectionDetails" : {
          "description" : "Indicates the Rate Protection details for the block.",
          "$ref" : "#/definitions/blockRateProtectionType"
        },
        "nonCompeteDetails" : {
          "description" : "Indicates the non-competing industry details.",
          "$ref" : "#/definitions/blockNonCompeteType"
        },
        "rankingCode" : {
          "type" : "string",
          "description" : "Indicates the ranking of the block.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "rankingCodeDescription" : {
          "type" : "string",
          "description" : "Indicates the ranking description of the block.",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "Currency Code attached to the business block.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "cancellationDetails" : {
          "description" : "Information on the canceled block.",
          "$ref" : "#/definitions/cancellationDetailsType"
        },
        "tourCode" : {
          "type" : "string",
          "description" : "The tour code that this block belongs to, if the block is a part of a tour series.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "rateOverrideReason" : {
          "description" : "Indicates the reason for overriding the rate amounts on a block.",
          "$ref" : "#/definitions/codeDescriptionType"
        },
        "blockClassification" : {
          "description" : "Indicate Block Classification.",
          "$ref" : "#/definitions/blockClassificationType"
        },
        "synchronized" : {
          "type" : "boolean",
          "description" : "Indicate if Master/Sub Blocks are Synchronized."
        },
        "primaryOwners" : {
          "type" : "object",
          "description" : "Primary owners for the block.",
          "properties" : {
            "blockOwner" : {
              "description" : "Primary Block Owner",
              "$ref" : "#/definitions/blockOwnerType"
            },
            "roomsOwner" : {
              "description" : "Primary Rooms Owner",
              "$ref" : "#/definitions/blockOwnerType"
            },
            "cateringOwner" : {
              "description" : "Primary Catering Owner",
              "$ref" : "#/definitions/blockOwnerType"
            },
            "blockOwnerCount" : {
              "type" : "number",
              "description" : "Total number of Block Owners."
            },
            "roomsOwnerCount" : {
              "type" : "number",
              "description" : "Total number of Rooms Owners."
            },
            "cateringOwnerCount" : {
              "type" : "number",
              "description" : "Total number of Catering Owners."
            }
          }
        },
        "primaryProfiles" : {
          "type" : "object",
          "description" : "Primary account and contact for the block.",
          "properties" : {
            "account" : {
              "description" : "Primary Account",
              "$ref" : "#/definitions/blockProfilesType"
            },
            "contact" : {
              "description" : "Primary Contact",
              "$ref" : "#/definitions/blockProfilesType"
            },
            "image" : {
              "description" : "The primary profile image. If primary contact exists, Contact Image, otherwise primary Account Image",
              "$ref" : "#/definitions/imageSetType"
            }
          }
        },
        "primaryRatePlanCodes" : {
          "type" : "object",
          "description" : "Primary rates for the block.",
          "properties" : {
            "blockRatePlanCode" : {
              "description" : "Primary Block Rate",
              "$ref" : "#/definitions/blockRatePlanInfoType"
            },
            "shoulderStartRatePlanCode" : {
              "description" : "Primary Shoulder Start Rate",
              "$ref" : "#/definitions/blockRatePlanInfoType"
            },
            "shoulderEndRatePlanCode" : {
              "description" : "Primary Shoulder End Rate",
              "$ref" : "#/definitions/blockRatePlanInfoType"
            },
            "blockRatePlanCodeCount" : {
              "type" : "number",
              "description" : "Total number of Block Rates."
            },
            "shoulderStartRatePlanCodeCount" : {
              "type" : "number",
              "description" : "Total number of Shoulder Start Rates."
            },
            "shoulderEndRatePlanCodeCount" : {
              "type" : "number",
              "description" : "Total number of Shoulder End Rates."
            }
          }
        },
        "cateringOnlyBlock" : {
          "type" : "boolean",
          "description" : "Indicates if this is a catering only block."
        },
        "flexibleDates" : {
          "type" : "boolean",
          "description" : "Indicates if alternate dates are allowed for the booking."
        },
        "externalLocked" : {
          "type" : "boolean",
          "description" : "Indicates if the block is locked by an external system."
        },
        "autoloadContractGrid" : {
          "type" : "boolean",
          "description" : "Indicates if contract grid will be auto loaded from original grid."
        },
        "allowRateOverride" : {
          "type" : "boolean",
          "description" : "Indicates whether rates of a block can be overridden. Applicable only for blocks with a Rate Code."
        },
        "manualCutOff" : {
          "type" : "boolean",
          "description" : "Indicates whether Block was cutoff manually."
        },
        "wholesaleBlock" : {
          "type" : "boolean",
          "description" : "Indicates whether the business block should be considered as a wholesale block for revenue management block materialization forecasting"
        },
        "controlBlockLocally" : {
          "type" : "boolean",
          "description" : "Determines whether or not the block can be managed at the CRS level."
        },
        "businessDateArrivalsExist" : {
          "type" : "boolean",
          "description" : "Indicate whether arrivals exists on current business date."
        }
      },
      "description" : "Information about the Block Details"
    },
    "blockAliasesType" : {
      "type" : "array",
      "description" : "List of Block Aliases.",
      "items" : {
        "type" : "string",
        "minLength" : 0,
        "maxLength" : 40
      },
      "maxItems" : 4000
    },
    "timeSpanType" : {
      "type" : "object",
      "properties" : {
        "startDate" : {
          "type" : "string",
          "format" : "date"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date"
        },
        "duration" : {
          "type" : "string"
        }
      },
      "description" : "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date."
    },
    "blockRatePlanInfoType" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "Description of the Rate Code.",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "Currency Code of the rate code.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "ratePlanCode" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "primary" : {
          "type" : "boolean",
          "description" : "Is it a primary rate plan?"
        },
        "marketCode" : {
          "type" : "string",
          "description" : "Market Code associated with the RatePlanCode.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "sourceCode" : {
          "type" : "string",
          "description" : "Source Code associated with the RatePlanCode.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "negotiated" : {
          "type" : "boolean",
          "description" : "Indicates if the rate code is a negotiated rate code"
        }
      },
      "description" : "Rate Plan info type extension for block."
    },
    "bookingStatusDetailType" : {
      "type" : "object",
      "properties" : {
        "bookingStatus" : {
          "description" : "Booking Status of the business block.",
          "$ref" : "#/definitions/bookingStatusType"
        },
        "parentBookingStatus" : {
          "type" : "string",
          "description" : "Parent status of the booking status, if one exists.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "deductInventory" : {
          "type" : "boolean",
          "description" : "Indicates if blocked rooms are deducted from inventory."
        },
        "catDeductInventory" : {
          "type" : "boolean",
          "description" : "Indicates if catering event's spaces are deducted from inventory"
        },
        "allowPickup" : {
          "type" : "boolean",
          "description" : "Indicates if business blocks with this status will be allowed for pickup or not."
        },
        "returnToInventory" : {
          "type" : "boolean",
          "description" : "Indicates if blocked rooms will be returned to availability or not."
        },
        "defaultReservationType" : {
          "type" : "string",
          "description" : "Default reservation type for the booking status.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "cancellationType" : {
          "description" : "Cancellation reason type of the booking status. Populates only when the booking status is of return to inventory type.",
          "$ref" : "#/definitions/blockCancellationTypeType"
        }
      },
      "description" : "Booking Status details of the business block."
    },
    "bookingStatusType" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "Status code and description.",
          "$ref" : "#/definitions/codeDescriptionType"
        }
      },
      "description" : "Booking status code, description and configured color of the status. This will be used for block and event statuses."
    },
    "codeDescriptionType" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Code.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "description" : {
          "type" : "string",
          "description" : "description.",
          "minLength" : 0,
          "maxLength" : 2000
        }
      },
      "description" : "This contains a generic code and description information."
    },
    "blockCancellationTypeType" : {
      "type" : "string",
      "description" : "Simple type for cancellation reasons which helps to decide type of cancellation.",
      "enum" : [ "Lost", "Cancel", "Refused" ]
    },
    "blockNextStatusListType" : {
      "type" : "array",
      "description" : "Next booking status of the business block.",
      "items" : {
        "$ref" : "#/definitions/bookingStatusDetailType"
      },
      "maxItems" : 4000
    },
    "blockStatusChangeHistoryType" : {
      "type" : "array",
      "description" : "Collection of block status history.",
      "items" : {
        "$ref" : "#/definitions/bookingStatusHistoryType"
      },
      "maxItems" : 4000
    },
    "bookingStatusHistoryType" : {
      "type" : "object",
      "properties" : {
        "sequence" : {
          "type" : "integer",
          "description" : "Number indicating the sequence of status change."
        },
        "bookingStatus" : {
          "description" : "Booking status of the business block.",
          "$ref" : "#/definitions/codeDescriptionType"
        },
        "modifyDateTime" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date and time of the status change."
        },
        "modifierId" : {
          "type" : "string",
          "description" : "User who modified the status.",
          "minLength" : 0,
          "maxLength" : 200
        }
      }
    },
    "reservationTypeInfoType" : {
      "type" : "object",
      "properties" : {
        "reservationType" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "chainCode" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "description" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 2000
        }
      }
    },
    "marketCodeInfoType" : {
      "type" : "object",
      "properties" : {
        "marketCode" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "marketGroup" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "description" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 2000
        }
      }
    },
    "blockSourceOfSaleType" : {
      "type" : "object",
      "properties" : {
        "sourceCode" : {
          "description" : "Identifies how this block came into the property.",
          "$ref" : "#/definitions/sourceCodeInfoType"
        }
      },
      "description" : "Point of Sale of Block. Identifies the entity/channel who made the block reservation."
    },
    "sourceCodeInfoType" : {
      "type" : "object",
      "properties" : {
        "sourceCode" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "sourceGroup" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "description" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 2000
        }
      }
    },
    "blockRateProtectionType" : {
      "type" : "object",
      "properties" : {
        "criteria" : {
          "description" : "Indicates the type of rate protection. 'All' means all dates are rate protected. 'None' specifies no rate protection. 'Selected' specifies few dates are rate protected.",
          "$ref" : "#/definitions/rateProtectionType"
        },
        "protectedDates" : {
          "description" : "Specifies all the Rate protected dates in the selected range.",
          "$ref" : "#/definitions/datesType"
        }
      },
      "description" : "Block Rate Protection code information."
    },
    "rateProtectionType" : {
      "type" : "string",
      "description" : "Simple type for specifying the block protection type.",
      "enum" : [ "All", "Selected", "None" ]
    },
    "datesType" : {
      "type" : "array",
      "description" : "Specifies a single date.",
      "items" : {
        "type" : "string",
        "format" : "date"
      },
      "maxItems" : 4000
    },
    "blockNonCompeteType" : {
      "type" : "object",
      "properties" : {
        "industry" : {
          "type" : "string",
          "description" : "Specifies the Non-Compete Industry.>",
          "minLength" : 0,
          "maxLength" : 20
        },
        "industryDescription" : {
          "type" : "string",
          "description" : "Specifies the Non-Compete Industry description.>",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "criteria" : {
          "description" : "Indicates the type of Non-Compete. 'All' means all dates are Non-Compete. 'None' specifies Non-Compete is disabled. 'Selected' specifies few dates are Non-Compete.",
          "$ref" : "#/definitions/rateProtectionType"
        },
        "protectedDates" : {
          "description" : "Specifies all the Non-Compete dates in the selected date range.",
          "$ref" : "#/definitions/datesType"
        }
      },
      "description" : "Block Non Compete code information."
    },
    "cancellationDetailsType" : {
      "type" : "object",
      "properties" : {
        "cancellationNumber" : {
          "description" : "Cancellation number of the block.",
          "$ref" : "#/definitions/uniqueID_Type"
        },
        "cancellationCode" : {
          "description" : "Code and description for cancellation reason.",
          "$ref" : "#/definitions/codeDescriptionType"
        },
        "cancellationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which block was canceled."
        },
        "cancellationInfo" : {
          "type" : "string",
          "description" : "Cancellation information provided by the customer.",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "destination" : {
          "type" : "string",
          "description" : "Alternate destination where the business is being taken.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "lostToProperty" : {
          "type" : "string",
          "description" : "Holds the name of the property or competitor brand business was lost to.",
          "minLength" : 0,
          "maxLength" : 100
        }
      },
      "description" : "This type holds information regarding booking status change to Cancel/ Lost."
    },
    "blockClassificationType" : {
      "type" : "string",
      "description" : "Simple type for block instructions to be used in requests for fetching blocks. Valid status values are MASTER_BLOCK, MASTER_TOUR, FIT_MASTER, MASTER_ALLOCATION, MASTER_ITINERARY, LEAD_MASTER, REGULAR_BOOKING, SUB_BLOCK, SUB_TOUR, FIT_CONTRACT, SUB_ALLOCATION, SUB_ITINERARY, LEAD.",
      "enum" : [ "MasterBlock", "MasterTour", "MasterAllocation", "MasterItinerary", "LeadMaster", "RegularBooking", "SubBlock", "SubTour", "FitContract", "SubAllocation", "SubItinerary", "Lead", "FitMaster" ]
    },
    "blockOwnerType" : {
      "type" : "object",
      "properties" : {
        "userName" : {
          "type" : "string",
          "description" : "Unique application user name of the owner.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "ownerCode" : {
          "type" : "string",
          "description" : "Unique Code to identify the owner.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "profileId" : {
          "description" : "Unique owner profile information.",
          "$ref" : "#/definitions/profileId"
        },
        "name" : {
          "description" : "Provides name information of the owner.",
          "$ref" : "#/definitions/personNameType"
        },
        "email" : {
          "description" : "Email information of the owner.",
          "$ref" : "#/definitions/emailInfoType"
        },
        "phone" : {
          "description" : "Information on the telephone number of the owner.",
          "$ref" : "#/definitions/telephoneInfoType"
        },
        "primary" : {
          "type" : "boolean",
          "description" : "When true, this is a primary owner."
        },
        "ownership" : {
          "description" : "Specifies the business block ownership type.",
          "$ref" : "#/definitions/blockOwnershipType"
        }
      },
      "description" : "Generic type for information about an owner."
    },
    "profileId" : {
      "type" : "object",
      "properties" : {
        "url" : {
          "type" : "string",
          "description" : "URL that identifies the location associated with the record identified by the UniqueID.",
          "maxLength" : 2000
        },
        "type" : {
          "type" : "string",
          "description" : "A reference to the type of object defined by the UniqueID element.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "instance" : {
          "type" : "string",
          "description" : "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "idContext" : {
          "type" : "string",
          "description" : "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "minLength" : 0,
          "maxLength" : 80
        },
        "id" : {
          "type" : "string",
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "idExtension" : {
          "type" : "integer",
          "description" : "Additional identifying value assigned by the creating system."
        }
      },
      "description" : "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote)."
    },
    "personNameType" : {
      "type" : "object",
      "properties" : {
        "givenName" : {
          "type" : "string",
          "description" : "Given name, first name or names.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "surname" : {
          "type" : "string",
          "description" : "Family name, last name. May also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "nameType" : {
          "description" : "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref" : "#/definitions/personNameTypeType"
        },
        "language" : {
          "type" : "string",
          "description" : "Language identification.",
          "pattern" : "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "externalSystem" : {
          "type" : "string",
          "description" : "When name type is external, indicates the external system the name belongs to.",
          "minLength" : 0,
          "maxLength" : 40
        }
      },
      "description" : "This provides name information for a person."
    },
    "personNameTypeType" : {
      "type" : "string",
      "description" : "Person's name in an external system.",
      "enum" : [ "Primary", "Alternate", "Incognito", "External", "Phonetic" ]
    },
    "emailInfoType" : {
      "type" : "object",
      "properties" : {
        "email" : {
          "description" : "eMail deatils for the profile.",
          "$ref" : "#/definitions/emailType"
        }
      },
      "description" : "Information on an email for the customer."
    },
    "emailType" : {
      "type" : "object",
      "properties" : {
        "emailAddress" : {
          "type" : "string",
          "description" : "Defines the e-mail address.",
          "minLength" : 0,
          "maxLength" : 2000
        }
      },
      "description" : "Information on an email for the customer."
    },
    "telephoneInfoType" : {
      "type" : "object",
      "properties" : {
        "telephone" : {
          "description" : "Phone details for the profile.",
          "$ref" : "#/definitions/telephoneType"
        }
      },
      "description" : "Information on a telephone number for the customer."
    },
    "telephoneType" : {
      "type" : "object",
      "properties" : {
        "phoneNumber" : {
          "type" : "string",
          "description" : "Telephone number assigned to a single location.",
          "minLength" : 0,
          "maxLength" : 40
        }
      },
      "description" : "Information on a telephone number for the customer."
    },
    "blockOwnershipType" : {
      "type" : "string",
      "description" : "Specifies the type of the owner associated with the business block(Block/Rooms/Catering).",
      "enum" : [ "Block", "Rooms", "Catering" ]
    },
    "blockProfilesType" : {
      "type" : "object",
      "properties" : {
        "profileIdList" : {
          "description" : "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref" : "#/definitions/uniqueIDListType"
        },
        "profile" : {
          "description" : "Provides detailed information regarding either a company or a customer profile.",
          "$ref" : "#/definitions/profileType"
        },
        "primary" : {
          "type" : "boolean",
          "description" : "Is this profile attached to block is primary?"
        },
        "blockProfileType" : {
          "description" : "Determines the type of the block profile.",
          "$ref" : "#/definitions/blockProfileTypeType"
        },
        "defaultPrint" : {
          "type" : "boolean",
          "description" : "Indicates if profile is printable to customer reports by default."
        }
      },
      "description" : "A collection of Profile objects or Unique IDs of Profiles."
    },
    "uniqueIDListType" : {
      "type" : "array",
      "description" : "Unique Id that references an object uniquely in the system.",
      "items" : {
        "$ref" : "#/definitions/uniqueID_Type"
      },
      "maxItems" : 4000
    },
    "profileType" : {
      "type" : "object",
      "properties" : {
        "customer" : {
          "description" : "Detailed customer information for this profile.",
          "$ref" : "#/definitions/customerType"
        },
        "company" : {
          "description" : "Detailed company information for this profile.",
          "$ref" : "#/definitions/companyType"
        },
        "addresses" : {
          "type" : "object",
          "description" : "List of customer addresses.",
          "properties" : {
            "addressInfo" : {
              "type" : "array",
              "description" : "Collection of Detailed information on an address for the customer.",
              "items" : {
                "$ref" : "#/definitions/addressInfoType"
              },
              "maxItems" : 4000
            },
            "hasMore" : {
              "type" : "boolean",
              "description" : "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response."
            },
            "totalResults" : {
              "type" : "integer",
              "description" : "Total number of rows queried"
            },
            "count" : {
              "type" : "integer",
              "description" : "Total number of rows returned"
            }
          }
        },
        "telephones" : {
          "type" : "object",
          "description" : "List of Telephone Number Information",
          "properties" : {
            "telephoneInfo" : {
              "type" : "array",
              "description" : "Collection of Detailed information on telephone/fax for the customer.",
              "items" : {
                "$ref" : "#/definitions/telephoneInfoType"
              },
              "maxItems" : 4000
            },
            "hasMore" : {
              "type" : "boolean",
              "description" : "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response."
            },
            "totalResults" : {
              "type" : "integer",
              "description" : "Total number of rows queried"
            },
            "count" : {
              "type" : "integer",
              "description" : "Total number of rows returned"
            }
          }
        },
        "emails" : {
          "type" : "object",
          "description" : "List of email address for the customer.",
          "properties" : {
            "emailInfo" : {
              "type" : "array",
              "description" : "Collection of Detailed information on an eMail address for the customer.",
              "items" : {
                "$ref" : "#/definitions/emailInfoType"
              },
              "maxItems" : 4000
            },
            "hasMore" : {
              "type" : "boolean",
              "description" : "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response."
            },
            "totalResults" : {
              "type" : "integer",
              "description" : "Total number of rows queried"
            },
            "count" : {
              "type" : "integer",
              "description" : "Total number of rows returned"
            }
          }
        },
        "uRLs" : {
          "type" : "object",
          "description" : "List of Information on a URL for the customer.",
          "properties" : {
            "uRLInfo" : {
              "type" : "array",
              "description" : "Collection of Detailed information on web url/address for the customer.",
              "items" : {
                "$ref" : "#/definitions/uRLInfoType"
              },
              "maxItems" : 4000
            },
            "hasMore" : {
              "type" : "boolean",
              "description" : "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response."
            },
            "totalResults" : {
              "type" : "integer",
              "description" : "Total number of rows queried"
            },
            "count" : {
              "type" : "integer",
              "description" : "Total number of rows returned"
            }
          }
        },
        "profileDeliveryMethods" : {
          "type" : "object",
          "description" : "List of Delivery methods configured against a Property for this Profile.",
          "properties" : {
            "profileDeliveryMethod" : {
              "type" : "array",
              "description" : "Collection of delivery methods for this Profile.",
              "items" : {
                "$ref" : "#/definitions/profileDeliveryMethod"
              },
              "maxItems" : 4000
            },
            "hasMore" : {
              "type" : "boolean",
              "description" : "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response."
            },
            "totalResults" : {
              "type" : "integer",
              "description" : "Total number of rows queried"
            },
            "count" : {
              "type" : "integer",
              "description" : "Total number of rows returned"
            }
          }
        },
        "relationships" : {
          "type" : "object",
          "description" : "Contains a collection of profiles that have a relationship with this profile.",
          "properties" : {
            "relationship" : {
              "type" : "array",
              "description" : "A collection of the profiles that have a relationship with this profile.",
              "items" : {
                "$ref" : "#/definitions/relationshipInfoType"
              },
              "maxItems" : 4000
            },
            "hasMore" : {
              "type" : "boolean",
              "description" : "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response."
            },
            "totalResults" : {
              "type" : "integer",
              "description" : "Total number of rows queried"
            },
            "count" : {
              "type" : "integer",
              "description" : "Total number of rows returned"
            }
          }
        },
        "relationshipsSummary" : {
          "type" : "object",
          "description" : "Contains a collection of profiles that have a relationship with this profile.",
          "properties" : {
            "relationship" : {
              "type" : "array",
              "description" : "A collection of the profiles summary that have a relationship with this profile.",
              "items" : {
                "$ref" : "#/definitions/relationshipInfoSummaryType"
              },
              "maxItems" : 4000
            },
            "hasMore" : {
              "type" : "boolean",
              "description" : "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response."
            },
            "totalResults" : {
              "type" : "integer",
              "description" : "Total number of rows queried"
            },
            "count" : {
              "type" : "integer",
              "description" : "Total number of rows returned"
            }
          }
        },
        "stayReservationInfoList" : {
          "description" : "Collection of Detailed information on history and future reservations associated with the profile.",
          "$ref" : "#/definitions/reservationStayHistoryFutureInfoType"
        },
        "profileType" : {
          "description" : "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref" : "#/definitions/profileTypeType"
        }
      },
      "description" : "Type provides the detailed information about the profile and its children."
    },
    "customerType" : {
      "type" : "object",
      "properties" : {
        "personName" : {
          "type" : "array",
          "description" : "Detailed name information for the customer.",
          "items" : {
            "$ref" : "#/definitions/personNameType"
          },
          "maxItems" : 5
        },
        "anonymization" : {
          "description" : "Provides information about the guest's anonymization status",
          "$ref" : "#/definitions/anonymizationType"
        },
        "businessTitle" : {
          "type" : "string",
          "description" : "Business Title.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "language" : {
          "type" : "string",
          "description" : "Language identification.",
          "pattern" : "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "privateProfile" : {
          "type" : "boolean",
          "description" : "This element tells profile is property exclusive or not."
        },
        "blacklist" : {
          "type" : "boolean",
          "description" : "This element tells if profile is blacklisted or not."
        }
      },
      "description" : "Contains basic data on the customer's identity, location, relationships, finances, memberships, etc."
    },
    "anonymizationType" : {
      "type" : "object",
      "properties" : {
        "anonymizationStatus" : {
          "description" : "Status of anonymization such as Requested or Anonymized.",
          "$ref" : "#/definitions/anonymizationStatusType"
        },
        "anonymizationDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and Time when the guest was anonymized."
        }
      },
      "description" : "Provides information about guest's anonymization status."
    },
    "anonymizationStatusType" : {
      "type" : "string",
      "description" : "Guest has been anonymized.",
      "enum" : [ "Requested", "Anonymized" ]
    },
    "companyType" : {
      "type" : "object",
      "properties" : {
        "companyName" : {
          "type" : "string",
          "description" : "Name of the company.",
          "minLength" : 0,
          "maxLength" : 40
        }
      }
    },
    "addressInfoType" : {
      "type" : "object",
      "properties" : {
        "address" : {
          "description" : "Address details for the profile.",
          "$ref" : "#/definitions/addressType"
        },
        "id" : {
          "type" : "string",
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "type" : {
          "type" : "string",
          "description" : "A reference to the type of object defined by the UniqueID element.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "idContext" : {
          "type" : "string",
          "description" : "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "minLength" : 0,
          "maxLength" : 80
        },
        "warnings" : {
          "$ref" : "#/definitions/warningsType"
        }
      },
      "description" : "Provides address information."
    },
    "addressType" : {
      "type" : "object",
      "properties" : {
        "isValidated" : {
          "type" : "boolean",
          "description" : "Indicator to define if the Address is validated by the Address Validation System."
        },
        "addressLine" : {
          "type" : "array",
          "description" : "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "items" : {
            "type" : "string",
            "minLength" : 0,
            "maxLength" : 80
          },
          "maxItems" : 4
        },
        "cityName" : {
          "type" : "string",
          "description" : "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "minLength" : 0,
          "maxLength" : 40
        },
        "postalCode" : {
          "type" : "string",
          "description" : "Post Office Code number.",
          "minLength" : 0,
          "maxLength" : 15
        },
        "county" : {
          "type" : "string",
          "description" : "County or District Name (e.g., Fairfax). This is read only.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "state" : {
          "type" : "string",
          "description" : "State or Province name (e.g., Texas).",
          "minLength" : 0,
          "maxLength" : 20
        },
        "country" : {
          "description" : "Country name (e.g., Ireland).",
          "$ref" : "#/definitions/countryNameType"
        },
        "type" : {
          "type" : "string",
          "description" : "Defines the type of address (e.g. home, business, other).",
          "minLength" : 0,
          "maxLength" : 20
        }
      },
      "description" : "Provides address information."
    },
    "countryNameType" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string",
          "description" : "Used for Character Strings, length 0 to 200.",
          "minLength" : 0,
          "maxLength" : 200
        },
        "code" : {
          "type" : "string",
          "description" : "Code for a country or a nationality.",
          "minLength" : 0,
          "maxLength" : 20
        }
      },
      "description" : "Code for a country or a nationality."
    },
    "uRLInfoType" : {
      "type" : "object",
      "properties" : {
        "url" : {
          "description" : "Provides URL information.",
          "$ref" : "#/definitions/uRLType"
        }
      },
      "description" : "Web site address."
    },
    "uRLType" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string",
          "description" : "Property Value"
        }
      },
      "description" : "Web site address, in IETF(The Internet Engineering Task Force) specified format."
    },
    "profileDeliveryMethod" : {
      "type" : "object",
      "properties" : {
        "deliveryId" : {
          "description" : "Delivery ID. It will be empty in case of new delivery method.",
          "$ref" : "#/definitions/uniqueID_Type"
        },
        "deliveryType" : {
          "type" : "string",
          "description" : "Delivery type can have a value EMAIL, ELECTRONIC etc and it depends on the parameter set in OPERA Control.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "deliveryValue" : {
          "type" : "string",
          "description" : "Delivery value holds the corresponding value of the delivery type..",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "hotelId" : {
          "type" : "string",
          "description" : "Property that has delivery methods configured.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "deliveryModule" : {
          "description" : "Module where this delivery type will be used. Example : EFolio Export, EInvoice , Fiscal, etc..",
          "$ref" : "#/definitions/profileDeliveryModuleType"
        },
        "orderSequence" : {
          "type" : "number",
          "description" : "Display Order sequence."
        }
      },
      "description" : "Delivery Information type to the profile."
    },
    "profileDeliveryModuleType" : {
      "type" : "string",
      "description" : "Module where this delivery type will be used. Example : EFolio Export, EInvoice , Fiscal, etc..",
      "enum" : [ "EfolioExport" ]
    },
    "relationshipInfoType" : {
      "type" : "object",
      "properties" : {
        "relationshipProfile" : {
          "description" : "Refer to Relationship Profile type document.",
          "$ref" : "#/definitions/relationshipProfileType"
        },
        "relation" : {
          "type" : "string",
          "description" : "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "minLength" : 0,
          "maxLength" : 20
        },
        "targetRelation" : {
          "type" : "string",
          "description" : "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "minLength" : 0,
          "maxLength" : 20
        }
      },
      "description" : "Relationship Type contains information about the associations between and among individuals, companies, travel agents, groups, sources, and contact profiles."
    },
    "relationshipProfileType" : {
      "type" : "object",
      "properties" : {
        "company" : {
          "description" : "Detailed information of the Company.",
          "$ref" : "#/definitions/companyType"
        },
        "profileIdList" : {
          "description" : "Original profile details for which the relationships was created",
          "$ref" : "#/definitions/uniqueIDListType"
        },
        "profileType" : {
          "description" : "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref" : "#/definitions/profileTypeType"
        }
      }
    },
    "profileTypeType" : {
      "type" : "string",
      "description" : "The types of Profile handled by the web service.",
      "enum" : [ "Guest", "Agent", "Company", "Group", "Source", "Employee", "Hotel", "Vendor", "Contact", "Purge", "BusinessHeader", "BillingAccount", "Activity", "Potential", "Account" ]
    },
    "relationshipInfoSummaryType" : {
      "type" : "object",
      "properties" : {
        "relationshipProfile" : {
          "description" : "Refer to Relationship Profile Summary type document.",
          "$ref" : "#/definitions/relationshipProfileSummaryType"
        },
        "masterAccountDetails" : {
          "description" : "Refer to Master Profile type document.",
          "$ref" : "#/definitions/masterAccountInfoType"
        },
        "relationshipID" : {
          "type" : "string",
          "description" : "Relationship identifier.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "sourceRelation" : {
          "type" : "string",
          "description" : "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "minLength" : 0,
          "maxLength" : 20
        },
        "sourceRelationDescription" : {
          "type" : "string",
          "description" : "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "minLength" : 0,
          "maxLength" : 200
        },
        "targetRelation" : {
          "type" : "string",
          "description" : "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "minLength" : 0,
          "maxLength" : 20
        },
        "targetRelationDescription" : {
          "type" : "string",
          "description" : "Displays the description of the target relation(Target Profile).",
          "minLength" : 0,
          "maxLength" : 200
        }
      },
      "description" : "RelationshipInfoSummaryType contains information about the associations between and among individuals, companies, travel agents, groups, sources, and contact profiles."
    },
    "relationshipProfileSummaryType" : {
      "type" : "object",
      "properties" : {
        "customerName" : {
          "type" : "string",
          "description" : "Name of the customer",
          "minLength" : 0,
          "maxLength" : 40
        },
        "companyName" : {
          "type" : "string",
          "description" : "Name of the company.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "telephoneNumber" : {
          "type" : "string",
          "description" : "Telephone number assigned to a single location",
          "minLength" : 0,
          "maxLength" : 40
        },
        "address" : {
          "description" : "Information on address details for the customer/company",
          "$ref" : "#/definitions/relationshipAddressType"
        },
        "emailAddress" : {
          "type" : "string",
          "description" : "Defines the e-mail address.",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "ownerCode" : {
          "type" : "string",
          "description" : "Unique Code to identify the owner.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "profileIdList" : {
          "description" : "Original profile details for which the relationships was created",
          "$ref" : "#/definitions/uniqueIDListType"
        },
        "primary" : {
          "type" : "boolean",
          "description" : "Indicates if this relationship is the primary relationship."
        },
        "profileStatus" : {
          "description" : "Status of the profile. Active/Inactive",
          "$ref" : "#/definitions/profileStatusType"
        },
        "primaryOwnerCode" : {
          "type" : "boolean",
          "description" : "When true, this is a primary owner."
        },
        "profileType" : {
          "description" : "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref" : "#/definitions/profileTypeType"
        }
      }
    },
    "relationshipAddressType" : {
      "type" : "object",
      "properties" : {
        "addressLine" : {
          "type" : "array",
          "description" : "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "items" : {
            "type" : "string",
            "minLength" : 0,
            "maxLength" : 80
          },
          "maxItems" : 4
        },
        "city" : {
          "type" : "string",
          "description" : "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "minLength" : 0,
          "maxLength" : 40
        },
        "postalCode" : {
          "type" : "string",
          "description" : "Post Office Code number.",
          "minLength" : 0,
          "maxLength" : 15
        },
        "state" : {
          "type" : "string",
          "description" : "State or Province name (e.g., Texas).",
          "minLength" : 0,
          "maxLength" : 20
        },
        "country" : {
          "type" : "string",
          "description" : "Country name (e.g., Ireland).",
          "minLength" : 0,
          "maxLength" : 200
        }
      },
      "description" : "Provides address information for a Relationship."
    },
    "profileStatusType" : {
      "type" : "string",
      "enum" : [ "Active", "Inactive" ]
    },
    "masterAccountInfoType" : {
      "type" : "object",
      "properties" : {
        "masterAccountId" : {
          "description" : "Unique ID of the Master account.",
          "$ref" : "#/definitions/uniqueID_Type"
        },
        "masterAccountName" : {
          "type" : "string",
          "description" : "Name of the Master account.",
          "minLength" : 0,
          "maxLength" : 40
        }
      }
    },
    "reservationStayHistoryFutureInfoType" : {
      "type" : "object",
      "properties" : {
        "historyList" : {
          "description" : "Refer to History list type document.",
          "$ref" : "#/definitions/stayHistoryListType"
        },
        "futureList" : {
          "description" : "Refer to Future list type document.",
          "$ref" : "#/definitions/stayFutureListType"
        }
      },
      "description" : "Information of History and Future Reservation details attached to Profiles."
    },
    "stayHistoryListType" : {
      "type" : "object",
      "properties" : {
        "reservationInfo" : {
          "type" : "array",
          "description" : "Additional reservation information attached to the profile . Eg : History reservation details",
          "items" : {
            "$ref" : "#/definitions/stayReservationInfoType"
          },
          "maxItems" : 4000
        },
        "hasMore" : {
          "type" : "boolean",
          "description" : "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response."
        },
        "totalResults" : {
          "type" : "integer",
          "description" : "Total number of rows queried"
        },
        "count" : {
          "type" : "integer",
          "description" : "Total number of rows returned"
        }
      },
      "description" : "A collection of reservation history details attached to Profiles."
    },
    "stayReservationInfoType" : {
      "type" : "object",
      "properties" : {
        "reservationIdList" : {
          "description" : "Unique identifiers for the reservation for both internal and external systems",
          "$ref" : "#/definitions/reservationIdList"
        },
        "roomStay" : {
          "description" : "Collection of room stays.",
          "$ref" : "#/definitions/stayInfoType"
        },
        "attachedProfiles" : {
          "description" : "List of attached profiles",
          "$ref" : "#/definitions/resAttachedProfileListType"
        },
        "hotelId" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "reservationStatus" : {
          "description" : "Indicates the status of the reservation.",
          "$ref" : "#/definitions/pMS_ResStatusType"
        },
        "computedReservationStatus" : {
          "description" : "Indicates the status of the reservation.",
          "$ref" : "#/definitions/pMS_ResStatusType"
        }
      },
      "description" : "The Reservation class contains the current reservation being created or altered."
    },
    "reservationIdList" : {
      "type" : "array",
      "description" : "Unique Id that references an object uniquely in the system.",
      "items" : {
        "$ref" : "#/definitions/uniqueID_Type"
      },
      "maxItems" : 4000
    },
    "stayInfoType" : {
      "type" : "object",
      "properties" : {
        "arrivalDate" : {
          "type" : "string",
          "format" : "date"
        },
        "departureDate" : {
          "type" : "string",
          "format" : "date"
        },
        "originalTimeSpan" : {
          "description" : "The Original Time Span covers the Room Stay dates of the original reservation.",
          "$ref" : "#/definitions/timeSpanType"
        },
        "expectedTimes" : {
          "description" : "The expected arrival, return and departure times of the guest.",
          "$ref" : "#/definitions/resExpectedTimesType"
        },
        "adultCount" : {
          "type" : "integer",
          "description" : "A collection of Guest Counts associated with Room Stay."
        },
        "childCount" : {
          "type" : "integer",
          "description" : "A collection of Child Counts associated with Room Stay."
        },
        "roomClass" : {
          "type" : "string",
          "description" : "Room class code",
          "minLength" : 0,
          "maxLength" : 20
        },
        "roomType" : {
          "type" : "string",
          "description" : "Room type code",
          "minLength" : 0,
          "maxLength" : 20
        },
        "componentRoomType" : {
          "type" : "boolean",
          "description" : "True indicates room type is a component type."
        },
        "numberOfRooms" : {
          "type" : "integer",
          "description" : "Room Id"
        },
        "roomId" : {
          "type" : "string",
          "description" : "Room Id",
          "minLength" : 0,
          "maxLength" : 20
        },
        "ratePlanCode" : {
          "type" : "string",
          "description" : "Rate plan code",
          "minLength" : 0,
          "maxLength" : 20
        },
        "rateAmount" : {
          "description" : "Rate amount",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "points" : {
          "description" : "The Points contains the number of points used to book a particular room type.",
          "$ref" : "#/definitions/pointsType"
        },
        "rateSuppressed" : {
          "type" : "boolean",
          "description" : "Whether this rate should be suppressed from view"
        },
        "reservationBlock" : {
          "description" : "Key information about the block for this reservation.",
          "$ref" : "#/definitions/reservationBlockType"
        },
        "bookingChannelCode" : {
          "type" : "string",
          "description" : "Booking channel code",
          "minLength" : 0,
          "maxLength" : 20
        },
        "linkCode" : {
          "type" : "string",
          "description" : "Party code",
          "maxLength" : 2000
        },
        "fixedRate" : {
          "type" : "boolean",
          "description" : "True if the rate is a fixed rate, otherwise false"
        },
        "totalAmount" : {
          "description" : "The total amount charged for the Room Stay including additional occupant amounts and fees. If TaxInclusive is set to True, then taxes are included in the total amount.",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "guarantee" : {
          "description" : "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref" : "#/definitions/resGuaranteeType"
        },
        "promotion" : {
          "description" : "Promotion Codes",
          "$ref" : "#/definitions/promotionType"
        },
        "marketCode" : {
          "type" : "string",
          "description" : "Market code",
          "minLength" : 0,
          "maxLength" : 20
        },
        "marketDescription" : {
          "type" : "string",
          "description" : "Description of Market code",
          "minLength" : 0,
          "maxLength" : 4000
        },
        "sourceCode" : {
          "type" : "string",
          "description" : "Source of business",
          "minLength" : 0,
          "maxLength" : 20
        },
        "sourceCodeDescription" : {
          "type" : "string",
          "description" : "Description of the source of business.",
          "minLength" : 0,
          "maxLength" : 4000
        },
        "balance" : {
          "description" : "Balance amount",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "compBalance" : {
          "description" : "Comp Balance amount",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "roomTypeCharged" : {
          "type" : "string",
          "description" : "Room type code that was charged",
          "minLength" : 0,
          "maxLength" : 20
        },
        "depositPayments" : {
          "description" : "A collection of deposit and/or payments for the Room Stay.",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "guestServiceStatus" : {
          "description" : "Service Status of In House guest like DND or MUP",
          "$ref" : "#/definitions/guestHousekeepingServiceRequestType"
        },
        "scheduledCheckoutTime" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates that this reservation is scheduled for automated check out."
        },
        "roomNumberLocked" : {
          "type" : "boolean",
          "description" : "When true, indicates a room number cannot be changed. When false, indicates a room number may be changed."
        },
        "pseudoRoom" : {
          "type" : "boolean",
          "description" : "True indicates as pseudo room type. This is usually used for a posting master reservation."
        },
        "assignedByAI" : {
          "type" : "boolean",
          "description" : "Represents the room was assigned by AI Room Assignment."
        },
        "upgradedByAI" : {
          "type" : "boolean",
          "description" : "Represents the room was assigned by AI Room Assignment."
        }
      },
      "description" : "Details on the Room Stay including Guest Counts, Time Span of this Room Stay, pointers to Res Guests, guest Memberships, Comments and Special Requests pertaining to this particular Room Stay and finally financial information related to the Room Stay, including Guarantee, Deposit and Payment and Cancellation Penalties."
    },
    "resExpectedTimesType" : {
      "type" : "object",
      "properties" : {
        "reservationExpectedArrivalTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Arrival Time"
        },
        "reservationExpectedDepartureTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Departure Time"
        }
      },
      "description" : "Holds the Arrival and Departure Time Information"
    },
    "currencyAmountType" : {
      "type" : "object",
      "properties" : {
        "amount" : {
          "type" : "number",
          "description" : "A monetary amount."
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "minLength" : 3,
          "maxLength" : 3
        }
      },
      "description" : "A monetary value expressed with a currency code."
    },
    "pointsType" : {
      "type" : "object",
      "properties" : {
        "awardsType" : {
          "type" : "string",
          "description" : "Awards type for the award type rate code.",
          "maxLength" : 2000
        },
        "points" : {
          "type" : "integer",
          "description" : "No of points required to book this Room Stay."
        }
      },
      "description" : "The Redeem Points contains the number of points required to book a room type."
    },
    "reservationBlockType" : {
      "type" : "object",
      "properties" : {
        "blockIdList" : {
          "description" : "Collection of unique block identifiers for the reservation.",
          "$ref" : "#/definitions/blockIdList"
        },
        "blockName" : {
          "type" : "string",
          "description" : "The Name of the block that is attached to the reservation.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "hotelId" : {
          "type" : "string",
          "description" : "This is the HotelCode of the Block.",
          "minLength" : 0,
          "maxLength" : 20
        }
      },
      "description" : "Key information about the block for a reservation."
    },
    "resGuaranteeType" : {
      "type" : "object",
      "properties" : {
        "guaranteeCode" : {
          "type" : "string",
          "description" : "Guarantee Code.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "shortDescription" : {
          "type" : "string",
          "description" : "Guarantee Code.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "onHold" : {
          "type" : "boolean",
          "description" : "Guarantee Code."
        }
      },
      "description" : "Validations type record returned after Validations are done."
    },
    "promotionType" : {
      "type" : "object",
      "properties" : {
        "promotionCode" : {
          "type" : "string",
          "description" : "Promotion code associated with the rate plan.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "promotionName" : {
          "type" : "string",
          "description" : "Promotion code Name associated with the rate plan.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "couponCode" : {
          "type" : "string",
          "description" : "Promotion Coupon Code when promotion is setup to have a valid coupon code.",
          "minLength" : 0,
          "maxLength" : 40
        }
      },
      "description" : "Type to specify a rate promotion. Usually attached to a reservation to indicate a specific promotion is applied to the reservation."
    },
    "guestHousekeepingServiceRequestType" : {
      "type" : "string",
      "description" : "Possible values for the Guest Service Status.",
      "enum" : [ "DoNotDisturb", "MakeUpRoom", "NoStatusSelected" ]
    },
    "resAttachedProfileListType" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/resAttachedProfileType"
      },
      "maxItems" : 4000
    },
    "resAttachedProfileType" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Attached profile name",
          "maxLength" : 2000
        },
        "profileIdList" : {
          "description" : "Collection of unique profile identifiers",
          "$ref" : "#/definitions/profileIdList"
        },
        "reservationProfileType" : {
          "$ref" : "#/definitions/resProfileTypeType"
        }
      }
    },
    "profileIdList" : {
      "type" : "array",
      "description" : "Unique Id that references an object uniquely in the system.",
      "items" : {
        "$ref" : "#/definitions/uniqueID_Type"
      },
      "maxItems" : 4000
    },
    "resProfileTypeType" : {
      "type" : "string",
      "enum" : [ "Guest", "Company", "Group", "TravelAgent", "Source", "ReservationContact", "BillingContact", "Addressee" ]
    },
    "pMS_ResStatusType" : {
      "type" : "string",
      "description" : "This reservation is in checked in status and the business date is past departure date. This could occur when ORS and PMS are in same environment.",
      "enum" : [ "Reserved", "Requested", "NoShow", "Cancelled", "InHouse", "CheckedOut", "Waitlisted", "DueIn", "DueOut", "Walkin", "PendingCheckout" ]
    },
    "stayFutureListType" : {
      "type" : "object",
      "properties" : {
        "reservationInfo" : {
          "type" : "array",
          "description" : "Additional reservation information attached to the profile . Eg : Future reservation details",
          "items" : {
            "$ref" : "#/definitions/stayReservationInfoType"
          },
          "maxItems" : 4000
        },
        "hasMore" : {
          "type" : "boolean",
          "description" : "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response."
        },
        "totalResults" : {
          "type" : "integer",
          "description" : "Total number of rows queried"
        },
        "count" : {
          "type" : "integer",
          "description" : "Total number of rows returned"
        }
      },
      "description" : "A collection of reservation history details attached to Profiles."
    },
    "blockProfileTypeType" : {
      "type" : "string",
      "description" : "Simple type for block profile types.",
      "enum" : [ "Company", "Group", "Agent", "Source", "CompanyContact", "AgentContact", "SourceContact" ]
    },
    "imageSetType" : {
      "type" : "object",
      "properties" : {
        "language" : {
          "type" : "string",
          "description" : "Language identification.",
          "pattern" : "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "imageSet" : {
          "type" : "string",
          "description" : "The image set name.",
          "minLength" : 0,
          "maxLength" : 800
        },
        "sequenceId" : {
          "type" : "integer",
          "description" : "The image set sequence ID."
        },
        "imageStyle" : {
          "description" : "The image set enumerated style.",
          "$ref" : "#/definitions/imageStyleType"
        },
        "imageType" : {
          "type" : "string",
          "description" : "The image set type.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "hotelId" : {
          "type" : "string",
          "description" : "The image set hotel code.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "chainCode" : {
          "type" : "string",
          "description" : "The image set chain code.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "imageURL" : {
          "type" : "string",
          "description" : "The image set URL.",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "description" : {
          "type" : "string",
          "description" : "The image set description.",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "imageOrder" : {
          "type" : "integer",
          "description" : "The image set order."
        },
        "website" : {
          "type" : "string",
          "description" : "The image set website.",
          "minLength" : 0,
          "maxLength" : 2000
        }
      },
      "description" : "Represents on image set record."
    },
    "imageStyleType" : {
      "type" : "string",
      "description" : "An enumeration of image styles.",
      "enum" : [ "Full", "Thumbnail", "Icon", "Square", "Banner", "Button", "Lowres", "Highres" ]
    },
    "blockOwnersType" : {
      "type" : "object",
      "properties" : {
        "owner" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/blockOwnerType"
          },
          "maxItems" : 4000
        },
        "lockBlockOwners" : {
          "type" : "boolean",
          "description" : "When this flag is true, the logged in user cannot modify the existing block owners for the current block."
        },
        "lockRoomsOwners" : {
          "type" : "boolean",
          "description" : "When this flag is true, the logged in user cannot modify the existing room owners for the current block."
        },
        "lockCateringOwners" : {
          "type" : "boolean",
          "description" : "When this flag is true, the logged in user cannot modify the existing catering owners for the current block."
        }
      },
      "description" : "Contains a list of block owners."
    },
    "masterBlockInfoType" : {
      "type" : "object",
      "properties" : {
        "blockIdList" : {
          "description" : "Collection of unique block identifiers.",
          "$ref" : "#/definitions/blockIdList"
        },
        "hotelId" : {
          "type" : "string",
          "description" : "Master/Sub Block's Hotel Code.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "blockType" : {
          "description" : "Indicate Block Classification.",
          "$ref" : "#/definitions/blockClassificationType"
        },
        "timeSpan" : {
          "description" : "The Time Span(Arrival, Departure) which covers the Block Span.",
          "$ref" : "#/definitions/timeSpanType"
        },
        "blockName" : {
          "type" : "string",
          "description" : "Block description.",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "blockStatus" : {
          "description" : "Current status of the block.",
          "$ref" : "#/definitions/bookingStatusType"
        },
        "cateringStatus" : {
          "description" : "Catering Status details of the block.",
          "$ref" : "#/definitions/bookingStatusType"
        },
        "roomNights" : {
          "type" : "integer",
          "description" : "Pertain value for blocked rooms for a block."
        },
        "roomNightsPickedup" : {
          "type" : "integer",
          "description" : "Pertain value for reserved rooms for a block."
        },
        "syncBlockDates" : {
          "type" : "boolean",
          "description" : "Indicates to check if Block Dates to be in sync."
        },
        "syncOtherBlockDetails" : {
          "type" : "boolean",
          "description" : "Indicates whether other BlockDetails to be in Sync."
        },
        "syncBlockStatusDetails" : {
          "type" : "boolean",
          "description" : "Indicates if Block Status Details to be in sync."
        },
        "syncPackages" : {
          "type" : "boolean",
          "description" : "Indicates if packages to be in Sync."
        },
        "subBlockInfo" : {
          "type" : "array",
          "description" : "Basic information pertaining to the sub block.",
          "items" : {
            "$ref" : "#/definitions/masterSubBlockBaseInfoType"
          },
          "maxItems" : 4000
        },
        "masterSubHotels" : {
          "type" : "array",
          "description" : "Pertains valid hotel code list for logged in user against Master/Sub header record.",
          "items" : {
            "$ref" : "#/definitions/hotelCodeListType"
          },
          "maxItems" : 4000
        }
      },
      "description" : "Basic information pertaining to the master block."
    },
    "masterSubBlockBaseInfoType" : {
      "type" : "object",
      "properties" : {
        "blockIdList" : {
          "description" : "Collection of unique block identifiers.",
          "$ref" : "#/definitions/blockIdList"
        },
        "hotelId" : {
          "type" : "string",
          "description" : "Master/Sub Block's Hotel Code.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "blockType" : {
          "description" : "Indicate Block Classification.",
          "$ref" : "#/definitions/blockClassificationType"
        },
        "timeSpan" : {
          "description" : "The Time Span(Arrival, Departure) which covers the Block Span.",
          "$ref" : "#/definitions/timeSpanType"
        },
        "blockName" : {
          "type" : "string",
          "description" : "Block description.",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "blockStatus" : {
          "description" : "Current status of the block.",
          "$ref" : "#/definitions/bookingStatusType"
        },
        "cateringStatus" : {
          "description" : "Catering Status details of the block.",
          "$ref" : "#/definitions/bookingStatusType"
        },
        "roomNights" : {
          "type" : "integer",
          "description" : "Pertain value for blocked rooms for a block."
        },
        "roomNightsPickedup" : {
          "type" : "integer",
          "description" : "Pertain value for reserved rooms for a block."
        },
        "syncBlockDates" : {
          "type" : "boolean",
          "description" : "Indicates to check if Block Dates to be in sync."
        },
        "syncOtherBlockDetails" : {
          "type" : "boolean",
          "description" : "Indicates whether other BlockDetails to be in Sync."
        },
        "syncBlockStatusDetails" : {
          "type" : "boolean",
          "description" : "Indicates if Block Status Details to be in sync."
        },
        "syncPackages" : {
          "type" : "boolean",
          "description" : "Indicates if packages to be in Sync."
        }
      }
    },
    "hotelCodeListType" : {
      "type" : "array",
      "description" : "Hotel code.",
      "items" : {
        "type" : "string",
        "minLength" : 0,
        "maxLength" : 20
      },
      "maxItems" : 4000
    },
    "reservationPoliciesType" : {
      "type" : "object",
      "properties" : {
        "cancellationPolicies" : {
          "description" : "A collection of reservation cancellation policies..",
          "$ref" : "#/definitions/resCancellationPoliciesType"
        },
        "depositPolicies" : {
          "description" : "A collection of reservation deposit policies.",
          "$ref" : "#/definitions/resDepositPoliciesType"
        },
        "reservationIdList" : {
          "description" : "A list of Ids for reservation.",
          "$ref" : "#/definitions/uniqueIDListType"
        },
        "name" : {
          "type" : "string",
          "description" : "Name identifier for the reservation.",
          "maxLength" : 2000
        }
      },
      "description" : "A collection of reservation deposit and cancellation policies."
    },
    "resCancellationPoliciesType" : {
      "type" : "array",
      "description" : "A list of reservation cancellation policies.",
      "items" : {
        "$ref" : "#/definitions/resCancellationPolicyType"
      },
      "maxItems" : 4000
    },
    "resCancellationPolicyType" : {
      "type" : "object",
      "properties" : {
        "revenueType" : {
          "description" : "Type of reservation.",
          "$ref" : "#/definitions/depositCancelRevenueType"
        },
        "policy" : {
          "description" : "Cancellation policy details.",
          "$ref" : "#/definitions/resCancelPenaltyType"
        },
        "percentageDue" : {
          "type" : "number",
          "description" : "The percentage amount due for reservation cancellation.",
          "minimum" : 0,
          "maximum" : 100
        },
        "comments" : {
          "type" : "string",
          "description" : "Comments attached with the reservation cancellation.",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "policyId" : {
          "description" : "Unique ID of the Reservation Policy.",
          "$ref" : "#/definitions/uniqueID_Type"
        }
      },
      "description" : "A cancellation policy attached with the reservation."
    },
    "depositCancelRevenueType" : {
      "type" : "string",
      "description" : "The type to indicate what revenue is to be used for calculating deposit/cancellation amounts.",
      "enum" : [ "Rooms", "Catering", "All" ]
    },
    "resCancelPenaltyType" : {
      "type" : "object",
      "properties" : {
        "deadline" : {
          "description" : "Cancellation deadline, absolute or relative.",
          "$ref" : "#/definitions/policyDeadlineType"
        },
        "amountPercent" : {
          "description" : "Cancellation fee expressed as a fixed amount, or percentage of/or room nights.",
          "$ref" : "#/definitions/policyAmountPercentType"
        },
        "policyCode" : {
          "type" : "string",
          "description" : "Policy Code.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "effective" : {
          "type" : "boolean",
          "description" : "Indicator if Cancellation Penalty is currently applicable or not."
        }
      },
      "description" : "The CancelPenalty class defines the cancellation policy of the hotel facility."
    },
    "policyDeadlineType" : {
      "type" : "object",
      "properties" : {
        "absoluteDeadline" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Defines the absolute deadline. Either this or the offset attributes may be used."
        }
      },
      "description" : "Cancellation deadline, absolute or relative."
    },
    "policyAmountPercentType" : {
      "type" : "object",
      "properties" : {
        "basisType" : {
          "description" : "Provides the basis for how the amount of the guarantee is calculated.",
          "$ref" : "#/definitions/policyBasisTypeType"
        },
        "nights" : {
          "type" : "integer",
          "description" : "The number of nights of the hotel stay that are used to calculate the fee amount."
        },
        "percent" : {
          "type" : "number",
          "description" : "The percentage used to calculate the amount.",
          "minimum" : 0,
          "maximum" : 100
        },
        "amount" : {
          "type" : "number",
          "description" : "A monetary amount."
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "minLength" : 3,
          "maxLength" : 3
        }
      },
      "description" : "Defines the percentage basis for calculating the fee amount or the amount."
    },
    "policyBasisTypeType" : {
      "type" : "string",
      "description" : "Full Amount.",
      "enum" : [ "FlatAmount", "Percentage", "Nights", "NightPercentage", "FullAmount" ]
    },
    "resDepositPoliciesType" : {
      "type" : "array",
      "description" : "A list of deposit policies attached with the reservation.",
      "items" : {
        "$ref" : "#/definitions/resDepositPolicyType"
      },
      "maxItems" : 4000
    },
    "resDepositPolicyType" : {
      "type" : "object",
      "properties" : {
        "revenueType" : {
          "description" : "Type of reservation.",
          "$ref" : "#/definitions/depositCancelRevenueType"
        },
        "policy" : {
          "$ref" : "#/definitions/depositPolicyType"
        },
        "comments" : {
          "type" : "string",
          "description" : "Comments attached with a deposit.",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "amountPaid" : {
          "description" : "Total amount paid against the reservation deposit.",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "amountDue" : {
          "description" : "Total amount due against the reservation deposit.",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "policyId" : {
          "description" : "Unique ID of the Reservation Policy.",
          "$ref" : "#/definitions/uniqueID_Type"
        }
      },
      "description" : "A deposit policy attached with the reservation."
    },
    "depositPolicyType" : {
      "type" : "object",
      "properties" : {
        "amountPercent" : {
          "description" : "Payment expressed as a fixed amount, or a percentage of/or room nights.",
          "$ref" : "#/definitions/policyAmountPercentType"
        },
        "deadline" : {
          "description" : "Payment deadline, absolute or relative.",
          "$ref" : "#/definitions/policyDeadlineType"
        },
        "description" : {
          "type" : "string",
          "description" : "Text description of the Payment in a given language.",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "policyCode" : {
          "type" : "string",
          "description" : "Deposit Policy Code",
          "minLength" : 0,
          "maxLength" : 20
        }
      },
      "description" : "Used to define the deposit policy, guarantees policy, and/or accepted forms of payment."
    },
    "blockReservationDetailsType" : {
      "type" : "object",
      "properties" : {
        "ratePlanCode" : {
          "type" : "array",
          "description" : "Rate Plan for the block.",
          "items" : {
            "$ref" : "#/definitions/blockRatePlanInfoType"
          },
          "maxItems" : 3
        },
        "arrivalTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Indicates the approximate check in time for the reservations made for the block."
        },
        "departureTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Indicates the approximate check out time for the reservations made for the block."
        },
        "traceCode" : {
          "description" : "Trace code for the block.",
          "$ref" : "#/definitions/codeDescriptionType"
        },
        "breakfast" : {
          "description" : "Indicates the breakfast information for the block room rates.",
          "$ref" : "#/definitions/breakfastType"
        },
        "porterage" : {
          "description" : "Indicates the Porterage information for the block room rates.",
          "$ref" : "#/definitions/porterageType"
        },
        "cutOffDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Cut off date of the block."
        },
        "cutOffDays" : {
          "type" : "number",
          "description" : "Cut off days of the block."
        },
        "updateGridOnCutoffChange" : {
          "type" : "boolean",
          "description" : "Determines whether the CutOffDate or CutOffDays has changed for the block header. If CutOffDate or CutOffDays is changed then apply the changed cutoff date/ days as the new cutoff date/ days to all the room types in the Grid."
        },
        "followupDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "This element informs about the systematic follow up on this business block. A Group Reservations Agent or Reservations Manager can use this date to identify when to followup with the customer."
        },
        "decisionDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains information about the date by which the group must make a decision on the block."
        },
        "roomingListDueDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Due date for the rooming list for the block. This is the date by which the guest list should be provided by the customer."
        },
        "elastic" : {
          "type" : "number",
          "description" : "Elasticity of the block."
        },
        "suppressRate" : {
          "type" : "boolean",
          "description" : "Are Rate amounts suppressed for the block."
        },
        "printRate" : {
          "type" : "boolean",
          "description" : "Determines if the rate amounts are to be printed on the reservations picked up from the block. This becomes the default Print Rate setting for all reservations picked up from the block."
        },
        "rateGuarantee" : {
          "type" : "boolean",
          "description" : "If this is true, then when a reservation is picked up for the block, the rate for that reservation is taken from the rate grid belonging to the block. If this is false, the rate amounts on the room grid are updated every time the Refresh Rates process is applied."
        },
        "inventoryControl" : {
          "description" : "Indicates whether the block is non elastic, elastic or sell limit block.",
          "$ref" : "#/definitions/blockInventoryControlType"
        },
        "personsPerRoom" : {
          "type" : "number",
          "description" : "Indicates the expected number of guests per sleeping room when Occupancy Split Per Room Type parameter is N."
        },
        "activePostingMasterReservations" : {
          "type" : "boolean",
          "description" : "Whether any active posting master reservations exist for the business block."
        },
        "housing" : {
          "type" : "boolean",
          "description" : "Determines whether or not the block can be managed at the CRS level."
        },
        "guaranteeRequired" : {
          "type" : "boolean",
          "description" : "Determines whether the CRS guarantee is required or not for the block."
        },
        "transactionCode" : {
          "type" : "string",
          "description" : "Transaction Code for the block",
          "minLength" : 0,
          "maxLength" : 20
        }
      },
      "description" : "Contains reservation related information for the block."
    },
    "breakfastType" : {
      "type" : "object",
      "properties" : {
        "breakfastIncluded" : {
          "type" : "boolean",
          "description" : "Indicates if the room rate quoted includes the breakfast cost."
        },
        "price" : {
          "description" : "The additional charges per person for breakfast, if breakfast is not included in the rate.",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "description" : {
          "type" : "string",
          "description" : "The exact breakfast method for this business block that is included or offered as an extra.",
          "minLength" : 0,
          "maxLength" : 40
        }
      },
      "description" : "Information about breakfast charges."
    },
    "porterageType" : {
      "type" : "object",
      "properties" : {
        "porterageIncluded" : {
          "type" : "boolean",
          "description" : "Indicates if the room rate quoted includes any porterage cost."
        },
        "price" : {
          "description" : "The additional charges per person for porterage service, if porterage is not included in the rate.",
          "$ref" : "#/definitions/currencyAmountType"
        }
      },
      "description" : "Information about porterage charges."
    },
    "blockInventoryControlType" : {
      "type" : "string",
      "description" : "Simple type for block inventory control values. This determines if it is a Non Elastic, Elastic or Sell Limits block.",
      "enum" : [ "NonElastic", "Elastic", "SellLimit" ]
    },
    "cateringType" : {
      "type" : "object",
      "properties" : {
        "cateringStatus" : {
          "description" : "Catering Status details of the block.",
          "$ref" : "#/definitions/bookingStatusDetailType"
        },
        "cateringInternalStatus" : {
          "type" : "string",
          "description" : "Internal status for the catering.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "cateringNextStatusList" : {
          "description" : "Catering Status details of the block.",
          "$ref" : "#/definitions/cateringNextStatusListType"
        },
        "cateringStatusChangeHistory" : {
          "description" : "List of catering status changes.",
          "$ref" : "#/definitions/cateringStatusChangeHistoryType"
        },
        "cateringOwner" : {
          "type" : "string",
          "description" : "Catering Owner of the block.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "eventAttendees" : {
          "description" : "The catering attendees information for events associated with the block.",
          "$ref" : "#/definitions/eventAttendeesType"
        },
        "boardInfo" : {
          "type" : "string",
          "description" : "The name by which the group wishes to be identified in the hotel.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "onSiteName" : {
          "type" : "string",
          "description" : "The name of the customer's in-house representative or contact on the day of the catering event.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "functionInfo" : {
          "type" : "string",
          "description" : "This provides more detail the type of function for which the event is held. For example, Trade Show, Meeting, or Annual Convention.",
          "minLength" : 0,
          "maxLength" : 60
        },
        "trackChanges" : {
          "type" : "boolean",
          "description" : "Indicates whether the catering change logging for the booking is active or not. Any change made to catering events and resources will be logged when this is true."
        },
        "cateringRevenue" : {
          "description" : "Information about catering revenue.",
          "$ref" : "#/definitions/cateringRevenueType"
        },
        "followUpDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date used by catering manager or coordinator to follow up on the event."
        },
        "decisionDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date by which event group must make a decision on the booking."
        },
        "resourceDiscountPercentage" : {
          "type" : "number",
          "description" : "Indicates the resource discount percentage to be applied to resource items associated with the catering event.",
          "minimum" : 0,
          "maximum" : 100
        },
        "hasPackageEvents" : {
          "type" : "boolean",
          "description" : "Indicates if the block has any package events."
        },
        "applyBoardInfoToAllEvents" : {
          "type" : "boolean",
          "description" : "Indicates whether BoardInfo changes can be applied to all events of the block."
        },
        "overrideEventsProcessingWarnings" : {
          "type" : "boolean",
          "description" : "Indicates whether to ignore any warning during applying the changes to the events associated with the current block."
        },
        "applyEventsGuaranteeToAllEvents" : {
          "type" : "boolean",
          "description" : "Indicates whether Guarantee changes can be applied to all events of the block."
        },
        "applyEventAttendeesChangesToEvents" : {
          "description" : "Indicates to which the events of the block can the attendees changes be applied.",
          "$ref" : "#/definitions/applyEventAttendeesChangesToEventsType"
        },
        "resourceDiscountType" : {
          "description" : "Attibute that indicates to which type of resource the discount should be applied to.",
          "$ref" : "#/definitions/resourceDiscountTypeType"
        }
      },
      "description" : "Contains catering related information for the block."
    },
    "cateringNextStatusListType" : {
      "type" : "array",
      "description" : "Next catering status of the business block.",
      "items" : {
        "$ref" : "#/definitions/bookingStatusDetailType"
      },
      "maxItems" : 4000
    },
    "cateringStatusChangeHistoryType" : {
      "type" : "array",
      "description" : "Collection of catering status history.",
      "items" : {
        "$ref" : "#/definitions/bookingStatusHistoryType"
      },
      "maxItems" : 4000
    },
    "eventAttendeesType" : {
      "type" : "object",
      "properties" : {
        "noOfAttendees" : {
          "type" : "integer",
          "description" : "The maximum number of attendees for Catering events associated with the block."
        },
        "attendeesGuaranteed" : {
          "type" : "boolean",
          "description" : "This denotes that the number of Attendees are the minimum guaranteed by the customer."
        }
      },
      "description" : "Event attendees information."
    },
    "cateringRevenueType" : {
      "type" : "object",
      "properties" : {
        "serviceCharge" : {
          "description" : "The service charge for the Catering Events that will be added to the business block.",
          "$ref" : "#/definitions/currencyAmountType"
        },
        "taxAmount" : {
          "description" : "The tax amount for the Catering Events that will be added to the business block.",
          "$ref" : "#/definitions/currencyAmountType"
        }
      },
      "description" : "Information about Catering Revenue."
    },
    "applyEventAttendeesChangesToEventsType" : {
      "type" : "string",
      "description" : "Non-Pkg Events on the same date.",
      "enum" : [ "All", "None", "Same", "NonPackage", "MatchingNonPackage", "Package", "Date" ]
    },
    "resourceDiscountTypeType" : {
      "type" : "string",
      "description" : "Indicates the option to select resources that will be discounted with the Resource Discount Percentage.",
      "enum" : [ "AllDiscountableResources", "ResourcesWithSameDiscountPercentage", "AllDiscountableItems", "ItemsWithSameDiscountPercentage", "AllDiscountableMenusAndMenuItems", "MenusAndMenuItemsWithSameDiscountPercentage", "AllDiscountableSpaces", "SpacesWithSameDiscountPercentage", "None" ]
    },
    "blockPackageType" : {
      "type" : "object",
      "properties" : {
        "packageHeaderType" : {
          "description" : "Package information from configuration.",
          "$ref" : "#/definitions/packageCodeHeaderType"
        },
        "consumptionDetails" : {
          "description" : "Package consumption details. Includes information for quantity , allowance etc.",
          "$ref" : "#/definitions/packageConsumptionType"
        },
        "packageCode" : {
          "type" : "string",
          "description" : "Package code. This is the unique code used for the package and is a required element.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "ratePlanCode" : {
          "type" : "string",
          "description" : "The rate code which contains this package. If the package is not part of a rate code, this will be empty. Required element and part of the key to fetch the correct package record.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "startDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Required value when changing a package. If the original start date was null, then null is required."
        },
        "endDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Required value when changing a package. If the original end date was null, then null is required."
        }
      },
      "description" : "This contains the full information and schedule of the block package."
    },
    "packageCodeHeaderType" : {
      "type" : "object",
      "properties" : {
        "primaryDetails" : {
          "description" : "Package code header primary details.",
          "$ref" : "#/definitions/configPackagePrimaryDetailsType"
        },
        "transactionDetails" : {
          "description" : "Package code header transaction information.",
          "$ref" : "#/definitions/configPackageTransactionType"
        },
        "postingAttributes" : {
          "description" : "Package code posting attributes.",
          "$ref" : "#/definitions/configPostingAttributesType"
        }
      }
    },
    "configPackagePrimaryDetailsType" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "The description of the package.",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "arrangementCode" : {
          "type" : "string",
          "description" : "Arrangement Code.",
          "minLength" : 0,
          "maxLength" : 20
        }
      },
      "description" : "A Config Package Info type."
    },
    "configPackageTransactionType" : {
      "type" : "object",
      "properties" : {
        "allowance" : {
          "type" : "boolean",
          "description" : "Package is marked as an allowance, in case charge is expected back to the guest account from external interface eg. POS. which need to be offset against a consumption allowance."
        },
        "currency" : {
          "type" : "string",
          "description" : "The currency code for this package.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "postingType" : {
          "type" : "string",
          "description" : "The posting frequency for this package, e.g., daily, arrival, departure, etc.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "calculationRule" : {
          "type" : "string",
          "description" : "The price calculation rule for this package.",
          "minLength" : 0,
          "maxLength" : 80
        }
      },
      "description" : "A HotelPackageTransaction type."
    },
    "configPostingAttributesType" : {
      "type" : "object",
      "properties" : {
        "addToRate" : {
          "type" : "boolean",
          "description" : "The package price is added to the room rate."
        },
        "printSeparateLine" : {
          "type" : "boolean",
          "description" : "The package price is printed on separate line of the folio."
        },
        "sellSeparate" : {
          "type" : "boolean",
          "description" : "Can the package be sold separate from rate plan code?"
        },
        "postNextDay" : {
          "type" : "boolean",
          "description" : "package charges will be posted next business day."
        },
        "forecastNextDay" : {
          "type" : "boolean",
          "description" : "Package will be forecasted for consumption the next business day."
        },
        "calculatedPrice" : {
          "type" : "number",
          "description" : "Calculated Package Price based from Number of Adults, Children and Calculation Rule."
        }
      },
      "description" : "A config Package posting attributes type."
    },
    "packageConsumptionType" : {
      "type" : "object",
      "properties" : {
        "defaultQuantity" : {
          "type" : "integer",
          "description" : "The default quantity attached in the package."
        }
      },
      "description" : "Package Consumption Information. Includes information on quantity of the package used, allowance consumption etc."
    },
    "blockInventoryItemsType" : {
      "type" : "array",
      "description" : "Inventory item attached to a block.",
      "items" : {
        "$ref" : "#/definitions/blockInventoryItemType"
      },
      "maxItems" : 4000
    },
    "blockInventoryItemType" : {
      "type" : "object",
      "properties" : {
        "url" : {
          "type" : "string",
          "description" : "URL that identifies the location associated with the record identified by the UniqueID.",
          "maxLength" : 2000
        },
        "type" : {
          "type" : "string",
          "description" : "A reference to the type of object defined by the UniqueID element.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "instance" : {
          "type" : "string",
          "description" : "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "idContext" : {
          "type" : "string",
          "description" : "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "minLength" : 0,
          "maxLength" : 80
        },
        "id" : {
          "type" : "string",
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "idExtension" : {
          "type" : "integer",
          "description" : "Additional identifying value assigned by the creating system."
        },
        "item" : {
          "description" : "Specifies Items and its attributes. When used for data manipulation for Items setup on reservation, etc only code is considered. Other Attributes are for used to provide information during fetch operation.",
          "$ref" : "#/definitions/itemInfoType"
        },
        "quantity" : {
          "type" : "integer",
          "description" : "Number of items booked."
        },
        "timeSpan" : {
          "description" : "Begin and end date and time of the items applicability.",
          "$ref" : "#/definitions/dateRangeType"
        }
      },
      "description" : "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote)."
    },
    "itemInfoType" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "Detail description of an item.",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "availabilityPeriod" : {
          "description" : "Defines a Time period when the item is available.",
          "$ref" : "#/definitions/timeWindowType"
        },
        "timeSpan" : {
          "description" : "Date Range to get the inventories of the items.",
          "$ref" : "#/definitions/timeSpanType"
        },
        "code" : {
          "type" : "string",
          "description" : "Item Code.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "name" : {
          "type" : "string",
          "description" : "Name of an item.",
          "minLength" : 0,
          "maxLength" : 200
        },
        "sellSeparate" : {
          "type" : "boolean",
          "description" : "If true indicates that item is allowed to sell separately."
        },
        "requiredForBooking" : {
          "type" : "boolean",
          "description" : "If true indicates that item is required for the reservation."
        }
      },
      "description" : "Basic information regarding an Item."
    },
    "timeWindowType" : {
      "type" : "object",
      "properties" : {
        "startTime" : {
          "type" : "string",
          "description" : "Start Time of the Time window."
        },
        "endTime" : {
          "type" : "string",
          "description" : "End Time of the Time window."
        }
      },
      "description" : "Defines a Time period with start time and an end time."
    },
    "dateRangeType" : {
      "type" : "object",
      "properties" : {
        "start" : {
          "type" : "string",
          "format" : "date",
          "description" : "The starting value of the date range."
        },
        "end" : {
          "type" : "string",
          "format" : "date",
          "description" : "The ending value of the date range."
        }
      },
      "description" : "Date Range with Start and End dates."
    },
    "blockStatisticsType" : {
      "type" : "object",
      "properties" : {
        "allocatedRoomStatistics" : {
          "description" : "Indicates the room statistics for allocated rooms.",
          "$ref" : "#/definitions/roomStatisticsType"
        },
        "actualRoomStatistics" : {
          "description" : "Indicates the room statistics for actualized rooms.",
          "$ref" : "#/definitions/roomStatisticsType"
        },
        "cateringRevenueOnBooks" : {
          "type" : "number",
          "description" : "Indicates the catering revenue on the books."
        },
        "actualCateringRevenue" : {
          "type" : "number",
          "description" : "Indicates actualized catering revenue."
        }
      }
    },
    "roomStatisticsType" : {
      "type" : "object",
      "properties" : {
        "roomCount" : {
          "type" : "number",
          "description" : "The total number of rooms."
        },
        "roomRevenue" : {
          "type" : "number",
          "description" : "The total revenue for the rooms."
        },
        "averageRate" : {
          "type" : "number",
          "description" : "The average rate per room."
        }
      }
    },
    "commentInfoType" : {
      "type" : "object",
      "properties" : {
        "comment" : {
          "description" : "Comment details for the comment. It will be empty in case of delete comment.",
          "$ref" : "#/definitions/commentType"
        },
        "id" : {
          "type" : "string",
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "type" : {
          "type" : "string",
          "description" : "A reference to the type of object defined by the UniqueID element.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "idContext" : {
          "type" : "string",
          "description" : "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "minLength" : 0,
          "maxLength" : 80
        },
        "warnings" : {
          "$ref" : "#/definitions/warningsType"
        }
      },
      "description" : "Comment related to the profile/reservation."
    },
    "commentType" : {
      "type" : "object",
      "properties" : {
        "text" : {
          "description" : "Formatted text content.",
          "$ref" : "#/definitions/formattedTextTextType"
        },
        "image" : {
          "type" : "string",
          "description" : "An image for this paragraph.",
          "maxLength" : 2000
        },
        "url" : {
          "type" : "string",
          "description" : "A URL for this paragraph.",
          "maxLength" : 2000
        },
        "commentTitle" : {
          "type" : "string",
          "description" : "Specifies Comment's Title.",
          "minLength" : 0,
          "maxLength" : 4000
        },
        "type" : {
          "type" : "string",
          "description" : "Specifies type of the comment.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "internal" : {
          "type" : "boolean",
          "description" : "When true, the comment may not be shown to the consumer. When false, the comment may be shown to the consumer."
        },
        "hotelId" : {
          "type" : "string",
          "description" : "If specified comment belongs to the Hotel, otherwise it is a global comment.",
          "minLength" : 0,
          "maxLength" : 20
        }
      },
      "description" : "An indication of a new paragraph for a sub-section of a formatted text message."
    },
    "formattedTextTextType" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string",
          "description" : "Property Value"
        },
        "language" : {
          "type" : "string",
          "description" : "Language identification.",
          "pattern" : "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        }
      },
      "description" : "Provides text and indicates whether it is formatted or not."
    },
    "roomAllocationTypeType" : {
      "type" : "object",
      "properties" : {
        "roomAllocationInfo" : {
          "type" : "array",
          "description" : "Allocation objects for a block.",
          "items" : {
            "$ref" : "#/definitions/roomAllocationInfoType"
          },
          "maxItems" : 4000
        },
        "allocation" : {
          "description" : "Indicates the type of the Allocation objects.",
          "$ref" : "#/definitions/allocationType"
        }
      },
      "description" : "A collection of Allocation objects for a block, such as Current Rooms, Original Rooms, Rate Amounts, etc."
    },
    "roomAllocationInfoType" : {
      "type" : "object",
      "properties" : {
        "roomGridDetails" : {
          "type" : "array",
          "description" : "Indicates the values of room inventory or rate amounts.",
          "items" : {
            "$ref" : "#/definitions/roomGridDetailsType"
          },
          "maxItems" : 4000
        },
        "roomGridInvSummary" : {
          "type" : "array",
          "description" : "Indicates the values of room inventory's summary.",
          "items" : {
            "$ref" : "#/definitions/blockGridInvType"
          },
          "maxItems" : 4000
        },
        "availableRoomGridInvSummary" : {
          "type" : "array",
          "description" : "Indicates the values of room available room grid inventory's summary.",
          "items" : {
            "$ref" : "#/definitions/blockGridInvType"
          },
          "maxItems" : 4000
        },
        "stayDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the date of the room allocation or rate amount."
        },
        "extendedStay" : {
          "type" : "boolean",
          "description" : "Indicates if the current date will require automatic block extension."
        }
      },
      "description" : "A collection of Allocation objects for a block that indicate room inventory or rate amounts."
    },
    "roomGridDetailsType" : {
      "type" : "object",
      "properties" : {
        "inventory" : {
          "description" : "Indicates the room inventory values per person occupancy.",
          "$ref" : "#/definitions/blockGridInvType"
        },
        "rate" : {
          "description" : "Indicates the rate amount values per person occupancy.",
          "$ref" : "#/definitions/blockGridRatesType"
        },
        "roomType" : {
          "type" : "string",
          "description" : "Indicates the room type for which the inventory or rate values are applicable.",
          "minLength" : 0,
          "maxLength" : 20
        }
      },
      "description" : "Indicates the values of room inventory or rate amount per room type."
    },
    "blockGridInvType" : {
      "type" : "object",
      "properties" : {
        "onePerson" : {
          "type" : "integer",
          "description" : "Indicates the one person inventory value ( occupancy or availability )."
        },
        "twoPerson" : {
          "type" : "integer",
          "description" : "Indicates the two person inventory value ( occupancy or availability )."
        },
        "threePerson" : {
          "type" : "integer",
          "description" : "Indicates the three person inventory value ( occupancy or availability )."
        },
        "fourPerson" : {
          "type" : "integer",
          "description" : "Indicates the four person inventory value ( occupancy or availability )."
        },
        "sellLimit" : {
          "type" : "integer",
          "description" : "Indicates the sell limit"
        },
        "cutoffDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the cutoff date.Date when inventory left in the block will be cut-off."
        }
      },
      "description" : "Indicates the inventory values ( occupancy or availability ) per person occupancy."
    },
    "blockGridRatesType" : {
      "type" : "object",
      "properties" : {
        "onePerson" : {
          "type" : "number",
          "description" : "Indicates the one person occupancy rate amount."
        },
        "twoPerson" : {
          "type" : "number",
          "description" : "Indicates the two person occupancy rate amount."
        },
        "threePerson" : {
          "type" : "number",
          "description" : "Indicates the three person occupancy rate amount."
        },
        "fourPerson" : {
          "type" : "number",
          "description" : "Indicates the four person occupancy rate amount."
        },
        "extraPerson" : {
          "type" : "number",
          "description" : "Indicates the extra person occupancy rate amount."
        }
      },
      "description" : "Indicates the rate amount values per person occupancy."
    },
    "allocationType" : {
      "type" : "string",
      "description" : "Simple type for block allocation used in room rate grid.",
      "enum" : [ "Initial", "Actual", "Rates", "Pickup", "Contract", "Available", "Pickupperc", "Changes", "Released", "Houseavailability", "SellLimit", "AvailableSellLimit", "MasterAllocInitial", "Allocated", "SubAllocResv", "CutoffDate" ]
    },
    "roomAllocationMasterInfoType" : {
      "type" : "object",
      "properties" : {
        "roomTypes" : {
          "type" : "array",
          "description" : "Detailed information about Room Type in the Hotel.",
          "items" : {
            "$ref" : "#/definitions/allocationRoomTypeInfoType"
          },
          "maxItems" : 4000
        },
        "genericRoomTypes" : {
          "type" : "array",
          "description" : "Detailed information about Room Type in the Hotel.",
          "items" : {
            "$ref" : "#/definitions/allocationRoomTypeInfoType"
          },
          "maxItems" : 4000
        }
      }
    },
    "allocationRoomTypeInfoType" : {
      "type" : "object",
      "properties" : {
        "longDescription" : {
          "type" : "string",
          "description" : "Detail description of the Room Type.",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "webName" : {
          "type" : "string",
          "description" : "Name corresponding to a RoomType.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "webPage" : {
          "type" : "string",
          "description" : "URL providing more information about the Room Type.",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "roomFeatures" : {
          "description" : "Collection of room features.",
          "$ref" : "#/definitions/roomFeaturesType"
        },
        "roomTypeAttributes" : {
          "description" : "Room type attributes.",
          "$ref" : "#/definitions/roomTypeAttributesType"
        },
        "bookingChannelMappings" : {
          "type" : "array",
          "description" : "Booking Channels mapping for the Room Type.",
          "items" : {
            "$ref" : "#/definitions/bookingChannelMappingType"
          },
          "maxItems" : 4000
        },
        "bedTypeCodes" : {
          "type" : "array",
          "description" : "Bed type code associated with room.",
          "items" : {
            "type" : "string",
            "minLength" : 0,
            "maxLength" : 20
          },
          "maxItems" : 4000
        },
        "roomType" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "description" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "available" : {
          "type" : "boolean",
          "description" : "Used to specify an availability status for the room type."
        }
      },
      "description" : "The information about the room types contained in the block room allocation."
    },
    "roomFeaturesType" : {
      "type" : "array",
      "description" : "A recurring element that identifies the room features.",
      "items" : {
        "$ref" : "#/definitions/roomFeatureType"
      },
      "maxItems" : 4000
    },
    "roomFeatureType" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "A code representing a room feature.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "description" : {
          "type" : "string",
          "description" : "A code representing a room feature.",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "quantity" : {
          "type" : "integer",
          "description" : "Indicates quantity."
        }
      },
      "description" : "Room Feature Information."
    },
    "roomTypeAttributesType" : {
      "type" : "object",
      "properties" : {
        "defaultOccupancy" : {
          "type" : "integer",
          "description" : "Default occupancy of property room type."
        },
        "maximumOccupancy" : {
          "type" : "integer",
          "description" : "Max occupancy of property room type."
        },
        "noOfPhysicalRooms" : {
          "type" : "integer",
          "description" : "Number of physical rooms of property room type."
        }
      },
      "description" : "Attributes of property room type."
    },
    "bookingChannelMappingType" : {
      "type" : "object",
      "properties" : {
        "bookingChannelCode" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "code" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "name" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 40
        },
        "description" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 2000
        }
      }
    },
    "userDefinedFieldsType" : {
      "type" : "object",
      "properties" : {
        "characterUDFs" : {
          "description" : "Collection of user defined fields of Character/String Type.",
          "$ref" : "#/definitions/characterUDFsType"
        },
        "numericUDFs" : {
          "description" : "Collection of user defined fields of Numeric Type.",
          "$ref" : "#/definitions/numericUDFsType"
        },
        "dateUDFs" : {
          "description" : "Collection of user defined fields of Date Type.",
          "$ref" : "#/definitions/dateUDFsType"
        }
      },
      "description" : "A common type used to hold user defined fields(UDFs). This type should be used to handle UDFs on RReservation, Profiles, etc."
    },
    "characterUDFsType" : {
      "type" : "array",
      "description" : "Used to hold collection of user defined fields of Character/String Type.",
      "items" : {
        "$ref" : "#/definitions/characterUDFType"
      },
      "maxItems" : 4000
    },
    "characterUDFType" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Used to hold user defined field of Character Type. It is highly recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "value" : {
          "type" : "string",
          "description" : "Value of user defined field.",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "alternateName" : {
          "type" : "string",
          "description" : "Label of user defined field used by vendors or customers.",
          "minLength" : 0,
          "maxLength" : 2000
        }
      },
      "description" : "Used to hold user defined field of Character/String Type."
    },
    "numericUDFsType" : {
      "type" : "array",
      "description" : "Used to hold collection of user defined fields of Numeric Type.",
      "items" : {
        "$ref" : "#/definitions/numericUDFType"
      },
      "maxItems" : 4000
    },
    "numericUDFType" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of user defined field.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "value" : {
          "type" : "number",
          "description" : "Value of user defined field."
        },
        "alternateName" : {
          "type" : "string",
          "description" : "Label of user defined field used by vendors or customers.",
          "minLength" : 0,
          "maxLength" : 2000
        }
      },
      "description" : "Used to hold user defined field of Numeric Type. It is highly recommended to use UDFN01, UDFN02,...UDFN40 (Total 40) as Numeric UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required."
    },
    "dateUDFsType" : {
      "type" : "array",
      "description" : "Used to hold collection of user defined fields of Date Type.",
      "items" : {
        "$ref" : "#/definitions/dateUDFType"
      },
      "maxItems" : 4000
    },
    "dateUDFType" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Used to hold user defined field of Date Type. It is highly recommended to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "value" : {
          "type" : "string",
          "format" : "date",
          "description" : "Value of user defined field."
        },
        "alternateName" : {
          "type" : "string",
          "description" : "Label of user defined field used by vendors or customers.",
          "minLength" : 0,
          "maxLength" : 2000
        }
      },
      "description" : "Used to hold user defined field of Date Type."
    },
    "indicatorsType" : {
      "type" : "array",
      "description" : "Collection of lamp indicators.",
      "items" : {
        "$ref" : "#/definitions/indicatorType"
      },
      "maxItems" : 4000
    },
    "indicatorType" : {
      "type" : "object",
      "properties" : {
        "indicatorName" : {
          "type" : "string",
          "description" : "Name of the indicator.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "count" : {
          "type" : "integer",
          "description" : "Indicates number of occurrences of the indicator."
        }
      },
      "description" : "Lamp indicator Type."
    },
    "blockTracesType" : {
      "type" : "array",
      "description" : "List of Block traces.",
      "items" : {
        "$ref" : "#/definitions/blockTraceType"
      },
      "maxItems" : 4000
    },
    "blockTraceType" : {
      "type" : "object",
      "properties" : {
        "timeInfo" : {
          "description" : "Date of the trace.",
          "$ref" : "#/definitions/traceTimeInfoType"
        },
        "departmentId" : {
          "type" : "string",
          "description" : "Indicates the Department code.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "traceText" : {
          "type" : "string",
          "description" : "The information this trace contains.",
          "maxLength" : 2000
        },
        "resolveInfo" : {
          "description" : "Information regarding the status of the trace",
          "$ref" : "#/definitions/traceResolveType"
        },
        "type" : {
          "type" : "string",
          "description" : "A reference to the type of object defined by the UniqueID element.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "instance" : {
          "type" : "string",
          "description" : "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "idContext" : {
          "type" : "string",
          "description" : "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "minLength" : 0,
          "maxLength" : 80
        },
        "id" : {
          "type" : "string",
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "createDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Time stamp of the creation."
        },
        "creatorId" : {
          "type" : "string",
          "description" : "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "minLength" : 0,
          "maxLength" : 200
        },
        "lastModifyDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Time stamp of last modification."
        },
        "lastModifierId" : {
          "type" : "string",
          "description" : "Identifies the last software system or person to modify a record.",
          "minLength" : 0,
          "maxLength" : 200
        }
      },
      "description" : "Extended Trace object to hold information for a block."
    },
    "traceTimeInfoType" : {
      "type" : "object",
      "properties" : {
        "traceOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of the trace."
        },
        "traceTime" : {
          "type" : "string",
          "description" : "Time of the trace",
          "minLength" : 0,
          "maxLength" : 20
        },
        "enteredBy" : {
          "type" : "string",
          "description" : "User that entered this trace.",
          "maxLength" : 2000
        }
      }
    },
    "traceResolveType" : {
      "type" : "object",
      "properties" : {
        "resolvedOn" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date the trace was resolved"
        },
        "resolvedBy" : {
          "type" : "string",
          "description" : "User that resolved the trace",
          "maxLength" : 2000
        }
      }
    },
    "blockStatisticsSummaryType" : {
      "type" : "object",
      "properties" : {
        "roomsSold" : {
          "type" : "integer"
        },
        "revenueSummary" : {
          "$ref" : "#/definitions/revenueSummaryType"
        },
        "avgRoomRate" : {
          "type" : "number"
        },
        "statisticType" : {
          "$ref" : "#/definitions/statisticsSummaryType"
        }
      },
      "description" : "Type to store summary detail like rooms sold, average room rate and revenue for a statistic type."
    },
    "revenueSummaryType" : {
      "type" : "object",
      "properties" : {
        "roomRevenue" : {
          "type" : "number"
        },
        "foodAndBeverageRevenue" : {
          "type" : "number"
        },
        "otherRevenue" : {
          "type" : "number"
        },
        "cateringRevenue" : {
          "type" : "number"
        },
        "cateringOtherRevenue" : {
          "type" : "number"
        },
        "totalRevenue" : {
          "type" : "number"
        }
      },
      "description" : "Summary information pertaining to revenue like Room, Food and Beverage, Catering, Other, Catering Other and Total Revenue."
    },
    "statisticsSummaryType" : {
      "type" : "string",
      "description" : "Type of statistic for which summary information is populated.",
      "enum" : [ "Potential", "Actual", "Variance" ]
    },
    "rateProgramType" : {
      "type" : "object",
      "properties" : {
        "roomPool" : {
          "type" : "string",
          "description" : "Room Pool Code.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "rates" : {
          "type" : "array",
          "description" : "Block Rate Program Rates.",
          "items" : {
            "$ref" : "#/definitions/rateProgramRateType"
          },
          "maxItems" : 4000
        }
      },
      "description" : "Rate Programs for the Block."
    },
    "rateProgramRateType" : {
      "type" : "object",
      "properties" : {
        "rateCode" : {
          "type" : "string",
          "description" : "Rate Program Code.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "rateMarketCode" : {
          "description" : "RateMarketCode is a rate attribute required for external system in order to create a rate program. Only available if configured in OPERA Cloud.",
          "$ref" : "#/definitions/codeDescriptionType"
        },
        "rateAmounts" : {
          "description" : "Rate Program Amounts.",
          "$ref" : "#/definitions/blockGridRatesType"
        },
        "roomTypes" : {
          "description" : "Rate Program Room Types.",
          "$ref" : "#/definitions/rateProgramRoomType"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Start date of the Room Pool Rate Program."
        },
        "endDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "End date of the Room Pool Rate Program."
        },
        "commissionable" : {
          "type" : "boolean",
          "description" : "Rate Program Commissionable Indicator."
        },
        "mobileCheckout" : {
          "type" : "boolean",
          "description" : "Rate Program Mobile Checkout Allowed Indicator."
        },
        "primary" : {
          "type" : "boolean",
          "description" : "Rate Program Primary Rate Code Indicator."
        },
        "sequence" : {
          "type" : "integer",
          "description" : "Sequence Number of the Rate Program."
        }
      },
      "description" : "Room Pool Rate Program."
    },
    "rateProgramRoomType" : {
      "type" : "array",
      "description" : "Room type for which Rate Program Rate Applies.",
      "items" : {
        "type" : "string",
        "minLength" : 0,
        "maxLength" : 20
      },
      "maxItems" : 4000
    },
    "eventTypeType" : {
      "type" : "string",
      "description" : "Contract type.",
      "enum" : [ "Convention", "Contract" ]
    },
    "blockAlternateDateType" : {
      "type" : "object",
      "properties" : {
        "alternateBeginDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Alternate Begin date."
        },
        "blockRates" : {
          "description" : "Rate details for Alternate Dates.",
          "$ref" : "#/definitions/blockGridRatesType"
        },
        "roomCategory" : {
          "type" : "string",
          "description" : "The Room Category Label",
          "minLength" : 0,
          "maxLength" : 20
        },
        "priority" : {
          "type" : "integer",
          "description" : "The Priority given to these alternate dates."
        }
      },
      "description" : "Information for Alternate date types"
    },
    "sellMessageConfigsType" : {
      "type" : "object",
      "properties" : {
        "sellMessageConfig" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/sellMessageConfigType"
          },
          "maxItems" : 4000
        },
        "count" : {
          "type" : "integer",
          "description" : "Total number of rows returned"
        }
      },
      "description" : "The SellMessageConfigsType is the list of sell messages, each comprising of all the sell message attributes and other details."
    },
    "sellMessageConfigType" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string",
          "description" : "Sell message text.",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "blockId" : {
          "description" : "Unique OPERA Block ID which is used to find a Block from OPERA. This ID is a primary identification of a Block in OPERA.",
          "$ref" : "#/definitions/blockId"
        },
        "timespan" : {
          "description" : "Begin and End date for the sell message.",
          "$ref" : "#/definitions/timeSpanType"
        },
        "chainCode" : {
          "type" : "string",
          "description" : "Chain Code for which the sell message is defined.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "roomType" : {
          "type" : "string",
          "description" : "Room type for which the sell message is defined.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "ratePlanCode" : {
          "type" : "string",
          "description" : "Rate Plan Code for which the sell message is defined.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "languageCode" : {
          "type" : "string",
          "description" : "Language in which the sell message is defined.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "stickyFlag" : {
          "type" : "boolean",
          "description" : "Sticky flag is used to define if the sell message should display on the block screen by default."
        },
        "sellSequence" : {
          "type" : "number",
          "description" : "This number indicates the display order of the sell message."
        },
        "usedInModule" : {
          "type" : "array",
          "description" : "This represents the moduleType where we want to display this SellMessage.",
          "items" : {
            "$ref" : "#/definitions/usedInModuleType"
          },
          "maxItems" : 10
        },
        "type" : {
          "type" : "string",
          "description" : "A reference to the type of object defined by the UniqueID element.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "id" : {
          "type" : "string",
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "minLength" : 0,
          "maxLength" : 80
        }
      },
      "description" : "Only one of the following can hold a value: HotelCode, CROCode or ChainCode"
    },
    "blockId" : {
      "type" : "object",
      "properties" : {
        "url" : {
          "type" : "string",
          "description" : "URL that identifies the location associated with the record identified by the UniqueID.",
          "maxLength" : 2000
        },
        "type" : {
          "type" : "string",
          "description" : "A reference to the type of object defined by the UniqueID element.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "instance" : {
          "type" : "string",
          "description" : "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "idContext" : {
          "type" : "string",
          "description" : "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "minLength" : 0,
          "maxLength" : 80
        },
        "id" : {
          "type" : "string",
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "idExtension" : {
          "type" : "integer",
          "description" : "Additional identifying value assigned by the creating system."
        }
      },
      "description" : "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote)."
    },
    "usedInModuleType" : {
      "type" : "string",
      "description" : "Simple type for indicating the module for which user wants to create the SellMessage. Valid module types are Look To Book Sales,Reservations,Blocks,Function Diary and Group Rooms Control.",
      "enum" : [ "Blocks", "Reservations", "FunctionDiary", "LookToBookSales", "GroupRoomsControl" ]
    },
    "attachmentsType" : {
      "type" : "array",
      "description" : "Attachment List.",
      "items" : {
        "$ref" : "#/definitions/attachmentType"
      },
      "maxItems" : 4000
    },
    "attachmentType" : {
      "type" : "object",
      "properties" : {
        "fileName" : {
          "type" : "string",
          "description" : "Name of the file.",
          "minLength" : 0,
          "maxLength" : 2000
        },
        "fileSize" : {
          "type" : "integer",
          "description" : "Size of the file."
        },
        "description" : {
          "type" : "string",
          "description" : "Description for the file.",
          "minLength" : 0,
          "maxLength" : 4000
        },
        "global" : {
          "type" : "boolean",
          "description" : "Flag to say if attachment is available across properties."
        },
        "history" : {
          "description" : "History data associated with Attachment.",
          "$ref" : "#/definitions/dateTimeStampGroupType"
        },
        "type" : {
          "type" : "string",
          "description" : "A reference to the type of object defined by the UniqueID element.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "idContext" : {
          "type" : "string",
          "description" : "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "minLength" : 0,
          "maxLength" : 80
        },
        "id" : {
          "type" : "string",
          "description" : "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "minLength" : 0,
          "maxLength" : 80
        }
      },
      "description" : "Attached files."
    },
    "dateTimeStampGroupType" : {
      "type" : "object",
      "properties" : {
        "createDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Time stamp of the creation."
        },
        "creatorId" : {
          "type" : "string",
          "description" : "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "minLength" : 0,
          "maxLength" : 200
        },
        "lastModifyDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Time stamp of last modification."
        },
        "lastModifierId" : {
          "type" : "string",
          "description" : "Identifies the last software system or person to modify a record.",
          "minLength" : 0,
          "maxLength" : 200
        }
      }
    },
    "blockWashSchedulesType" : {
      "type" : "array",
      "description" : "Wash Schedule attached to the block, which allows to release inventory based on selected wash schedule type.",
      "items" : {
        "$ref" : "#/definitions/blockWashScheduleType"
      },
      "maxItems" : 4000
    },
    "blockWashScheduleType" : {
      "type" : "object",
      "properties" : {
        "washDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the block wash operation will be performed."
        },
        "roomTypes" : {
          "type" : "array",
          "description" : "A single room type on which wash operation should be performed.",
          "items" : {
            "type" : "string",
            "minLength" : 0,
            "maxLength" : 20
          },
          "maxItems" : 4000
        },
        "washByRooms" : {
          "description" : "Wash by rooms contains the occupany details and sell values for a specific block wash schedule.",
          "$ref" : "#/definitions/blockGridInvType"
        },
        "washByPercent" : {
          "type" : "number",
          "description" : "When using the Wash by % option, indicate a wash percentage that will be applied it to the whole block.",
          "minimum" : 0,
          "maximum" : 100
        }
      },
      "description" : "Allows to select type of wash schedule: by number of rooms or by percentage."
    },
    "blockRestrictionsType" : {
      "type" : "object",
      "properties" : {
        "blockRestriction" : {
          "type" : "array",
          "description" : "Block restriction details.",
          "items" : {
            "$ref" : "#/definitions/blockRestrictionType"
          },
          "maxItems" : 4000
        }
      },
      "description" : "List of restrictions belonging to a block."
    },
    "blockRestrictionType" : {
      "type" : "object",
      "properties" : {
        "restrictionDate" : {
          "description" : "Date for which the restriction applies.",
          "$ref" : "#/definitions/timeSpanDaysOfWeekType"
        },
        "roomType" : {
          "type" : "string",
          "description" : "Room Type selected for the block restriction.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "blockRestrictionStatus" : {
          "description" : "Indicates the type of restriction along with parameters for restriction, if any.",
          "$ref" : "#/definitions/restrictionStatusType"
        },
        "actualTimeSpan" : {
          "description" : "Actual time span of the restriction.",
          "$ref" : "#/definitions/timeSpanType"
        }
      },
      "description" : "Restriction details for a block."
    },
    "timeSpanDaysOfWeekType" : {
      "type" : "object",
      "properties" : {
        "timeSpan" : {
          "$ref" : "#/definitions/timeSpanType"
        },
        "sunday" : {
          "type" : "boolean"
        },
        "monday" : {
          "type" : "boolean"
        },
        "tuesday" : {
          "type" : "boolean"
        },
        "wednesday" : {
          "type" : "boolean"
        },
        "thursday" : {
          "type" : "boolean"
        },
        "friday" : {
          "type" : "boolean"
        },
        "saturday" : {
          "type" : "boolean"
        }
      },
      "description" : "Container for Time span with days of week."
    },
    "restrictionStatusType" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "description" : "Identifies the type of restriction. I.E. Closed, ClosedForArrival, etc.",
          "$ref" : "#/definitions/restrictionStatusesType"
        },
        "unit" : {
          "type" : "integer",
          "description" : "Defines restriction in conjunction with Restriction Code. Value must be specified for Restriction Codes MinimumStayThrough, MaximumStayThrough, MinimumLengthOfStay, MaximumLengthOfStay, MinimumAdvanceBooking, MaximumAdvanceBooking."
        }
      },
      "description" : "The RestrictionStatusType is used to indicate the type of restriction applied. An enumerated restriction type is defined in the attribute group."
    },
    "restrictionStatusesType" : {
      "type" : "string",
      "enum" : [ "Closed", "ClosedForArrival", "ClosedForDeparture", "MinimumStayThrough", "MaximumStayThrough", "MinimumLengthOfStay", "MaximumLengthOfStay", "LOSNotAvailable", "MinimumAdvanceBooking", "MaximumAdvanceBooking", "Open", "OpenForArrival", "OpenForDeparture" ]
    },
    "blockAccessExclusionsType" : {
      "type" : "object",
      "properties" : {
        "blockAccessExclusion" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/blockAccessExclusionType"
          },
          "maxItems" : 4000
        },
        "accessExclusionMessage" : {
          "description" : "Exclusion message for the block.",
          "$ref" : "#/definitions/blockAccessExclusionMessageType"
        }
      },
      "description" : "Access Exclusion information indicating the actions allowed under a HUB or hotel for which the access exclusion is set."
    },
    "blockAccessExclusionType" : {
      "type" : "object",
      "properties" : {
        "sourceType" : {
          "type" : "string",
          "description" : "The type of source (CRO or Hotel code) for which the rate access exclusion is set.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "sourceValue" : {
          "type" : "string",
          "description" : "CRO or Hotel code value.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "allowModifyReservation" : {
          "type" : "boolean",
          "description" : "Allow to modify a reservation under this access exclusion."
        },
        "allowCancelReservation" : {
          "type" : "boolean",
          "description" : "Allow to cancel a reservation under this access exclusion."
        },
        "allowCreateReservation" : {
          "type" : "boolean",
          "description" : "Allow to create a reservation under this access exclusion."
        },
        "inactive" : {
          "type" : "boolean",
          "description" : "The rate access exclusion is inactive"
        },
        "excludeFromAvailability" : {
          "type" : "boolean",
          "description" : "Exclude a specific rate from availability"
        }
      },
      "description" : "Access Exclusion information indicating the actions allowed under a HUB or Hotel for which the access exclusion is set."
    },
    "blockAccessExclusionMessageType" : {
      "type" : "object",
      "properties" : {
        "exclusionMessage" : {
          "type" : "string",
          "description" : "Access Exclusion message for the block.",
          "minLength" : 0,
          "maxLength" : 4000
        }
      },
      "description" : "Access exclusion message."
    },
    "links" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/instanceLink"
      }
    },
    "instanceLink" : {
      "type" : "object",
      "required" : [ "href", "method", "operationId", "rel" ],
      "properties" : {
        "href" : {
          "type" : "string",
          "description" : "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true."
        },
        "rel" : {
          "type" : "string",
          "description" : "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile."
        },
        "templated" : {
          "type" : "boolean",
          "description" : "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "default" : false
        },
        "method" : {
          "type" : "string",
          "description" : "HTTP method for requesting the target of the link.",
          "enum" : [ "GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS", "HEAD" ]
        },
        "targetSchema" : {
          "type" : "string",
          "description" : "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource.."
        },
        "operationId" : {
          "type" : "string",
          "description" : "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply."
        },
        "title" : {
          "type" : "string",
          "description" : "Exact copy of the \"summary\" field on the linked operation."
        }
      },
      "description" : "Metadata describing link description objects that MAY appear in the JSON instance representation."
    },
    "exceptionDetailType" : {
      "type" : "object",
      "required" : [ "title", "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title" : {
          "type" : "string",
          "description" : "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status" : {
          "type" : "integer",
          "description" : "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail" : {
          "type" : "string",
          "description" : "Human-readable description specific to this occurrence of the problem."
        },
        "instance" : {
          "type" : "string",
          "description" : "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode" : {
          "type" : "string",
          "description" : "Application error code, which is different from HTTP error code."
        },
        "o:errorPath" : {
          "type" : "string",
          "description" : "Path to the problem at the resource or property level."
        },
        "o:errorDetails" : {
          "type" : "array",
          "description" : "Details of the error message, consisting of a hierarchical tree structure.",
          "items" : {
            "$ref" : "#/definitions/errorInstance"
          }
        },
        "links" : {
          "$ref" : "#/definitions/links"
        }
      },
      "title" : "Error Detail",
      "description" : "Complex type that contains error details for a REST call."
    },
    "errorInstance" : {
      "type" : "object",
      "required" : [ "title", "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title" : {
          "type" : "string",
          "description" : "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status" : {
          "type" : "integer",
          "description" : "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail" : {
          "type" : "string",
          "description" : "Human-readable description specific to this occurrence of the problem."
        },
        "instance" : {
          "type" : "string",
          "description" : "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode" : {
          "type" : "string",
          "description" : "Application error code, which is different from HTTP error code."
        },
        "o:errorPath" : {
          "type" : "string",
          "description" : "Path to the problem at the resource or property level."
        }
      },
      "title" : "Error Instance Details",
      "description" : "Complex type that contains error instance details for a REST call."
    }
  },
  "parameters" : {
    "authKey" : {
      "name" : "authorization",
      "in" : "header",
      "description" : "Bearer token that needs to be passed which is generated post user authentication",
      "required" : true,
      "type" : "string"
    },
    "x-app-key" : {
      "name" : "x-app-key",
      "in" : "header",
      "description" : "Client or Partner’s Application Key",
      "required" : true,
      "type" : "string",
      "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
    },
    "x-hotelid" : {
      "name" : "x-hotelid",
      "in" : "header",
      "description" : "Mandatory parameter to identify the hotel code where the end user is logged in",
      "required" : true,
      "type" : "string"
    },
    "x-externalsystem" : {
      "name" : "x-externalsystem",
      "in" : "header",
      "description" : "External system code.",
      "required" : false,
      "type" : "string",
      "maxLength" : 80,
      "x-example" : "EXTERNALSYSTEMCODE"
    },
    "Accept-Language" : {
      "name" : "Accept-Language",
      "in" : "header",
      "description" : "Language code",
      "required" : false,
      "type" : "string"
    }
  },
  "responses" : {
    "400" : {
      "description" : "Bad Request",
      "schema" : {
        "$ref" : "#/definitions/exceptionDetailType"
      }
    },
    "401" : {
      "description" : "Unauthorized"
    },
    "403" : {
      "description" : "Forbidden"
    },
    "404" : {
      "description" : "Resource not found",
      "schema" : {
        "$ref" : "#/definitions/exceptionDetailType"
      }
    },
    "405" : {
      "description" : "Method not allowed"
    },
    "406" : {
      "description" : "Not acceptable."
    },
    "413" : {
      "description" : "Request Entity Too Large"
    },
    "414" : {
      "description" : "Request URI Too Large"
    },
    "415" : {
      "description" : "Unsupported Media Type"
    },
    "500" : {
      "description" : "System Error",
      "schema" : {
        "$ref" : "#/definitions/exceptionDetailType"
      }
    },
    "502" : {
      "description" : "Bad Gateway"
    },
    "503" : {
      "description" : "Service Unavailable"
    }
  },
  "externalDocs" : {
    "description" : "Find out more about Oracle Hospitality",
    "url" : "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}